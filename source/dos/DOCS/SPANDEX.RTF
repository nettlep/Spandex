{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fnil\fcharset2\fprq2 Marlett;}{\f15\fnil\fcharset2\fprq2 Wingdings;}
{\f16\fswiss\fcharset0\fprq2 Abadi MT Condensed Light;}{\f17\fmodern\fcharset0\fprq1 Lucida Console;}{\f18\fswiss\fcharset0\fprq2 Arial Narrow;}{\f19\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f20\froman\fcharset0\fprq2 Book Antiqua;}
{\f21\froman\fcharset0\fprq2 Bookman Old Style;}{\f22\fswiss\fcharset0\fprq2 Century Gothic;}{\f23\froman\fcharset0\fprq2 Century Schoolbook;}{\f24\fswiss\fcharset0\fprq2 Haettenschweiler;}{\f25\fdecor\fcharset0\fprq2 Algerian;}
{\f26\fdecor\fcharset0\fprq2 Braggadocio;}{\f27\fswiss\fcharset0\fprq2 Britannic Bold;}{\f28\fscript\fcharset0\fprq2 Brush Script MT;}{\f29\fdecor\fcharset0\fprq2 Colonna MT;}{\f30\fdecor\fcharset0\fprq2 Desdemona;}
{\f31\froman\fcharset0\fprq2 Footlight MT Light;}{\f32\froman\fcharset0\fprq2 Garamond;}{\f33\fdecor\fcharset0\fprq2 Kino MT;}{\f34\froman\fcharset0\fprq2 Wide Latin;}{\f35\fscript\fcharset0\fprq2 Matura MT Script Capitals;}
{\f36\fdecor\fcharset0\fprq2 Playbill;}{\f37\fmodern\fcharset2\fprq1 MS LineDraw;}{\f38\fswiss\fcharset0\fprq2 Tahoma;}{\f39\fmodern\fcharset2\fprq1 OCR-A;}{\f40\fmodern\fcharset0\fprq1 QuickType Mono;}{\f41\fswiss\fcharset0\fprq2 QuickType;}
{\f42\fswiss\fcharset0\fprq2 QuickType Condensed;}{\f43\fnil\fcharset2\fprq2 QuickType Pi;}{\f44\fswiss\fcharset0\fprq2 Lucida Sans Unicode;}{\f45\fswiss\fcharset0\fprq2 Arial Black;}{\f46\fswiss\fcharset0\fprq2 Impact;}
{\f47\fswiss\fcharset0\fprq2 Verdana;}{\f48\fscript\fcharset0\fprq2 Comic Sans MS;}{\f49\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f50\fswiss\fcharset0\fprq2 AvantGarde;}{\f51\froman\fcharset0\fprq2 Bookman;}{\f52\fswiss\fcharset0\fprq2 Helvetica-Light;}
{\f53\fswiss\fcharset0\fprq2 Helvetica-Black;}{\f54\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f55\froman\fcharset0\fprq2 Palatino;}{\f56\fscript\fcharset0\fprq2 ZapfChancery;}{\f57\fdecor\fcharset2\fprq2 ZapfDingbats;}
{\f58\fmodern\fcharset255\fprq2 Modern;}{\f59\fswiss\fcharset0\fprq1 MS Dialog;}{\f60\fmodern\fcharset255\fprq1 Terminal;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext15 header;}{\s16\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext16 footer;}{\*\cs17 
\additive\sbasedon10 page number;}{\s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 \sbasedon0\snext0 toc 1;}{\s19\li2160\widctlpar \b\f5\fs32 \sbasedon0\snext19 API Heading;}{\s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 \sbasedon0\snext0 toc 2;}{
\s21\li400\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 3;}{\s22\li600\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 4;}{\s23\li800\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 5;}{
\s24\li1000\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 6;}{\s25\li1200\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 7;}{\s26\li1400\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 8;}{
\s27\li1600\widctlpar\tqr\tldot\tx8640 \f4\fs20 \sbasedon0\snext0 toc 9;}{\s28\qc\widctlpar \b\scaps\f5\fs40 \sbasedon0\snext28 Section Heading;}{\s29\widctlpar \f5 \sbasedon0\snext29 New Normal;}{\s30\widctlpar \b\f5\up16 \sbasedon29\snext30 
Section sub-heading;}{\s32\li360\widctlpar \b\f5 \sbasedon29\snext32 Section sub-heading 2;}{\s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 \sbasedon29\snext33 USD Data;}}{\*\revtbl {Unknown;}}{\info{\title [Function]}{\author Paul Nettle}{\operator Paul Nettle}
{\creatim\yr1996\mo5\dy28\hr11\min48}{\revtim\yr1997\mo6\dy2\hr8\min6}{\printim\yr1995\mo12\dy31\hr16\min22}{\version17}{\edmins60}{\nofpages317}{\nofwords28521}{\nofchars162574}{\*\company Hot Wax Software}{\vern57431}}
\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd \psz1\linex0\vertalc\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s29\qc\fi-720\li720\widctlpar \f5 {
\b\fs40 Project Spandex
\par }\pard \s29\qc\widctlpar {\b 
\par Specifications and API documentation
\par 
\par May, 1997
\par 
\par }\pard \s29\qc\widctlpar {\b Original content is \'a9 1997, Paul D. Nettle.  All rights reserved.
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  Table of Contents
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}{\footer \pard\plain \s16\widctlpar\brdrb\brdrs\brdrw45\brsp20 \tqc\tx4320\tqr\tx8640 \f4\fs20 
\par \pard \s16\widctlpar\tqr\tx7920\tqr\tx8640 \'a9 1996 Paul D. Nettle.  All Rights Reserved.\tab {\field{\*\fldinst {\cs17  PAGE }}{\fldrslt {\cs17\lang1024 316}}}
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872942}Table of Contents{\*\bkmkend _Toc389872942}
\par \pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\field\fldedit{\*\fldinst  TOC \\t "API Heading,2,Section Heading,1,Section sub-heading,2,Section sub-heading 2,3" }{\fldrslt {\lang1024 Table of Contents\tab }{\field{\*\fldinst {\lang1024 
 GOTOBUTTON _Toc389872942  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872942 }}{\fldrslt {\lang1024 2}}}}}{\lang1024 
\par Section I:  Spandex Design\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872943  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872943 }}{\fldrslt {\lang1024 12}}}}}{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 Trial and Improvement\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872944  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872944 }}{\fldrslt {\lang1024 12}}}}}{
\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section II:  The Rendering Pipeline\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872945  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872945 }}{\fldrslt {\lang1024 14}}}}}{
\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 Phase I \endash  Orientation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872946  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872946 }}{\fldrslt {\lang1024 14}}}}}{
\lang1024 
\par Phase II \endash  Culling\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872947  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872947 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase III \endash  Transformation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872948  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872948 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase IV \endash  Projection\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872949  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872949 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase V \endash  Building the Render List\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872950  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872950 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase VI \endash  Shading\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872951  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872951 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase VII \endash  Clipping\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872952  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872952 }}{\fldrslt {\lang1024 15}}}}}{\lang1024 
\par Phase VIII \endash  Sorting\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872953  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872953 }}{\fldrslt {\lang1024 16}}}}}{\lang1024 
\par Phase IX \endash  Rendering\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872954  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872954 }}{\fldrslt {\lang1024 16}}}}}{\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section III:  The Spandex Multitasker\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872955  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872955 }}{\fldrslt {\lang1024 17}}}}}{
\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 If You Plan to Port to DOS Using the LXM\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872956  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872956 }}{\fldrslt {
\lang1024 17}}}}}{\lang1024 
\par Priorities\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872957  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872957 }}{\fldrslt {\lang1024 18}}}}}{\lang1024 
\par Speed\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872958  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872958 }}{\fldrslt {\lang1024 18}}}}}{\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section IV: Tools For More Robust Code\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872959  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872959 }}{\fldrslt {\lang1024 19}}}}}
{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 Error Tracking and Management\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872960  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872960 }}{\fldrslt {\lang1024 19}}}}}
{\lang1024 
\par Spandex Debugging Flags\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872961  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872961 }}{\fldrslt {\lang1024 20}}}}}{\lang1024 
\par Asserts and Verifies\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872962  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872962 }}{\fldrslt {\lang1024 21}}}}}{\lang1024 
\par The Spandex Memory Manager\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872963  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872963 }}{\fldrslt {\lang1024 22}}}}}{\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section V: USD Files\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872964  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872964 }}{\fldrslt {\lang1024 28}}}}}{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 Comments\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872965  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872965 }}{\fldrslt {\lang1024 28}}}}}{\lang1024 
\par Labels\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872966  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872966 }}{\fldrslt {\lang1024 28}}}}}{\lang1024 
\par Entity Labels\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872967  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872967 }}{\fldrslt {\lang1024 28}}}}}{\lang1024 
\par }\pard\plain \s21\li400\widctlpar\tqr\tldot\tx8640 \f4\fs20 {\lang1024 UNI \endash  Universe\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872968  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872968 }}{\fldrslt {\lang1024 28}}}}}{\lang1024 

\par OBJ \endash  Object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872969  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872969 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par CAM \endash  Camera\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872970  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872970 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par LIG \endash  Light\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872971  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872971 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 Property Labels\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872972  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872972 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 

\par }\pard\plain \s21\li400\widctlpar\tqr\tldot\tx8640 \f4\fs20 {\lang1024 Ambient \endash  Ambient light\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872973  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872973 }}{\fldrslt {\lang1024 29}}}}}{
\lang1024 
\par Backfaces \endash  Show backs flag\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872974  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872974 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par BUMpmap -\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872975  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872975 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par CENter - Center of object used for rotation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872976  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872976 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par Color -\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872977  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872977 }}{\fldrslt {\lang1024 29}}}}}{\lang1024 
\par DEVeloper - Developer's values\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872978  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872978 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par DRAwflags - Drawing Flags\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872979  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872979 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par INTensity - Intensity for current light source\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872980  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872980 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par KA - Ambient light reflection coefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872981  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872981 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par KD - Diffuse light reflection coefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872982  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872982 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par KS - Specular reflection coefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872983  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872983 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par LOCation - Location of object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872984  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872984 }}{\fldrslt {\lang1024 30}}}}}{\lang1024 
\par NAMe - Name an object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872985  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872985 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par OPAcity -\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872986  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872986 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par ORIentation - Original rotational values for the object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872987  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872987 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par POInt - Point\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872988  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872988 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par QUAd - Solid Shaded Quad\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872989  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872989 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par SHAdemodel - Shading model\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872990  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872990 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par SHInevalue - Amount of shine that was applied to the palette table\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872991  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872991 }}{\fldrslt {\lang1024 31}}}}}{\lang1024 
\par SHOwbacks - Show backs flag\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872992  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872992 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par SURface - Specify the surface type of an object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872993  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872993 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par TRBegin - Translation block begin\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872994  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872994 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par TREnd - Translation block end\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872995  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872995 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par TRIangle - Textured Shaded Triangle\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872996  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872996 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par TYPe - Type of object\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872997  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872997 }}{\fldrslt {\lang1024 32}}}}}{\lang1024 
\par VERtex - Vertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872998  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872998 }}{\fldrslt {\lang1024 33}}}}}{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 The #include Preprocessor Directive\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389872999  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389872999 }}{\fldrslt {\lang1024 
33}}}}}{\lang1024 
\par General Notes\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873000  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873000 }}{\fldrslt {\lang1024 33}}}}}{\lang1024 
\par Example USD File\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873001  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873001 }}{\fldrslt {\lang1024 34}}}}}{\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section VI:  Materials\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873002  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873002 }}{\fldrslt {\lang1024 36}}}}}{\lang1024 

\par Section VII:  Virtual Screens\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873003  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873003 }}{\fldrslt {\lang1024 37}}}}}{\lang1024 
\par Section VIII:  The Mouse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873004  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873004 }}{\fldrslt {\lang1024 38}}}}}{\lang1024 
\par Section IX:  TTYPEDEFs and DEFINEs\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873005  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873005 }}{\fldrslt {\lang1024 39}}}}}{\lang1024 
\par Section X:  The Spandex API Reference\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873006  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873006 }}{\fldrslt {\lang1024 40}}}}}{\lang1024 
\par }\pard\plain \s20\li200\sb120\widctlpar\tqr\tldot\tx8640 \b\f4\fs22 {\lang1024 _SPDXClose\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873007  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873007 }}{\fldrslt {\lang1024 41}}}}}{\lang1024 
\par _SPDXFatalError\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873008  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873008 }}{\fldrslt {\lang1024 42}}}}}{\lang1024 
\par _SPDXFree\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873009  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873009 }}{\fldrslt {\lang1024 43}}}}}{\lang1024 
\par _SPDXGetc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873010  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873010 }}{\fldrslt {\lang1024 44}}}}}{\lang1024 
\par _SPDXMalloc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873011  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873011 }}{\fldrslt {\lang1024 45}}}}}{\lang1024 
\par _SPDXOpen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873012  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873012 }}{\fldrslt {\lang1024 46}}}}}{\lang1024 
\par _SPDXRead\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873013  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873013 }}{\fldrslt {\lang1024 47}}}}}{\lang1024 
\par _SPDXRealloc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873014  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873014 }}{\fldrslt {\lang1024 48}}}}}{\lang1024 
\par _SPDXSeek\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873015  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873015 }}{\fldrslt {\lang1024 49}}}}}{\lang1024 
\par _SPDXTell\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873016  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873016 }}{\fldrslt {\lang1024 50}}}}}{\lang1024 
\par _SPDXWrite\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873017  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873017 }}{\fldrslt {\lang1024 51}}}}}{\lang1024 
\par SPDXAddChild\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873018  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873018 }}{\fldrslt {\lang1024 52}}}}}{\lang1024 
\par SPDXAddLight\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873019  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873019 }}{\fldrslt {\lang1024 53}}}}}{\lang1024 
\par SPDXAddMap\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873020  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873020 }}{\fldrslt {\lang1024 54}}}}}{\lang1024 
\par SPDXAddMaterial\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873021  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873021 }}{\fldrslt {\lang1024 55}}}}}{\lang1024 
\par SPDXAddObjectPoint\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873022  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873022 }}{\fldrslt {\lang1024 56}}}}}{\lang1024 
\par SPDXAddObjectTri\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873023  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873023 }}{\fldrslt {\lang1024 57}}}}}{\lang1024 
\par SPDXAddObjectVertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873024  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873024 }}{\fldrslt {\lang1024 58}}}}}{\lang1024 
\par SPDXAssignTriMaterial\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873025  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873025 }}{\fldrslt {\lang1024 59}}}}}{\lang1024 
\par SPDXBuildPhaseOne\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873026  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873026 }}{\fldrslt {\lang1024 60}}}}}{\lang1024 
\par SPDXBuildPhaseTwo\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873027  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873027 }}{\fldrslt {\lang1024 61}}}}}{\lang1024 
\par SPDXBuildRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873028  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873028 }}{\fldrslt {\lang1024 62}}}}}{\lang1024 
\par SPDXByteSortRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873029  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873029 }}{\fldrslt {\lang1024 63}}}}}{\lang1024 
\par SPDXCalcFOV\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873030  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873030 }}{\fldrslt {\lang1024 64}}}}}{\lang1024 
\par SPDXCleanupGlobals\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873031  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873031 }}{\fldrslt {\lang1024 65}}}}}{\lang1024 
\par SPDXCleanupLights\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873032  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873032 }}{\fldrslt {\lang1024 66}}}}}{\lang1024 
\par SPDXCleanupMaps\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873033  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873033 }}{\fldrslt {\lang1024 67}}}}}{\lang1024 
\par SPDXCleanupMaterials\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873034  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873034 }}{\fldrslt {\lang1024 68}}}}}{\lang1024 
\par SPDXCleanupObject\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873035  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873035 }}{\fldrslt {\lang1024 69}}}}}{\lang1024 
\par SPDXCleanupVirtualScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873036  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873036 }}{\fldrslt {\lang1024 70}}}}}{\lang1024 
\par SPDXClearVirtualScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873037  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873037 }}{\fldrslt {\lang1024 71}}}}}{\lang1024 
\par SPDXClipRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873038  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873038 }}{\fldrslt {\lang1024 72}}}}}{\lang1024 
\par SPDXClose\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873039  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873039 }}{\fldrslt {\lang1024 73}}}}}{\lang1024 
\par SPDXCloseServices\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873040  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873040 }}{\fldrslt {\lang1024 74}}}}}{\lang1024 
\par SPDXCloseSTF\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873041  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873041 }}{\fldrslt {\lang1024 75}}}}}{\lang1024 
\par SPDXConvertMap\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873042  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873042 }}{\fldrslt {\lang1024 76}}}}}{\lang1024 
\par SPDXCopyFromScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873043  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873043 }}{\fldrslt {\lang1024 77}}}}}{\lang1024 
\par SPDXCopyToScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873044  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873044 }}{\fldrslt {\lang1024 78}}}}}{\lang1024 
\par SPDXCorrectVirtualAspect\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873045  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873045 }}{\fldrslt {\lang1024 79}}}}}{\lang1024 
\par SPDXCountPixelsInRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873046  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873046 }}{\fldrslt {\lang1024 80}}}}}{\lang1024 
\par SPDXCountPolysInRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873047  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873047 }}{\fldrslt {\lang1024 81}}}}}{\lang1024 
\par SPDXCreateImage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873048  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873048 }}{\fldrslt {\lang1024 82}}}}}{\lang1024 
\par SPDXCreateObject\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873049  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873049 }}{\fldrslt {\lang1024 83}}}}}{\lang1024 
\par SPDXCullHierarchy\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873050  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873050 }}{\fldrslt {\lang1024 84}}}}}{\lang1024 
\par SPDXDestroyImage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873051  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873051 }}{\fldrslt {\lang1024 85}}}}}{\lang1024 
\par SPDXDMalloc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873052  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873052 }}{\fldrslt {\lang1024 86}}}}}{\lang1024 
\par SPDXDrawRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873053  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873053 }}{\fldrslt {\lang1024 87}}}}}{\lang1024 
\par SPDXDrawScreenLine\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873054  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873054 }}{\fldrslt {\lang1024 89}}}}}{\lang1024 
\par SPDXDrawScreenText\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873055  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873055 }}{\fldrslt {\lang1024 90}}}}}{\lang1024 
\par SPDXDrawVirtualLine\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873056  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873056 }}{\fldrslt {\lang1024 91}}}}}{\lang1024 
\par SPDXDrawVirtualText\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873057  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873057 }}{\fldrslt {\lang1024 92}}}}}{\lang1024 
\par SPDXDumpMemLog\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873058  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873058 }}{\fldrslt {\lang1024 93}}}}}{\lang1024 
\par SPDXFadePalettes\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873059  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873059 }}{\fldrslt {\lang1024 94}}}}}{\lang1024 
\par SPDXFindLightByName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873060  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873060 }}{\fldrslt {\lang1024 95}}}}}{\lang1024 
\par SPDXFindLightByNameLen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873061  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873061 }}{\fldrslt {\lang1024 96}}}}}{\lang1024 
\par SPDXFindMapByName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873062  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873062 }}{\fldrslt {\lang1024 97}}}}}{\lang1024 
\par SPDXFindMaterialByName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873063  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873063 }}{\fldrslt {\lang1024 98}}}}}{\lang1024 
\par SPDXFindMemOwner\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873064  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873064 }}{\fldrslt {\lang1024 99}}}}}{\lang1024 
\par SPDXFindObjectByName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873065  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873065 }}{\fldrslt {\lang1024 100}}}}}{\lang1024 
\par SPDXFindObjectByNameLen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873066  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873066 }}{\fldrslt {\lang1024 101}}}}}{\lang1024 
\par SPDXFlushBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873067  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873067 }}{\fldrslt {\lang1024 102}}}}}{\lang1024 
\par SPDXGetBackgroundColor\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873068  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873068 }}{\fldrslt {\lang1024 103}}}}}{\lang1024 
\par SPDXGetc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873069  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873069 }}{\fldrslt {\lang1024 104}}}}}{\lang1024 
\par SPDXGetChild\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873070  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873070 }}{\fldrslt {\lang1024 105}}}}}{\lang1024 
\par SPDXGetChildCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873071  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873071 }}{\fldrslt {\lang1024 106}}}}}{\lang1024 
\par SPDXGetClosestColor\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873072  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873072 }}{\fldrslt {\lang1024 107}}}}}{\lang1024 
\par SPDXGetCopyrightMessage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873073  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873073 }}{\fldrslt {\lang1024 108}}}}}{\lang1024 
\par SPDXGetDebugState\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873074  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873074 }}{\fldrslt {\lang1024 109}}}}}{\lang1024 
\par SPDXGetDistance2D\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873075  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873075 }}{\fldrslt {\lang1024 110}}}}}{\lang1024 
\par SPDXGetDistance3D\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873076  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873076 }}{\fldrslt {\lang1024 111}}}}}{\lang1024 
\par SPDXGetErrorString\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873077  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873077 }}{\fldrslt {\lang1024 112}}}}}{\lang1024 
\par SPDXGetFatalErrors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873078  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873078 }}{\fldrslt {\lang1024 113}}}}}{\lang1024 
\par SPDXGetFileType\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873079  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873079 }}{\fldrslt {\lang1024 114}}}}}{\lang1024 
\par SPDXGetGlobalResolution\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873080  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873080 }}{\fldrslt {\lang1024 115}}}}}{\lang1024 
\par SPDXGetLightCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873081  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873081 }}{\fldrslt {\lang1024 116}}}}}{\lang1024 
\par SPDXGetLightIntensity\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873082  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873082 }}{\fldrslt {\lang1024 117}}}}}{\lang1024 
\par SPDXGetLightLocal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873083  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873083 }}{\fldrslt {\lang1024 118}}}}}{\lang1024 
\par SPDXGetLightName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873084  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873084 }}{\fldrslt {\lang1024 119}}}}}{\lang1024 
\par SPDXGetLoggedErrors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873085  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873085 }}{\fldrslt {\lang1024 120}}}}}{\lang1024 
\par SPDXGetLoggedStrings\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873086  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873086 }}{\fldrslt {\lang1024 121}}}}}{\lang1024 
\par SPDXGetMaterialAmbientLight\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873087  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873087 }}{\fldrslt {\lang1024 122}}}}}{\lang1024 
\par SPDXGetMaterialAmbientReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873088  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873088 }}{\fldrslt {\lang1024 123}}}}}{\lang1024 
\par SPDXGetMaterialBumpMap\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873089  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873089 }}{\fldrslt {\lang1024 124}}}}}{\lang1024 
\par SPDXGetMaterialColor\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873090  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873090 }}{\fldrslt {\lang1024 125}}}}}{\lang1024 
\par SPDXGetMaterialDiffuseReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873091  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873091 }}{\fldrslt {\lang1024 126}}}}}{\lang1024 
\par SPDXGetMaterialName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873092  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873092 }}{\fldrslt {\lang1024 127}}}}}{\lang1024 
\par SPDXGetMaterialShineCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873093  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873093 }}{\fldrslt {\lang1024 128}}}}}{\lang1024 
\par SPDXGetMaterialSpecularReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873094  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873094 }}{\fldrslt {\lang1024 129}}}}}{\lang1024 
\par SPDXGetMaterialSurface\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873095  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873095 }}{\fldrslt {\lang1024 130}}}}}{\lang1024 
\par SPDXGetMaterialTexture\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873096  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873096 }}{\fldrslt {\lang1024 131}}}}}{\lang1024 
\par SPDXGetMaterialTransparency\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873097  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873097 }}{\fldrslt {\lang1024 132}}}}}{\lang1024 
\par SPDXGetMemReport\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873098  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873098 }}{\fldrslt {\lang1024 133}}}}}{\lang1024 
\par SPDXGetMode\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873099  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873099 }}{\fldrslt {\lang1024 134}}}}}{\lang1024 
\par SPDXGetNearZ\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873100  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873100 }}{\fldrslt {\lang1024 135}}}}}{\lang1024 
\par SPDXGetObjectCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873101  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873101 }}{\fldrslt {\lang1024 136}}}}}{\lang1024 
\par SPDXGetObjectDevUse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873102  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873102 }}{\fldrslt {\lang1024 137}}}}}{\lang1024 
\par SPDXGetObjectDirection\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873103  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873103 }}{\fldrslt {\lang1024 138}}}}}{\lang1024 
\par SPDXGetObjectDrawFlags\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873104  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873104 }}{\fldrslt {\lang1024 139}}}}}{\lang1024 
\par SPDXGetObjectLense\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873105  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873105 }}{\fldrslt {\lang1024 140}}}}}{\lang1024 
\par SPDXGetObjectLocal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873106  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873106 }}{\fldrslt {\lang1024 141}}}}}{\lang1024 
\par SPDXGetObjectName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873107  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873107 }}{\fldrslt {\lang1024 142}}}}}{\lang1024 
\par SPDXGetObjectShadeModel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873108  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873108 }}{\fldrslt {\lang1024 143}}}}}{\lang1024 
\par SPDXGetObjectShowBacks\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873109  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873109 }}{\fldrslt {\lang1024 144}}}}}{\lang1024 
\par SPDXGetObjectSteadyOrientation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873110  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873110 }}{\fldrslt {\lang1024 145}}}}}{\lang1024 
\par SPDXGetObjectTriCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873111  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873111 }}{\fldrslt {\lang1024 146}}}}}{\lang1024 
\par SPDXGetObjectType\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873112  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873112 }}{\fldrslt {\lang1024 147}}}}}{\lang1024 
\par SPDXGetObjectVertexCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873113  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873113 }}{\fldrslt {\lang1024 148}}}}}{\lang1024 
\par SPDXGetObjectWorld\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873114  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873114 }}{\fldrslt {\lang1024 149}}}}}{\lang1024 
\par SPDXGetPalette\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873115  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873115 }}{\fldrslt {\lang1024 150}}}}}{\lang1024 
\par SPDXGetPointCount\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873116  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873116 }}{\fldrslt {\lang1024 151}}}}}{\lang1024 
\par SPDXGetPointVertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873117  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873117 }}{\fldrslt {\lang1024 152}}}}}{\lang1024 
\par SPDXGetRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873118  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873118 }}{\fldrslt {\lang1024 153}}}}}{\lang1024 
\par SPDXGetScreenPixel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873119  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873119 }}{\fldrslt {\lang1024 154}}}}}{\lang1024 
\par SPDXGetSVGAInfo\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873120  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873120 }}{\fldrslt {\lang1024 155}}}}}{\lang1024 
\par SPDXGetTriDistance\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873121  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873121 }}{\fldrslt {\lang1024 156}}}}}{\lang1024 
\par SPDXGetTriNormal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873122  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873122 }}{\fldrslt {\lang1024 157}}}}}{\lang1024 
\par SPDXGetTriNormalFromOrientation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873123  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873123 }}{\fldrslt {\lang1024 158}}}}}{\lang1024 
\par SPDXGetTriVertices\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873124  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873124 }}{\fldrslt {\lang1024 159}}}}}{\lang1024 
\par SPDXGetVersion\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873125  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873125 }}{\fldrslt {\lang1024 160}}}}}{\lang1024 
\par SPDXGetVertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873126  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873126 }}{\fldrslt {\lang1024 161}}}}}{\lang1024 
\par SPDXGetVESAInfo\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873127  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873127 }}{\fldrslt {\lang1024 162}}}}}{\lang1024 
\par SPDXGetVideoWindow\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873128  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873128 }}{\fldrslt {\lang1024 163}}}}}{\lang1024 
\par SPDXGetVirtualBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873129  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873129 }}{\fldrslt {\lang1024 164}}}}}{\lang1024 
\par SPDXGetVirtualCenter\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873130  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873130 }}{\fldrslt {\lang1024 165}}}}}{\lang1024 
\par SPDXGetVirtualClipping\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873131  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873131 }}{\fldrslt {\lang1024 166}}}}}{\lang1024 
\par SPDXGetVirtualfResolution\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873132  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873132 }}{\fldrslt {\lang1024 167}}}}}{\lang1024 
\par SPDXGetVirtualiResolution\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873133  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873133 }}{\fldrslt {\lang1024 168}}}}}{\lang1024 
\par SPDXGetVirtualMaxPolysToRender\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873134  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873134 }}{\fldrslt {\lang1024 169}}}}}{\lang1024 
\par SPDXGetVirtualPixel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873135  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873135 }}{\fldrslt {\lang1024 170}}}}}{\lang1024 
\par SPDXGetVirtualScaleFactors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873136  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873136 }}{\fldrslt {\lang1024 171}}}}}{\lang1024 
\par SPDXGetVirtualZBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873137  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873137 }}{\fldrslt {\lang1024 172}}}}}{\lang1024 
\par SPDXInheritObject\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873138  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873138 }}{\fldrslt {\lang1024 173}}}}}{\lang1024 
\par SPDXInit\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873139  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873139 }}{\fldrslt {\lang1024 174}}}}}{\lang1024 
\par SPDXInitByteSortStack\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873140  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873140 }}{\fldrslt {\lang1024 175}}}}}{\lang1024 
\par SPDXInitGlobals\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873141  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873141 }}{\fldrslt {\lang1024 176}}}}}{\lang1024 
\par SPDXInitializeInterrupts\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873142  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873142 }}{\fldrslt {\lang1024 177}}}}}{\lang1024 
\par SPDXInitMaps\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873143  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873143 }}{\fldrslt {\lang1024 178}}}}}{\lang1024 
\par SPDXInitMaterials\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873144  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873144 }}{\fldrslt {\lang1024 179}}}}}{\lang1024 
\par SPDXInitMem\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873145  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873145 }}{\fldrslt {\lang1024 180}}}}}{\lang1024 
\par SPDXInitMouse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873146  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873146 }}{\fldrslt {\lang1024 181}}}}}{\lang1024 
\par SPDXInitRenderer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873147  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873147 }}{\fldrslt {\lang1024 182}}}}}{\lang1024 
\par SPDXInitScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873148  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873148 }}{\fldrslt {\lang1024 183}}}}}{\lang1024 
\par SPDXInitTables\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873149  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873149 }}{\fldrslt {\lang1024 184}}}}}{\lang1024 
\par SPDXInitVirtualScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873150  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873150 }}{\fldrslt {\lang1024 185}}}}}{\lang1024 
\par SPDXint86\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873151  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873151 }}{\fldrslt {\lang1024 186}}}}}{\lang1024 
\par SPDXint86x\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873152  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873152 }}{\fldrslt {\lang1024 187}}}}}{\lang1024 
\par SPDXMakeMatrixFromVector\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873153  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873153 }}{\fldrslt {\lang1024 188}}}}}{\lang1024 
\par SPDXMakeObjectDefault\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873154  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873154 }}{\fldrslt {\lang1024 189}}}}}{\lang1024 
\par SPDXMemCopyBYTE\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873155  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873155 }}{\fldrslt {\lang1024 190}}}}}{\lang1024 
\par SPDXMemCopyDWORD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873156  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873156 }}{\fldrslt {\lang1024 191}}}}}{\lang1024 
\par SPDXMemCopyWORD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873157  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873157 }}{\fldrslt {\lang1024 192}}}}}{\lang1024 
\par SPDXMemSetBYTE\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873158  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873158 }}{\fldrslt {\lang1024 193}}}}}{\lang1024 
\par SPDXMemSetDWORD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873159  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873159 }}{\fldrslt {\lang1024 194}}}}}{\lang1024 
\par SPDXMemSetWORD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873160  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873160 }}{\fldrslt {\lang1024 195}}}}}{\lang1024 
\par SPDXOpen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873161  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873161 }}{\fldrslt {\lang1024 196}}}}}{\lang1024 
\par SPDXOpenServices\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873162  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873162 }}{\fldrslt {\lang1024 197}}}}}{\lang1024 
\par SPDXOpenSTF\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873163  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873163 }}{\fldrslt {\lang1024 198}}}}}{\lang1024 
\par SPDXOrientHierarchy\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873164  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873164 }}{\fldrslt {\lang1024 199}}}}}{\lang1024 
\par SPDXPopPalette\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873165  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873165 }}{\fldrslt {\lang1024 200}}}}}{\lang1024 
\par SPDXProjectHierarchy\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873166  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873166 }}{\fldrslt {\lang1024 201}}}}}{\lang1024 
\par SPDXPushPalette\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873167  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873167 }}{\fldrslt {\lang1024 202}}}}}{\lang1024 
\par SPDXPutc\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873168  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873168 }}{\fldrslt {\lang1024 203}}}}}{\lang1024 
\par SPDXQuantizeImage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873169  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873169 }}{\fldrslt {\lang1024 204}}}}}{\lang1024 
\par SPDXQuantizeImages\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873170  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873170 }}{\fldrslt {\lang1024 205}}}}}{\lang1024 
\par SPDXRead\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873171  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873171 }}{\fldrslt {\lang1024 206}}}}}{\lang1024 
\par SPDXReadCompressedUSD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873172  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873172 }}{\fldrslt {\lang1024 207}}}}}{\lang1024 
\par SPDXReadImage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873173  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873173 }}{\fldrslt {\lang1024 208}}}}}{\lang1024 
\par SPDXReadMouse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873174  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873174 }}{\fldrslt {\lang1024 209}}}}}{\lang1024 
\par SPDXReadRawUSD\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873175  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873175 }}{\fldrslt {\lang1024 210}}}}}{\lang1024 
\par SPDXReadString\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873176  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873176 }}{\fldrslt {\lang1024 211}}}}}{\lang1024 
\par SPDXRebuildGlobalLightList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873177  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873177 }}{\fldrslt {\lang1024 212}}}}}{\lang1024 
\par SPDXRegisterFont\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873178  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873178 }}{\fldrslt {\lang1024 213}}}}}{\lang1024 
\par SPDXReleaseSTF\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873179  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873179 }}{\fldrslt {\lang1024 214}}}}}{\lang1024 
\par SPDXRemoveChild\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873180  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873180 }}{\fldrslt {\lang1024 215}}}}}{\lang1024 
\par SPDXRenderHierarchy\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873181  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873181 }}{\fldrslt {\lang1024 216}}}}}{\lang1024 
\par SPDXReplacePhongMap\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873182  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873182 }}{\fldrslt {\lang1024 219}}}}}{\lang1024 
\par SPDXResetClipper\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873183  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873183 }}{\fldrslt {\lang1024 220}}}}}{\lang1024 
\par SPDXResetErrorFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873184  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873184 }}{\fldrslt {\lang1024 221}}}}}{\lang1024 
\par SPDXResetInterrupts\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873185  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873185 }}{\fldrslt {\lang1024 222}}}}}{\lang1024 
\par SPDXResetVirtualScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873186  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873186 }}{\fldrslt {\lang1024 223}}}}}{\lang1024 
\par SPDXResetVirtualZBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873187  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873187 }}{\fldrslt {\lang1024 224}}}}}{\lang1024 
\par SPDXRotateObject\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873188  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873188 }}{\fldrslt {\lang1024 225}}}}}{\lang1024 
\par SPDXSeek\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873189  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873189 }}{\fldrslt {\lang1024 226}}}}}{\lang1024 
\par SPDXSelectCompressedBumFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873190  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873190 }}{\fldrslt {\lang1024 227}}}}}{\lang1024 
\par SPDXSelectCompressedMapFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873191  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873191 }}{\fldrslt {\lang1024 228}}}}}{\lang1024 
\par SPDXSelectRawBumFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873192  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873192 }}{\fldrslt {\lang1024 229}}}}}{\lang1024 
\par SPDXSelectRawMapFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873193  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873193 }}{\fldrslt {\lang1024 230}}}}}{\lang1024 
\par SPDXSelectSTF\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873194  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873194 }}{\fldrslt {\lang1024 231}}}}}{\lang1024 
\par SPDXSetBackgroundColor\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873195  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873195 }}{\fldrslt {\lang1024 232}}}}}{\lang1024 
\par SPDXSetCurrentVScreen\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873196  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873196 }}{\fldrslt {\lang1024 233}}}}}{\lang1024 
\par SPDXSetDebugState\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873197  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873197 }}{\fldrslt {\lang1024 234}}}}}{\lang1024 
\par SPDXSetDebugStateFromFile\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873198  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873198 }}{\fldrslt {\lang1024 235}}}}}{\lang1024 
\par SPDXSetFatalErrors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873199  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873199 }}{\fldrslt {\lang1024 236}}}}}{\lang1024 
\par SPDXSetGlobalResolution\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873200  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873200 }}{\fldrslt {\lang1024 237}}}}}{\lang1024 
\par SPDXSetLightIntensity\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873201  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873201 }}{\fldrslt {\lang1024 238}}}}}{\lang1024 
\par SPDXSetLightLocal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873202  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873202 }}{\fldrslt {\lang1024 239}}}}}{\lang1024 
\par SPDXSetLightName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873203  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873203 }}{\fldrslt {\lang1024 240}}}}}{\lang1024 
\par SPDXSetLoggedErrors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873204  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873204 }}{\fldrslt {\lang1024 241}}}}}{\lang1024 
\par SPDXSetLoggedStrings\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873205  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873205 }}{\fldrslt {\lang1024 242}}}}}{\lang1024 
\par SPDXSetMaterialAmbientLight\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873206  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873206 }}{\fldrslt {\lang1024 243}}}}}{\lang1024 
\par SPDXSetMaterialAmbientReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873207  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873207 }}{\fldrslt {\lang1024 244}}}}}{\lang1024 
\par SPDXSetMaterialBumpMap\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873208  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873208 }}{\fldrslt {\lang1024 245}}}}}{\lang1024 
\par SPDXSetMaterialColor\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873209  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873209 }}{\fldrslt {\lang1024 246}}}}}{\lang1024 
\par SPDXSetMaterialDiffuseReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873210  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873210 }}{\fldrslt {\lang1024 247}}}}}{\lang1024 
\par SPDXSetMaterialName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873211  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873211 }}{\fldrslt {\lang1024 248}}}}}{\lang1024 
\par SPDXSetMaterialShineCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873212  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873212 }}{\fldrslt {\lang1024 249}}}}}{\lang1024 
\par SPDXSetMaterialSpecularReflectCoefficient\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873213  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873213 }}{\fldrslt {\lang1024 250}}}}}{\lang1024 
\par SPDXSetMaterialSurface\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873214  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873214 }}{\fldrslt {\lang1024 251}}}}}{\lang1024 
\par SPDXSetMaterialTexture\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873215  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873215 }}{\fldrslt {\lang1024 252}}}}}{\lang1024 
\par SPDXSetMaterialTransparency\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873216  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873216 }}{\fldrslt {\lang1024 253}}}}}{\lang1024 
\par SPDXSetMode\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873217  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873217 }}{\fldrslt {\lang1024 254}}}}}{\lang1024 
\par SPDXSetMousePosition\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873218  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873218 }}{\fldrslt {\lang1024 256}}}}}{\lang1024 
\par SPDXSetMouseRange\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873219  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873219 }}{\fldrslt {\lang1024 257}}}}}{\lang1024 
\par SPDXSetNearZ\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873220  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873220 }}{\fldrslt {\lang1024 258}}}}}{\lang1024 
\par SPDXSetObjectDevUse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873221  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873221 }}{\fldrslt {\lang1024 259}}}}}{\lang1024 
\par SPDXSetObjectDirection\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873222  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873222 }}{\fldrslt {\lang1024 260}}}}}{\lang1024 
\par SPDXSetObjectDrawFlags\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873223  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873223 }}{\fldrslt {\lang1024 261}}}}}{\lang1024 
\par SPDXSetObjectLense\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873224  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873224 }}{\fldrslt {\lang1024 262}}}}}{\lang1024 
\par SPDXSetObjectLocal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873225  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873225 }}{\fldrslt {\lang1024 263}}}}}{\lang1024 
\par SPDXSetObjectName\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873226  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873226 }}{\fldrslt {\lang1024 264}}}}}{\lang1024 
\par SPDXSetObjectShadeModel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873227  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873227 }}{\fldrslt {\lang1024 265}}}}}{\lang1024 
\par SPDXSetObjectShowBacks\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873228  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873228 }}{\fldrslt {\lang1024 266}}}}}{\lang1024 
\par SPDXSetObjectSteadyOrientation\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873229  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873229 }}{\fldrslt {\lang1024 267}}}}}{\lang1024 
\par SPDXSetObjectType\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873230  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873230 }}{\fldrslt {\lang1024 268}}}}}{\lang1024 
\par SPDXSetObjectWorld\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873231  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873231 }}{\fldrslt {\lang1024 269}}}}}{\lang1024 
\par SPDXSetPalette\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873232  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873232 }}{\fldrslt {\lang1024 270}}}}}{\lang1024 
\par SPDXSetPointVertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873233  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873233 }}{\fldrslt {\lang1024 271}}}}}{\lang1024 
\par SPDXSetScreenPixel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873234  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873234 }}{\fldrslt {\lang1024 272}}}}}{\lang1024 
\par SPDXSetTextMode\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873235  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873235 }}{\fldrslt {\lang1024 273}}}}}{\lang1024 
\par SPDXSetTriNormal\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873236  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873236 }}{\fldrslt {\lang1024 274}}}}}{\lang1024 
\par SPDXSetTriVertices\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873237  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873237 }}{\fldrslt {\lang1024 275}}}}}{\lang1024 
\par SPDXSetVertex\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873238  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873238 }}{\fldrslt {\lang1024 276}}}}}{\lang1024 
\par SPDXSetVideoWindow\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873239  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873239 }}{\fldrslt {\lang1024 277}}}}}{\lang1024 
\par SPDXSetVirtualBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873240  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873240 }}{\fldrslt {\lang1024 278}}}}}{\lang1024 
\par SPDXSetVirtualCenter\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873241  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873241 }}{\fldrslt {\lang1024 279}}}}}{\lang1024 
\par SPDXSetVirtualClipping\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873242  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873242 }}{\fldrslt {\lang1024 280}}}}}{\lang1024 
\par SPDXSetVirtualLense\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873243  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873243 }}{\fldrslt {\lang1024 281}}}}}{\lang1024 
\par SPDXSetVirtualMaxPolysToRender\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873244  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873244 }}{\fldrslt {\lang1024 282}}}}}{\lang1024 
\par SPDXSetVirtualPixel\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873245  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873245 }}{\fldrslt {\lang1024 283}}}}}{\lang1024 
\par SPDXSetVirtualResolution\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873246  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873246 }}{\fldrslt {\lang1024 284}}}}}{\lang1024 
\par SPDXSetVirtualScaleFactors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873247  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873247 }}{\fldrslt {\lang1024 285}}}}}{\lang1024 
\par SPDXSetVirtualZBuffer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873248  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873248 }}{\fldrslt {\lang1024 286}}}}}{\lang1024 
\par SPDXShadeRenderList\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873249  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873249 }}{\fldrslt {\lang1024 287}}}}}{\lang1024 
\par SPDXSplitPolygonZ\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873250  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873250 }}{\fldrslt {\lang1024 288}}}}}{\lang1024 
\par SPDXTell\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873251  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873251 }}{\fldrslt {\lang1024 289}}}}}{\lang1024 
\par SPDXTransformHierarchy\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873252  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873252 }}{\fldrslt {\lang1024 290}}}}}{\lang1024 
\par SPDXTranslateObject\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873253  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873253 }}{\fldrslt {\lang1024 291}}}}}{\lang1024 
\par SPDXTranslateObjectFacing\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873254  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873254 }}{\fldrslt {\lang1024 292}}}}}{\lang1024 
\par SPDXTranslateLight\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873255  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873255 }}{\fldrslt {\lang1024 293}}}}}{\lang1024 
\par SPDXUnifyObjectNormals\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873256  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873256 }}{\fldrslt {\lang1024 294}}}}}{\lang1024 
\par SPDXUninit\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873257  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873257 }}{\fldrslt {\lang1024 295}}}}}{\lang1024 
\par SPDXUninitByteSortStack\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873258  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873258 }}{\fldrslt {\lang1024 296}}}}}{\lang1024 
\par SPDXUninitMem\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873259  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873259 }}{\fldrslt {\lang1024 297}}}}}{\lang1024 
\par SPDXUninitMouse\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873260  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873260 }}{\fldrslt {\lang1024 298}}}}}{\lang1024 
\par SPDXUninitRenderer\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873261  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873261 }}{\fldrslt {\lang1024 299}}}}}{\lang1024 
\par SPDXUpdateMaterialsLighting\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873262  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873262 }}{\fldrslt {\lang1024 300}}}}}{\lang1024 
\par SPDXValidateMemory\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873263  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873263 }}{\fldrslt {\lang1024 301}}}}}{\lang1024 
\par SPDXVectorCrossProduct\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873264  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873264 }}{\fldrslt {\lang1024 302}}}}}{\lang1024 
\par SPDXVirtualAntiAlias\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873265  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873265 }}{\fldrslt {\lang1024 303}}}}}{\lang1024 
\par SPDXVirtualSmoothFrame\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873266  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873266 }}{\fldrslt {\lang1024 304}}}}}{\lang1024 
\par SPDXWrite\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873267  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873267 }}{\fldrslt {\lang1024 305}}}}}{\lang1024 
\par SPDXWriteImage\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873268  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873268 }}{\fldrslt {\lang1024 306}}}}}{\lang1024 
\par MLTIFork\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873269  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873269 }}{\fldrslt {\lang1024 307}}}}}{\lang1024 
\par MLTIGetProcID\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873270  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873270 }}{\fldrslt {\lang1024 308}}}}}{\lang1024 
\par MLTIInit\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873271  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873271 }}{\fldrslt {\lang1024 309}}}}}{\lang1024 
\par MLTISemaphoreGet\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873272  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873272 }}{\fldrslt {\lang1024 310}}}}}{\lang1024 
\par MLTISemaphoreSet\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873273  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873273 }}{\fldrslt {\lang1024 311}}}}}{\lang1024 
\par MLTISetPriority\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873274  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873274 }}{\fldrslt {\lang1024 312}}}}}{\lang1024 
\par MLTISetProcessActive\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873275  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873275 }}{\fldrslt {\lang1024 313}}}}}{\lang1024 
\par MLTISetSpeed\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873276  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873276 }}{\fldrslt {\lang1024 314}}}}}{\lang1024 
\par MLTIUninit\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873277  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873277 }}{\fldrslt {\lang1024 315}}}}}{\lang1024 
\par }\pard\plain \s18\sb120\widctlpar\tqr\tldot\tx8640 \b\i\f4 {\lang1024 Section XI:  Macros\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc389873278  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc389873278 }}{\fldrslt {\lang1024 316}}}}}{\lang1024 
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\i\scaps0\fs24 \sect }\sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 
Spandex Real-Time Rendering System \endash  The Spandex Design
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872943}Section I:  Spandex Design{\*\bkmkend _Toc389872943}
\par \pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar This section is written in my own words.  I did this because I\rquote ve poured my heart and soul into Spandex and its design, and I didn\rquote t want to mask that effort.  This section also contains a bit of opinion.
\par \pard \s29\widctlpar 
\par \pard \s29\qc\widctlpar {\b\i \ldblquote The ideal design is an elegant design.\rdblquote 
\par }\pard \s29\widctlpar 
\par \pard \s29\widctlpar Few people will argue with that statement (personally, I don\rquote t know anybody that would argue it, but there are a lot of people out there).  For the sake of clarity, Webster defines elegant as:
\par \pard \s29\widctlpar 
\par \pard \s29\qc\widctlpar \ldblquote {\i marked by concision, incisiveness, and ingenuity; cleverly apt and simple [an elegant solution to a complex problem]}\rdblquote 
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar It is also my personal belief that an elegant design is based on simplicity.  Much to my surprise, apparently Webster agrees.  I don\rquote 
t mean to say that an elegant design is always a simple design.  What I mean is that in most cases an elegant design is based on many simple modular designs acting as one.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The best example of this is the {\i complex system} of nature.  A forest of trees is a {\i complex system}
.  But looking closer, it is mostly a bunch of trees.  If you were to admire a single tree, you would see that it is primarily a bunch of branches and leaves.  And looking closer still, at a single leaf, you\rquote ll find that it\rquote 
s actually a very simple and beautiful thing.  It is this combination of simple systems working in unison that make the complex system.
\par \pard \s29\widctlpar 
\par This is the basis behind the design of Spandex.
\par 
\par \pard \s29\widctlpar This is all well and good, and makes a pretty introduction, but it doesn\rquote t tell you {\i how}
 to accomplish this design or how to write the code.  There is one way that I know of to accomplish this design, though it is a very impractical.  I call it \ldblquote trial and improvement.\rdblquote 
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872944}Trial and Improvement{\*\bkmkend _Toc389872944}
\par \pard\plain \s29\widctlpar \f5 Many programmers find that once an application is complete, if they could go back and redesign and rewrite it, they could have done it better.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar What happens if you do?  Does it improve?  Yes, it most certainly and unequivocally does make a tremendous difference.  Especially in a real-time environment that requires the maximum performance from a machine.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
A key factor to this maximum performance is the way in which the different modules of a design fit together.  As a project moves forward in its development, there are always those unseen roadblocks.  In most cases, this may be something as simple as havin
g to pass too many parameters around that a more elegant solution could avoid.  This is usually not a problem for most applications, but it can make a tremendous difference to a real-time application.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The problem is practicality.  Fortunately, this methodology was practical for the development of Spandex.  As a matter of fact, it was so practical, that certain modules of Spandex\rquote 
s design were redesigned and rewritten as many as eight to ten times!  Many people would ask \ldblquote and you\rquote re proud of this?\rdblquote   Yes, I certainly am!  Since {\i everything} can {\i always}
 use some level of improvement, I was able to improve (and improve, and improve, etc.)
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar I found that the ratio of redesigns to improvements diminishes quickly with the number of redesigns.  Sure, Spandex could use a few more redesigns, but the level of improvement would be negligible.
\par \pard \s29\widctlpar 
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 In the sections to come, I\rquote ll explain many of the modules of Spandex\rquote s design.
\par 
\par }\pard \li5040\widctlpar {\f5\fs24 Paul D. Nettle
\par }\pard \li5040\widctlpar {\f5\fs24 Author of Spandex
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  The Rendering Pipeline
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872945}Section II:  The Rendering Pipeline{\*\bkmkend _Toc389872945}
\par \pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar The rendering pipeline for Spandex has been refined and refined for maximum performance.  This section describes the key components of the pipeline.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Before the pipeline can be entered, there is some setup work that must be done first.  This work deals with materials, lighting, and the camera lense (including the aspect ratio).  See {\i SPDXRenderHierarchy}
 for more information and an example of a replacement rendering pipeline.
\par \pard \s29\widctlpar 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872946}Phase I \endash  Orientation{\*\bkmkend _Toc389872946}
\par \pard\plain \s29\widctlpar \f5 Before we start talking about the orientation, lets spend a little time discussing the relativity of the hierarchy.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar In the hierarchy, there needs to be a single top-level object, of which all other objects are children.  I\rquote ll refer to this as the {\i Universe} object.  More specifically, this will be the {\i Absolute Universe}
.  I use the term \lquote absolute\rquote  because it is possible to have multiple universes within a hierarchy (each would be children of the \lquote absolute universe\rquote ).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
One example of this might be to have all objects for all levels in a game loaded, and as the player advanced from level to level, the game would simply switch to a different sub-universe, so game-play could continue without delay.  Note that if you render
 a hierarchy, you may choose any object from within that hierarchy to render, and Spandex will only render that object and the hierarchy underneath it, all other objects are left totally untouched.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar It is important to note the relationships between objects.  Each object has a local location (noted as LLoc in the OBJ struct).  This LLoc represents the location of the object relative to it\rquote s parent\rquote 
s LLoc.  Note that the absolute universe object is relative to the absolute center of space (0,0,0).  In this way, moving the LLoc for the absolute universe will move all objects in the universe.  If you decide to try this little test, don\rquote 
t expect to see a difference in the rendered screen, since the camera is also moved.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
Each object has a list of vertices.  These vertices are relative to the absolute center of space (0,0,0).  This way, when rotated, they are automatically rotated about their center.  Later, when the objects are transformed, they end up in world-space (see
 the following sub-section on Transformation).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar There are two phases to the orientation phase.  The first phase orients all objects around their parents through the hierarchy.  This rotation matrix is stored in the object\rquote 
s PhaseOne matrix.  The second phase performs inverse rotations of objects around the camera.  This rotation matrix is stored in the object\rquote s Phas
eTwo matrix.  These matrices are used later in the Culling and Transform phases of the rendering pipeline.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872947}Phase II \endash  Culling{\*\bkmkend _Toc389872947}
\par \pard\plain \s29\widctlpar \f5 Culling is the process of removing polygons that are facing away from the camera, and hence, are not visible.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Culling is a simpl
e process of comparing a polygon or vertex normal to the camera normal, and if they are facing each other, then the polygon or vertex is visible.  All other vertices and polygons (the non-visible ones) are no longer dealt with.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872948}Phase III \endash  Transformation{\*\bkmkend _Toc389872948}
\par \pard\plain \s29\widctlpar \f5 The transformation phase is the phase that actually does the rotation of the polygon vertices.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar When this phase has completed, all the vertex locations have been moved from their LLoc (local location) structures into their WLoc (world location) structures.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872949}Phase IV \endash  Projection{\*\bkmkend _Toc389872949}
\par \pard\plain \s29\widctlpar \f5 The projection phase projects all visible vertices onto a 2D surface to allow rendering to the virtual screens.
\par \pard \s29\widctlpar 
\par Vertices that are shared by many polygons are only projected once.
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872950}Phase V \endash  Building the Render List{\*\bkmkend _Toc389872950}
\par \pard\plain \s29\widctlpar \f5 The render list is built to allow the following processes to access all polygons and vertices at a glance rather than having to traverse the hierarchy.  Only visible polygons and vertices are added.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872951}Phase VI \endash  Shading{\*\bkmkend _Toc389872951}
\par \pard\plain \s29\widctlpar \f5 Shading is performed on all polygons (in the case of Lambert shading) and vertices (in the case of all smooth-shading techniques).
\par \pard \s29\widctlpar 
\par Vertices that are shared by many polygons are only shaded once.
\par 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872952}Phase VII \endash  Clipping{\*\bkmkend _Toc389872952}
\par \pard\plain \s29\widctlpar \f5 Clipping performs the necessary 2D clipping to the virtual screen, based on the virtual screen\rquote s clipping rectangle.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872953}Phase VIII \endash  Sorting{\*\bkmkend _Toc389872953}
\par \pard\plain \s29\widctlpar \f5 Sorting is performed using a BYTE sort technique (similar to radix sorts).  The sort is performed on each polygon\rquote s minimum Z.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar\tx720 \b\f5\up16 {\*\bkmkstart _Toc389872954}Phase IX \endash  Rendering{\*\bkmkend _Toc389872954}
\par \pard\plain \s29\widctlpar \f5 The process of rendering is where Spandex spends most of it\rquote s time.  This process simply renders all points followed by all polygons in the render list.  Note that the points are not sorted, nor are they Z-Buffered.

\par \pard \s29\widctlpar 
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  The Multitasker
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872955}Section III:  The Spandex Multitasker{\*\bkmkend _Toc389872955}
\par \pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar The Spandex Multitasker (LXM) module is a simple preemptive multithreaded multitasking interface.  It was developed for the sake of portability.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Many operating systems allow multitasking, while many others do not.  The LXM helps bridge the gap between them by adding simple multitasking features to your DOS application.
\par \pard \s29\widctlpar 
\par The following functions allow access to the LXM kernel:
\par 
\par \pard \s29\li720\widctlpar\tx1440 {\f60 void\tab MLTIInit(INT ReservedStack, WRD Speed);
\par void\tab MLTIUninit(void);
\par void\tab MLTISetSpeed(WRD Speed);
\par INT\tab MLTIGetProcID(void);
\par INT\tab MLTIFork(INT StackSize, INT Priority);
\par void\tab MLTISetPriority(INT ProcessID, INT Priority);
\par void\tab MLTISetProcessActive(INT ProcessID, INT ActiveFlag);
\par INT\tab MLTISemaphoreSet(INT Value, INT *PreviousOwner);
\par INT\tab MLTISemaphoreGet(INT *PreviousOwner);
\par }\pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872956}If You Plan to Port to DOS Using the LXM{\*\bkmkend _Toc389872956}
\par \pard\plain \s29\widctlpar \f5 Be aware of the limitations of the LXM.  It\rquote s a simple multitasking interface for DOS, and as such, does offer some limitations on how you use the multitasking of the operating systems you\rquote re porting from.

\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Since Spandex is not a complete operating system, it can\rquote 
t be expected to allow portability from every multitasking operating system available.  But it can make porting from a multitasking operating system to DOS a little easier.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The LXM allows you to {\i fork} different threads.  This is similar to the fork function for UNIX.  Howeve
r, these threads must interact nicely with each other.   This can be accomplished using semaphores (information available to all threads).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The LXM does not support multi-tasking of DOS calls.  However, a simple set of routines can be created by the developer for use with the LXM to allow this functionality.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The LXM also does not save/restore the state of the FPU during task switches.  This was a decision made while performance tuning the LXM.  Because of this, the LXM can task switch remarkably fast.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872957}Priorities{\*\bkmkend _Toc389872957}
\par \pard\plain \s29\widctlpar \f5 
The prioritizing is different than most operating systems.  I chose this specific prioritizing technique simply because it is the fastest during execution.  There are two key factors in selecting how often a task is given a time slice, and how long it hol
ds that time slice.  The algorithm is simple:
\par \pard \s29\widctlpar 
\par \pard \s29\li720\widctlpar {\i When a task gets a time slice, it is given a count-down timer which is originally set to the priority value for that task.  Each time an interrupt occurs, this counter is decremented until zero, at whi
ch time the next task becomes active.}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar In this way, the \ldblquote priority\rdblquote  simply dictates how long a task executes for, not how often it gets executed.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872958}Speed{\*\bkmkend _Toc389872958}
\par \pard\plain \s29\widctlpar \f5 The {\i speed} setting simply sets the frequency of the timer interrupt (0x08).  The smaller the number, the faster the frequency.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar As this value becomes smaller, the execution of the different tasks appears smoother.  Changing the setting of the {\i speed}
 value will not change the percentage of the CPU that each task gets relative to the other tasks.  But it will change how much CPU time is spent in the LXM.  The smaller the value for {\i speed}, the more time the multitasker spends multitasking.
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  The Memory Manager
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872959}Section IV: Tools For More Robust Code{\*\bkmkend _Toc389872959}
\par \pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar Spandex includes some very handy features to aid the developer in creating more robust code.  Most of these features allow the developer to find errors {\i before}
 they strike.  Please make sure you read this section carefully before you start the design of your application.
\par \pard \s29\widctlpar 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872960}Error Tracking and Management{\*\bkmkend _Toc389872960}
\par \pard\plain \s29\widctlpar \f5 The error tracking and management features in Spandex were designed to:
\par 
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s29\fi-360\li360\widctlpar{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}Ease the development and debugging process
\par {\pntext\pard\plain\f1 \'b7\tab}Track errors throughout the development process and even in the field
\par \pard \s29\widctlpar 
\par Access to these features is available through the following functions:
\par 
\par \pard \s29\fi-720\li1440\widctlpar\tx1440 {\f60 CHR\tab *SPDXGetErrorString(WRD ErrorCode);
\par void\tab SPDXSetFatalErrors(INT Flag);
\par INT\tab SPDXGetFatalErrors(void);
\par void\tab SPDXSetLoggedErrors(INT Flag);
\par INT\tab SPDXGetLoggedErrors(void);
\par void\tab SPDXSetLoggedStrings(INT Flag);
\par INT\tab SPDXGetLoggedStrings(void);
\par void\tab SPDXResetErrorFile(void);
\par void\tab SPDXFatalError(INT ErrorCode, CHR *Notes);
\par void\tab SPDXLogError(INT ErrorCode, CHR *Notes);
\par void\tab SPDXLogString(CHR *Notes);
\par }\pard \s29\widctlpar 
\par \pard \s29\widctlpar All messages and errors get logged to a log file named {\b SPANDEX.LOG}.  When Spandex is initialized, this log file is deleted (also done via a call to {\f60 SPDXResetErrorFile}).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
The log file is opened/created each time an entry is logged, then closed when logging is completed.  The reason for this is because if the log file were to remain open during execution and the application were to crash, the log file wo
uld be lost.  This does slow the logging down quite a bit, so be careful in deciding where to keep your logging when you release your application to the public.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
The log file resides in the current running directory.  Note that if the current directory is changed during runtime, then any logs will be logged to a new file in the new current directory.  This also means that if there are log files located in places o
ther than the current directory at startup, they will not get reset.
\par \pard \s29\widctlpar 
\par Entries logged to the log file may look like this:
\par 
\par \pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:36
\par [Loct] globals.c[200]
\par [Info] Debug state set to 0x0000000B
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------
\par }\pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:38
\par [Code] (401) Memory leak detected
\par [Loct] mem.c[68]
\par [Note] 1 memory leak(s) detected using 64008 bytes
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------
\par }\pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:38
\par [Code] (401) Memory leak detected
\par [Loct] mem.c[80]
\par [Note] Memory leak At:0x8362D03C Size:64000 Owner:vscreen.c(32)
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Note that the first entry is a {\i string} log, and the following two logs are {\i errors}.  The difference is that the {\i string} logs do not have a {\f60 [Code]} entry.  There is a third type of log entry called a {\i Fatal Error}
 that is simply an error, but will also cause the application to terminate and echo the logged error directly to stdout.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Also note that the entries in the log file are easily configurable with the debugging flags.  For example, the {\f60 [Loct]} entry will not appear if the proper flag is not set (see the next sub-section on \ldblquote 
Spandex Debugging Flags\rdblquote ).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar In the {\f60 [Code]} field, you\rquote ll see the error code in parenthesis, and an English string following it.  This string can be had for any code by a call to {\f60 SPDXGetErrorString}.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Errors and string are logged by calls to {\f60 SPDXLogError} and {\f60 SPDXLogString}.  And Fatal errors are logged via a call to {\f60 SPDXFatalError}
.  Note that these three calls are macros, not functions.  The macros are used to automatically pass the {\f60 __FILE__} and {\f60 __LINE__} compiler macros to the actual logging functions.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Each of the three types of logging entries may be disabled by calls to {\f60 SPDXSetLoggedStrings}, {\f60 SPDXSetLoggedErrors} and {\f60 SPDXSetFatalErrors}.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872961}Spandex Debugging Flags{\*\bkmkend _Toc389872961}
\par \pard\plain \s29\widctlpar \f5 
Spandex supports 32 internal debugging flags.  The first four are currently used by the system.  The rest are available to the developers.  Though it is suggested to consider the next four reserved for future use leaving the developer with a total of 24 d
ebugging flags.
\par \pard \s29\widctlpar 
\par The current uses for the internal debug flags are:
\par 
\par \pard\plain \fi-2880\li3600\widctlpar\tx3600 \f4\fs20 {\f5\fs24 DEBUG_BASIC\tab Basic debugging features
\par DEBUG_MEM\tab Memory logging features
\par DEBUG_MEMTRACE\tab Memory tracing features
\par }\pard \fi-2880\li3600\widctlpar\tx3600 {\f5\fs24 DEBUG_FUNCS\tab Enable logging of source filenames and line numbers.
\par }\pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar There are quite a few uses of these flags.  For specific information, consult the API reference.
\par \pard \s29\widctlpar 
\par The debugging flags are managed by the following calls:
\par 
\par \pard \s29\li720\widctlpar\tx1440 {\f60 INT\tab SPDXSetDebugStateFromFile(void);
\par INT\tab SPDXGetDebugState(void);
\par void\tab SPDXSetDebugState(INT State);}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The {\f60 SPDXSetDebugStateFromFile} is performed internally during Spandex\rquote 
s initialization, but may also be called externally.  The last two functions are used to set the debug states of the 32 debug values.  For specific information on these functions, consult the API reference.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872962}Asserts and Verifies{\*\bkmkend _Toc389872962}
\par \pard\plain \s29\widctlpar \f5 The {\i Assert} and {\i Verify} macros are used to track down elusive and fatal bugs before they are able to strike.
\par \pard \s29\widctlpar 
\par The syntax for Asserts and Verifies is as follows:
\par 
\par \pard \s29\li720\widctlpar Assert({\i expression});
\par Verify({\i expression});
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The rules for Asserts and Verifies are simple.  Asserts and Verifies will generate an error when {\i expression}
 is evaluated to zero.  The difference between Asserts and Verifies is what they do when the software is built for release.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Spandex is shipped with a release and a debug version of the libraries.  In the release version of the libraries, the Asserts and their {\i expression} will go away.  The {\i expression}
 will not be executed or evaluated, and the entire line of code disappears from existence.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar For verifies, however, {\i expression} is still executed, but the Verify around that expression will go away.  Therefore, if you wish to test the return code from the {\f60 SPDXPushPalette} function, the code might look like this:

\par \pard \s29\widctlpar 
\par \pard \s29\li720\widctlpar {\f60 Verify( SPDXPushPalette( VirtualPalette ) );}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar In the release, the call to {\f60 SPDXPushPalette} will still be made, but the Verify will go away:
\par \pard \s29\widctlpar 
\par \pard \s29\li720\widctlpar {\f60 SPDXPushPalette( VirtualPalette );}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar If this were an Assert, the release code would not make the call to {\f60 SPDXPushPalette}.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar When an assertion (or verify) occurs, Spandex will issue a fatal error.  A typical Assertion may appear on the screen as:
\par \pard \s29\widctlpar 
\par \pard \s29\li720\widctlpar {\f60 SPANDEX FATAL ERROR[425]:
\par    General:  Assert failed
\par    Details:  An internal `Assert' has failed
\par Press any key...
\par }\pard \s29\widctlpar 
\par Interrogating the log file, we find:
\par 
\par \pard \s29\widctlpar {\f60 [When] 00/01/96 18:52:23
\par [Code] (425) Assert failed
\par [Loct] demo.c[109]
\par [Note] An internal `Assert' has failed
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------}
\par \pard \s29\widctlpar 
\par Going into the file demo.c, we\rquote ll see the following code:
\par 
\par \pard \s29\li720\widctlpar {\f60 Assert( Filename );
\par }\pard \s29\widctlpar 
\par This tells us that the variable \ldblquote Filename\rdblquote  is null.
\par 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872963}The Spandex Memory Manager{\*\bkmkend _Toc389872963}
\par \pard\plain \s29\widctlpar \f5 The Spandex Memory Manager (LMM) is one of the most powerful tools in creating robust code.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Many common errors are related to memory (pointers, arrays, etc.).  By nature, many of these errors are difficult to track down since they are well-known for causing lockups.  Here is an example situation:
\par \pard \s29\widctlpar 
\par \pard \s29\li360\widctlpar\tx360\tx720\tx1080\tx1440 {\f60 #define\tab SCR_WIDTH\tab (320)
\par #define\tab SCR_HEIGHT\tab (200)
\par 
\par INT\tab *CalcScanlineTable(void)
\par \{
\par INT \tab index, *ScanlineTable;
\par 
\par \tab ScanlineTable = SPDXMalloc(SCR_HEIGHT);
\par 
\par \tab if (!ScanlineTable)
\par \tab \tab return NULL;
\par 
\par \tab for(index = 0; index < SCR_HEIGHT; index ++)
\par \tab \tab ScanlineTable[index] = index * SCR_WIDTH;
\par 
\par \tab return ScanlineTable;
\par \}
\par }\pard \s29\widctlpar 
\par \pard \s29\widctlpar 
The previous code segment simply returns the pointer to a scanline table.  The problem is that there is a bug in it.  The bug may have jumped out at you, and it may not have.  But we all know that errors like these can crop up once in a while.  What
\rquote s worse is that take can easily take more time to track down then we would like.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar If you execute this code segment in the middle of your program, it may or may not crash.  The worst case is that it will not crash.  This means you have a bug, and don\rquote t know about it \endash 
 then two weeks later, you change one piece of code to include an extra few bytes to an array, and all of the sudden it crashes.  You spend time fixing this problem.  Even worse, what if you {\i never} find out about it until it reaches the customer?

\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar {\i The bug, by the way, is that the allocation of memory for a size of \ldblquote }{\i\f60 SCR_HEIGHT}{\i \ldblquote  should be \rdblquote }{\i\f60 SCR_HEIGHT * sizeof(INT)}{\i \rdblquote 
\par }\pard \s29\widctlpar 
\par \pard \s29\widctlpar Spandex fixes this problem by verifying the integrity of every single piece of memory ever allocated.  Integrity is check in a number of ways.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
Each memory block allocated has a prefix and suffix of four bytes (a total of only eight bytes extra for every allocation).  These extra eight bytes help the LMM track when array over-runs and under-runs occur.  In this case, when the application containi
ng the above code would exit (and the call to the {\f60 SPDXUninitMem} is made) the memory manager would log an error.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The LMM checks the actual value of the address being freed.  This helps track pointer overwrites (when a pointer itself is overwritten).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar TIP:  You may not use the standard call to free() for memory blocks that are allocated by the LMM.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The LMM also checks zero-memory.  If a NULL pointer is written to, Spandex will log an error when the {\f60 SPDXUninit} routine is called.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar Memory leaks will no longer plague your application.  Spandex verifies the existence of any memory leaks on the call to {\f60 SPDXUninitMem}.  As long as your application uses the {\f60 SPDXMalloc}, {\f60 SPDXRealloc} and {\f60 
SPDXFree} routines, any application is well-guarded from memory leaks.
\par \pard \s29\widctlpar 
\par Here\rquote s an example log with some memory leaks listed:
\par 
\par \pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:36
\par [Loct] globals.c[200]
\par [Info] Debug state set to 0x0000000B
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------
\par }\pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:38
\par [Code] (401) Memory leak detected
\par [Loct] mem.c[68]
\par [Note] 1 memory leak(s) detected using 64008 bytes
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------
\par }\pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:38
\par [Code] (401) Memory leak detected
\par [Loct] mem.c[80]
\par [Note] Memory leak At:0x8362D03C Size:64000 Owner:vscreen.c(32)
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------}
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
So lets look at the two errors .  The first says that there is one memory leak.  This means that upon exiting the application, there was one block of 64,000 bytes or RAM that had been allocated, yet never released back to the system (see the following sub
-section titled \ldblquote The Spandex Memory manager\rdblquote  for more details on memory leaks).
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar 
The next few entries in the log list each of the memory leaks.  In this case, there is only one.  Our log tells us that the memory leak was allocated in vscreen.c at line 32.  This is an internal file within the Spandex source code.  However, by the filen
ame, we can tell that the error has something to do with virtual screens.  By investigating the code, it was found that the virtual screen for the application was created, but not destroyed.  By inserting a call to {\f60 SPDXCleanupVirtualScreen}
, we find that the new log file looks like this:
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar {\f60 [When] 00/01/96 18:10:36
\par [Loct] globals.c[200]
\par [Info] Debug state set to 0x0000000B
\par }\pard \s29\widctlpar {\f60 -------------------------------------------------------------------
\par }\pard \s29\widctlpar 
\par \pard \s29\widctlpar 
Under normal circumstances, this would not be a problem for this particular application.  However, if there was a cause for allocating a new virtual screen every 10 minutes, and the user used the application for 8 hours, there is a good chance that the me
mory leak would cause problems that could not be foreseen without this warning, and the application would eventually experience insufficient memory.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar TIP:  Don\rquote t forget to test all exit points of the application for memory leaks.  This is very handy for finding those leaks that hide in the darkest corners.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar If an allocation (or reallocation) fails, an automatic error is logged to the log file.  This helps track down those forgotten checks for NULL on returns from {\f60 SPDXMalloc} and {\f60 SPDXRealloc}.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar During the execution of your application, you can get a memory report of the allocated memory.  The first report, a disk file called SPANDEX.MEM, is stored to the disk by a single call to {\f60 SPDXDumpMemLog}
.  Here is a sample output from a call to this routine:\page 
\par \pard\plain \li720\widctlpar \f4\fs20 {\f60 ***********************************************************
\par *                                                         *
\par * This file was created by the SPANDEX graphics engine.   *
\par *                                                         *
\par * Pertinent information regarding the state of the memory *
\par * allocation units will follow...                         *
\par *                                                         *
\par ***********************************************************
\par 
\par ----------------------------------
\par    Address:  0x82AC0040
\par     Length:  0x4000 (16384)
\par      Owner:  maps.c(32)
\par ----------------------------------
\par    Address:  0x82AC703C
\par     Length:  0x10000 (65536)
\par      Owner:  maps.c(40)
\par ----------------------------------
\par    Address:  0x82D5A03C
\par     Length:  0x10000 (65536)
\par      Owner:  maps.c(278)
\par ----------------------------------
\par    Address:  0x82A064F0
\par     Length:  0x20 (32)
\par      Owner:  maps.c(459)
\par ----------------------------------
\par    Address:  0x82A06540
\par     Length:  0x400 (1024)
\par      Owner:  maps.c(469)
\par ----------------------------------
\par    Address:  0x82A069B8
\par     Length:  0x131 (305)
\par      Owner:  objects.c(19)
\par ----------------------------------
\par    Address:  0x82A06CE0
\par     Length:  0x262 (610)
\par      Owner:  objects.c(42)
\par ----------------------------------
\par    Address:  0x82A06C80
\par     Length:  0x30 (48)
\par      Owner:  lights.c(32)
\par ----------------------------------
\par    Address:  0x82DAE03C
\par     Length:  0xF0F8 (61688)
\par      Owner:  vertices.c(30)
\par ----------------------------------
\par    Address:  0x838E703C
\par     Length:  0x1E58C (124300)
\par      Owner:  tris.c(28)
\par ----------------------------------
\par    Address:  0x82D6B03C
\par     Length:  0xFA00 (64000)
\par      Owner:  vscreen.c(32)
\par ----------------------------------
\par    Address:  0x82AC404C
\par     Length:  0xAF4 (2804)
\par      Owner:  render.c(184)
\par ----------------------------------
\par    Address:  0x82AC4B4C
\par     Length:  0x136C (4972)
\par      Owner:  render.c(224)
\par --------------------------------------------------------
\par Total memory in use right now:  0x6372F (407343)
\par         Total memory elements:  0xD (13)
\par Most memory used at any point:  0x7AB1F (502559)
\par }\pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar Note that the \ldblquote Total memory in use right now\rdblquote 
 includes the extra eight bytes allocated to each block of memory, but the actual lengths of each listed element do not include those extra bytes.  So if you try to double-check Spandex\rquote s totals, you\rquote ll find that you\rquote 
ll need to account for an extra eight bytes for each element allocated.
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  File Formats
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389872964}Section V: USD Files{\*\bkmkend _Toc389872964}
\par \pard\plain \s29\widctlpar \f5 
\par \pard \s29\widctlpar The USD (Universal Scene Description) files are simply text files that contain all the information about the Universe hierarchy. This section will outline the format of the USD files.
\par \pard \s29\widctlpar 
\par \pard \s29\widctlpar The USD files contain objects within the hierarchy, they dictate the relationships between objects in the hierarchy, and they also allow the developer to set the default properties for each object in the hierarchy.
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872965}Comments{\*\bkmkend _Toc389872965}
\par \pard\plain \s29\widctlpar \f5 Comments begin with a ';' or a '/' character and continue until the end of a line.  For example:
\par \pard \s29\widctlpar 
\par \pard \s29\li720\widctlpar {\i\f60 / This is the universe for which all objects are based
\par }{\f60 Universe
\par \{
\par    Name AbsoluteUniverse
\par 
\par }{\i\f60    ;Begin object definitions here
\par }{\f60    Object
\par    \{
\par       Name Object_1
\par .
\par .
\par .}
\par \pard \s29\widctlpar 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872966}Labels{\*\bkmkend _Toc389872966}
\par \pard\plain \s29\widctlpar\tx720\tx1440\tx2160\tx2880 \f5 The USD files are keyed by labels.  Each label only requires the first three characters to appear in the USD file, but may contain the whole word with no spaces.  There are two classes of labels:

\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 {\i Entity} labels describe entities in the hierarchy (such as an object, or a light source).  Entities are used to define the entities.  Following each entity must be a set of braces \{\}
 with which to hold the attributes and geometric data.
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 {\i Property }Labels define properties or attributes for the entities within the hierarchy (such as name, location, orientation, etc.)
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872967}Entity Labels{\*\bkmkend _Toc389872967}
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872968}UNI \endash  Universe{\*\bkmkend _Toc389872968}
\par \pard\plain \s29\li360\widctlpar\tx2160\tx2880 \f5 Each USD file must begin with Universe.  The universe is an object just like any other object.  The only exception is that its label is \ldblquote Universe\rdblquote 
 and there may be only one of them.  All objects in the Universe will be children of the Universe object.
\par \pard \s29\li360\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872969}OBJ \endash  Object{\*\bkmkend _Toc389872969}
\par \pard\plain \s29\li360\widctlpar\tx2160\tx2880 \f5 Any geometric or reference object is defined as an object.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872970}CAM \endash  Camera{\*\bkmkend _Toc389872970}
\par \pard\plain \s29\li360\widctlpar\tx2160\tx2880 \f5 This is label is synonymous to OBJ.  It was added for easier reading of the USD file.
\par \pard \s29\li360\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872971}LIG \endash  Light{\*\bkmkend _Toc389872971}
\par \pard\plain \s29\li360\widctlpar\tx2160\tx2880 \f5 Light sources may be the child of any object, but may not contain any child lights or child objects.  The only available labels for lights are {\i Name}, {\i Location}, {\i Intensity}.
\par \pard \s29\li360\widctlpar\tx2160\tx2880 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872972}Property Labels{\*\bkmkend _Toc389872972}
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872973}Ambient \endash  Ambient light{\*\bkmkend _Toc389872973}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab Each object has it\rquote s own ambient light value.  This value can be inherited from it\rquote s parent object.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872974}Backfaces \endash  Show backs flag{\*\bkmkend _Toc389872974}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Boolean
\par Scope:\tab Current object and it's children
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872975}BUMpmap -{\*\bkmkend _Toc389872975}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object (see notes)
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872976}CENter - Center of object used for rotation{\*\bkmkend _Toc389872976}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab X, Y, Z (coordinate triple)
\par Type:\tab Floating point
\par Scope:\tab Current object
\par Notes:\tab Do not place commas between values.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872977}Color -{\*\bkmkend _Toc389872977} 
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Boolean
\par Scope:\tab Current object and it's children
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872978}DEVeloper - Developer's values{\*\bkmkend _Toc389872978}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any 10 values
\par Type:\tab Integer
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab All 10 values must follow the label.  Do not place commas between values.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872979}DRAwflags - Drawing Flags{\*\bkmkend _Toc389872979}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab "TRIangles", "QUAds", "POInts", "ALL", or "NONe"
\par Type:\tab Integer
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab You may enter the integer value of a combined setting, or enter one of the predefined strings. 
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872980}INTensity - Intensity for current light source{\*\bkmkend _Toc389872980}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Lights only
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872981}KA - Ambient light reflection coefficient{\*\bkmkend _Toc389872981}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object
\par Notes:\tab Default is 1.0
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872982}KD - Diffuse light reflection coefficient{\*\bkmkend _Toc389872982}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object
\par Notes:\tab Default is 1.0
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872983}KS - Specular reflection coefficient{\*\bkmkend _Toc389872983}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object
\par Notes:\tab Default is 1.0
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872984}LOCation - Location of object{\*\bkmkend _Toc389872984}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab X, Y, Z (coordinate triple)
\par Type:\tab Floating point
\par Scope:\tab Current object and it's children
\par Notes:\tab Do not place commas between values.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872985}NAMe - Name an object{\*\bkmkend _Toc389872985}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Single word
\par Type:\tab String
\par Scope:\tab Current object
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872986}OPAcity -{\*\bkmkend _Toc389872986}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Boolean
\par Scope:\tab Current object and it's children
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872987}ORIentation - Original rotational values for the object{\*\bkmkend _Toc389872987}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Floating point
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab ROT_POINTS is defined in the SPXDEFS.H file.  Most likely initialized to 360*4.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872988}POInt - Point{\*\bkmkend _Toc389872988}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Vertex number
\par Type:\tab Integer
\par Scope:\tab Current object
\par Notes:\tab None.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872989}QUAd - Solid Shaded Quad{\*\bkmkend _Toc389872989}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab V1, V2, V3, V4, MapName, Mx1, My1, Mx2, My2, Mx3, My3, Mx4, My4
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Type:\tab Integer (Vx), String (MapName), Floating point (Mxx)
\par Scope:\tab Current object
\par Notes:\tab Do not place commas between values.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872990}SHAdemodel - Shading model{\*\bkmkend _Toc389872990}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab "Flat", "Gouraud", \ldblquote Phong\rdblquote , \ldblquote Bump\rdblquote 
\par Type:\tab Boolean
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Scope:\tab Polygonal geometry within the current object and it's children
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872991}SHInevalue - Amount of shine that was applied to the palette table{\*\bkmkend _Toc389872991} 
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab 0.0 - 1.0
\par Type:\tab Floating point
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab This value is the same as the value passed into MAKEMAP with the -S parameter.  You only need to set this in the Universe object.  The default is 1.0
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872992}SHOwbacks - Show backs flag{\*\bkmkend _Toc389872992}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Boolean
\par Scope:\tab Current object and it's children
\par Notes:\tab None
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872993}SURface - Specify the surface type of an object{\*\bkmkend _Toc389872993} 
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab \ldblquote SOLid\rdblquote , \ldblquote ENVironment\rdblquote , \ldblquote TEXtured\rdblquote 
\par Type:\tab Floating point
\par Scope:\tab Current object
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab \tab ROT_POINTS is defined in the SPXDEFS.H file.  Most likely initialized to 360*4.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872994}TRBegin - Translation block begin{\*\bkmkend _Toc389872994}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab X, Y, Z
\par Type:\tab Floating point
\par Scope:\tab Within the confines of the TRBegin and TREnd
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab 
Do not place commas between values.  TRBegin and TREnd do not have to follow braces.  They may be placed anywhere in the file (or split between files via the #include directive).  They may also be used recursively.  Maximum recursive depth is 1000.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872995}TREnd - Translation block end{\*\bkmkend _Toc389872995}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab N/A
\par Type:\tab N/A
\par Scope:\tab Within the confines of the TRBegin and TREnd
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 Notes:\tab 
Do not place commas between values.  TRBegin and TREnd do not have to follow braces.  They may be placed anywhere in the file (or split between files via the #include directive).  They may also be used recursively.  Maximum recursive depth is 1000.
\par \pard \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872996}TRIangle - Textured Shaded Triangle{\*\bkmkend _Toc389872996}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab V1, V2, V3, MapName, Mx1, My1, Mx2, My2, Mx3, My3
\par Type:\tab Integer (Vx), String (MapName), Floating point (Mxx)
\par Scope:\tab Current object
\par Notes:\tab Do not place commas between values.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872997}TYPe - Type of object{\*\bkmkend _Toc389872997}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab Any
\par Type:\tab Integer
\par Scope:\tab Current object
\par Notes:\tab This is for developer's use.
\par 
\par \pard\plain \s32\li360\widctlpar \b\f5 {\*\bkmkstart _Toc389872998}VERtex - Vertex{\*\bkmkend _Toc389872998}
\par \pard\plain \s33\fi-1800\li2160\widctlpar\tx2160\tx2880 \f5 Values:\tab X, Y, Z, DX, DY, DZ
\par Type:\tab Floating point
\par Scope:\tab Current object
\par Notes:\tab Do not place commas between values.
\par 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389872999}The #include Preprocessor Directive{\*\bkmkend _Toc389872999}
\par \pard\plain \s29\widctlpar\tx720\tx1440\tx2160\tx2880 \f5 This directive allows inclusion of other USD files.  This way, you can have one object per file, and have just one universal USD file that is given to Spandex for reading in.
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 This directive must be the only thing on a line -- everything after it will be ignored.
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 It can appear anywhere in the text as long as it's contents fit in with the current syntax.
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389873000}General Notes{\*\bkmkend _Toc389873000}
\par {\pntext\pard\plain\f1 \'b7\tab}\pard\plain \s29\fi-360\li360\widctlpar\tx720\tx1440\tx2160\tx2880{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\f5 The maximum line length is 512 characters.
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s29\fi-360\li360\widctlpar\tx720\tx1440\tx2160\tx2880{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}Values must NOT be separated by anything other than a space (i.e. no commas).

\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s29\fi-360\li360\widctlpar\tx720\tx1440\tx2160\tx2880{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}All braces \{\}
 must have at least one space or a new line on either side of them (i.e. they cannot be touching another word, or they will be considered part of that word.
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s29\fi-360\li360\widctlpar\tx720\tx1440\tx2160\tx2880{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}You do not have to create a new line for each label.  You
 may actually create an entire USD file on a single line if it is within the 512 character limit.
\par {\pntext\pard\plain\f1 \'b7\tab}The only values that are case sensitive in the USD files are the names.  The names are stored exactly as they appear in the USD file.
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s29\fi-360\li360\widctlpar\tx720\tx1440\tx2160\tx2880{\*\pn \pnlvlblt\pnb0\pni0\pnf1\pnfs24\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}
There are many English equivalents to some Byte oriented or Boolean values.  For Boolean values, using a \ldblquote 0\rdblquote  or \ldblquote 1\rdblquote  is not acceptable.  These English equivalents are as follows:
\par \pard \s29\widctlpar\tx720\tx1440\tx2160\tx2880 
\par \pard \s29\li720\widctlpar\tx2430 On\tab Available for any Boolean value -- equates to 1
\par Off\tab Available for any Boolean value -- equates to 0
\par Yes\tab Available for any Boolean value -- equates to 1
\par No\tab Available for any Boolean value -- equates to 0
\par True\tab Available for any Boolean value -- equates to 1
\par False\tab Available for any Boolean value -- equates to 0
\par 
\par None\tab Available for draw flags
\par Triangles\tab Available for draw flags
\par Quads\tab Available for draw flags
\par Points\tab Available for draw flags
\par All\tab Available for draw flags
\par 
\par Ambient\tab Available for Shademodel
\par Lambert\tab Available for Shademodel
\par Pure\tab Available for Shademodel \endash  equates to Lambert
\par Flat\tab Available for Shademodel \endash  equates to Lambert
\par Gouraud\tab Available for Shademodel
\par Phong\tab Available for Shademodel
\par Bump\tab Available for Shademodel
\par 
\par Solid\tab Available for Surface
\par Textured\tab Available for Surface
\par Environment\tab Available for Surface
\par Reflect\tab Available for Surface \endash  equates to Environment
\par \pard \s29\li720\widctlpar\tx720\tx1440\tx2160\tx2430 
\par 
\par \pard\plain \s30\widctlpar \b\f5\up16 {\*\bkmkstart _Toc389873001}Example USD File{\*\bkmkend _Toc389873001}
\par \pard\plain \s29\widctlpar\tx720\tx1440\tx2160\tx2880 \f5 
\par \pard \s29\li360\widctlpar\tx720\tx1080\tx1440\tx2880 {\f60 Universe
\par \{
\par \tab Name Universe
\par \tab Ambient 0.2
\par \tab Textures On
\par \tab Shading Gouraud
\par \tab Color 4
\par 
\par \tab ; The camera        
\par \tab Camera
\par \tab \{
\par \tab \tab Name Camera
\par \tab \tab Location 0 0 -900
\par \tab \tab Center   0 0 -900
\par 
\par \tab \tab ; A light source attached to the camera?
\par \tab \tab ; Maybe a headlight?
\par \tab \tab Light
\par \tab \tab \{
\par \tab \tab \tab Name Light
\par \tab \tab \tab Location  0 0 0
\par \tab \tab \tab Intensity 0.8\tab ; 0.8 + 0.2 = 1.0
\par \tab \tab \tab \tab \tab ; (intensity + ambient = 1.0)
\par \tab \tab \}
\par \tab \}
\par 
\par \tab ; This is a rather simple object
\par \tab Object
\par \tab \{
\par \tab \tab Name WoodenPlane
\par \tab \tab Draw All
\par 
\par \tab \tab ;Label    X    Y Z dx dy    dz
\par \tab \tab ;----- ---- ---- - -- -- -----
\par \tab \tab Vertex -300  300 0  0  0 -1000
\par \tab \tab Vertex -300 -300 0  0  0 -1000
\par \tab \tab Vertex  300  300 0  0  0 -1000
\par \tab \tab Vertex  300 -300 0  0  0 -1000
\par 
\par \tab \tab ;Label   V1 V2 V3 Texture   U   V   U   V   U   V
\par \tab \tab ;------- -- -- -- ------- --- --- --- --- --- ---
\par \tab \tab Triangle  0  1  2    WOOD   0   0   0 299 299   0
\par \tab \tab Triangle  1  2  3    WOOD   0 299 299   0 299 299
\par \tab \}
\par \}
\par }\pard \s29\widctlpar 
\par \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  File Formats
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389873002}Section VI:  Materials{\*\bkmkend _Toc389873002}
\par \pard\plain \s29\widctlpar \f5 
\par \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  Virtual Screens
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389873003}Section VII:  Virtual Screens{\*\bkmkend _Toc389873003}
\par \pard\plain \s29\widctlpar \f5 
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  The Mouse
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389873004}Section VIII:  The Mouse{\*\bkmkend _Toc389873004}
\par \pard\plain \s29\widctlpar \f5 
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  TYPEDEFs and DEFINEs
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389873005}Section IX:  TTYPEDEFs and DEFINEs{\*\bkmkend _Toc389873005}
\par \pard\plain \s29\widctlpar \f5 
\par \pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 \sect \sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  The Spandex API Reference
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 
\par \pard\plain \s29\widctlpar \f5 
\par \pard\plain \widctlpar \f4\fs20 {\f5 
\par 
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par {\*\bkmkstart _Toc389873006}Section X:  The Spandex API Reference{\*\bkmkend _Toc389873006}
\par \pard\plain \widctlpar \f4\fs20 {\b\f5\fs32 
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 \page {\*\bkmkstart _Toc389873007}_SPDXClose{\*\bkmkend _Toc389873007}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:\tab }{\f5\fs24 Close a file for non-buffered I/O.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXClose(INT Handle);
\par 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle to close.
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:\tab }{\f5\fs24 This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXClose.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:\tab }{\f5\fs24 Always returns the result of the close() function.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:\tab }{\f5\fs24 SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873008}_SPDXFatalError{\*\bkmkend _Toc389873008}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:\tab }{\f5\fs24 Close a file for non-buffered I/O.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab _SPDXFatalError(CHR *File, INT Line, INT ErrorCode, CHR *Notes);
\par 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 File}{\f5\fs24 \tab Filename (from source) used for logging
\par }{\i\f5\fs24 Line}{\f5\fs24 \tab Line number of file
\par }{\i\f5\fs24 ErrorCode}{\f5\fs24 \tab Spandex error code
\par }{\i\f5\fs24 Notes}{\f5\fs24 \tab Informational string to be logged with entry
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:\tab }{\f5\fs24 Note that this function is called from the SPDXFatalError macro to avoid manual passing of File and Line arguments.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:\tab }{\f5\fs24 None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:\tab }{\f5\fs24 SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873009}_SPDXFree{\*\bkmkend _Toc389873009}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:\tab }{\f5\fs24 Free a previously allocated region or memory.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab _SPDXFree(void *Address, CHR *OwnerFile, INT OwnerLine);
\par 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Address}{\f5\fs24 \tab Address of memory region to free
\par }{\i\f5\fs24 OwnerFile}{\f5\fs24 \tab Source file that freed this region or memory
\par }{\i\f5\fs24 OwnerLine}{\f5\fs24 \tab Source line number}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:\tab }{\f5\fs24 Note that this function is called from the SPDXFree macro to avoid manual passing of OwnerFile and OwnerLine arguments.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:\tab }{\f5\fs24 None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:\tab }{\f5\fs24 SPDXMalloc, SPDXFree
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873010}_SPDXGetc{\*\bkmkend _Toc389873010}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Read a character from a file (non-buffered).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXGetc(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle for character input}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXGetc.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from getc().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXPutc, SPDXGetc
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873011}_SPDXMalloc{\*\bkmkend _Toc389873011}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Allocate a region of memory.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void*\tab _SPDXMalloc(INT Size, CHR *OwnerFile, INT OwnerLine);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Size}{\f5\fs24 \tab Amount of memory to allocate
\par }{\i\f5\fs24 OwnerFile}{\f5\fs24 \tab Source file that freed this region or memory
\par }{\i\f5\fs24 OwnerLine}{\f5\fs24 \tab Source line number}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Note that this function is called from the SPDXMalloc macro to avoid manual passing of OwnerFile and OwnerLine arguments.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to newly allocated region of memory or NULL on failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMalloc, SPDXRealloc, SPDXFree
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873012}_SPDXOpen{\*\bkmkend _Toc389873012}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Opens a file for non-buffered I/O.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXOpen(CHR *FileName, INT Flags1, INT Flags2);
\par }\pard \fi-1440\li2160\widctlpar\tx1710\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab Name of the file to open
\par }{\i\f5\fs24 Flags1}{\f5\fs24 \tab Flags to be passed through to the standard open() call.
\par }{\i\f5\fs24 Flags2}{\f5\fs24 \tab Flags to be passed through to the standard open() call.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXOpen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from open().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873013}_SPDXRead{\*\bkmkend _Toc389873013}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Read a from a file (non-buffered I/O).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXRead(INT Handle, void *Buffer, INT Length);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle to read from
\par }{\i\f5\fs24 Buffer}{\f5\fs24 \tab Buffer to fill as information is read from the file
\par }{\i\f5\fs24 Length}{\f5\fs24 \tab How many bytes to read from file into }{\i\f5\fs24 Buffer}{\f5\fs24 .}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXRead.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from read().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRead
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873014}_SPDXRealloc{\*\bkmkend _Toc389873014}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies a previously allocated a region of memory.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void*\tab _SPDXRealloc(void *Address, INT Size, CHR *OwnerFile, INT OwnerLine);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Address}{\f5\fs24 \tab Address of previously allocated memory
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Amount of memory to allocate
\par }{\i\f5\fs24 OwnerFile}{\f5\fs24 \tab Source file that freed this region or memory
\par }{\i\f5\fs24 OwnerLine}{\f5\fs24 \tab Source line number}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Note that this function is called from the SPDXMalloc macro to avoid manual passing of OwnerFile and OwnerLine arguments.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to newly allocated region of memory or NULL on failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRealloc, SPDXMalloc, SPDXFree
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873015}_SPDXSeek{\*\bkmkend _Toc389873015}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Seek to a position within a file (non-buffered I/O).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 LNG\tab _SPDXSeek(INT Handle, LNG Offset, INT Origin);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle to seek within
\par }{\i\f5\fs24 Offset}{\f5\fs24 \tab Offset within file relative to }{\i\f5\fs24 Origin}{\f5\fs24 
\par }{\i\f5\fs24 Origin}{\f5\fs24 \tab Origin of seek offset (SEEK_SET, SEEK_CUR, SEEK_END)}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXSeek.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from lseek().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSeek
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873016}_SPDXTell{\*\bkmkend _Toc389873016}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current position of the file pointer (non-buffered I/O).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXTell(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle to retrieve position from
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXTell.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from tell().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXTell
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873017}_SPDXWrite{\*\bkmkend _Toc389873017}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Read a from a file (non-buffered I/O).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab _SPDXWrite(INT Handle, void *Buffer, INT Length);
\par }\pard \fi-1440\li2160\widctlpar\tx1710\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle to write to from
\par }{\i\f5\fs24 Buffer}{\f5\fs24 \tab Buffer to write to the file
\par }{\i\f5\fs24 Length}{\f5\fs24 \tab How many bytes from }{\i\f5\fs24 Buffer}{\f5\fs24  to write to the file.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is to be used for non-buffered I/O.  For buffered I/O, use SPDXWrite.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from write()
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXWrite
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873018}SPDXAddChild{\*\bkmkend _Toc389873018}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Add a child to given object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddChild(OBJ *Parent);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Parent}{\f5\fs24 \tab Parent object of the new child.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab SPDXAddChild increases the size of the child list for an object, instantiates a new object and attaches it to }{\i\f5\fs24 Parent}{\f5\fs24 
.  The new child also inherits all of the parent\rquote s basic properties (see SPDXInheritObject).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRemoveChild, SPDXGetChild, SPDXInheritObject
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873019}SPDXAddLight{\*\bkmkend _Toc389873019}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a point light to an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 LGT*\tab SPDXAddLight(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive the new light.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Lights are attached to objects, they are not objects themselves.  A light may be attached to an empty object (containing no geometry) if it is desired to have a free-floating point light source.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the newly created point light, or NULL on error.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCleanupLights
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873020}SPDXAddMap{\*\bkmkend _Toc389873020}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a map to the global map list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddMap(CHR *Name, UBYT *Data, INT XRes, INT YRes);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Map name
\par }{\i\f5\fs24 Data}{\f5\fs24 \tab Bitmap data for the map
\par }{\i\f5\fs24 Xres/Yres}{\f5\fs24 \tab Width/Height (respectively) of the map}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The maps are stored in a global map list for the sake of speed during rendering.  Use this function with care to add to this global map list.  The 8-bit color values of the pixels in }{\i\f5\fs24 Data}{\f5\fs24 
 must correspond to the palette table so that shading can be properly performed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAssignTriMaterial
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873021}SPDXAddMaterial{\*\bkmkend _Toc389873021}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a material to the global material list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddMaterial(CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Material name
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The materials are stored in a global material list for the sake of speed during rendering.  Use this function to add to this global material list.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Note that when a new material is added to the global list, all values are set to zero (or NULL in the case of pointers) with the exception of Ka, Ks, Kd and Shine, which are set to 1.0.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAssignTriMaterial
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873022}SPDXAddObjectPoint{\*\bkmkend _Toc389873022}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a point to an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddObjectPoint(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new point}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine only allocates space for one new point.  To modify this point, use the SPDXSetPointVertex routine.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Point\rquote s index in Object or -1 on error.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetPointCount, SPDXSetPointVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873023}SPDXAddObjectTri{\*\bkmkend _Toc389873023}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a triangle to an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddObjectTri(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new triangle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine only allocates space for one new triangle.  To modify this triangle, use the SPDXSetTri____ routines.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Triangle\rquote s index in Object or -1 on error.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectTriCount, SPDXGetTriVertices, SPDXSetTriVertices, SPDXGetTriNormal, SPDXSetTriNormal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873024}SPDXAddObjectVertex{\*\bkmkend _Toc389873024}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Adds a vertex to an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAddObjectVertex(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new vertex}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine only allocates space for one new vertex.  To modify this vertex, use the SPDXSetVertex____ routines.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Vertiex\rquote s index in Object or -1 on error.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectVertexCount, SPDXGetVertex, SPDXSetVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873025}SPDXAssignTriMaterial{\*\bkmkend _Toc389873025}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Assign a texture-map to a triangular polygon
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXAssignTriMaterial(CHR *MatName, OBJ *Object, INT Index, P2D *Map1, P2D *Map2, P2D *Map3);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 MatName}{\f5\fs24 \tab Name of the material (from USD file)
\par }{\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains the modified polygon
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Polygon index within }{\i\f5\fs24 Object}{\f5\fs24 
\par }{\i\f5\fs24 Map1,2,3}{\f5\fs24 \tab U/V coordinates (must range from 0.0 - 1.0)}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The Triangle at index }{\i\f5\fs24 Index}{\f5\fs24  in object }{\i\f5\fs24 Object}{\f5\fs24 
 will receive the material and U/V coordinates for the texture-map.  At the time This function converts the U/V coordinates from their range of [0.0 - 1.0] to the proper range of the texture\rquote s resolution.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success, or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab 
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873026}SPDXBuildPhaseOne{\*\bkmkend _Toc389873026}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform primary phase on hierarchy orientation (orientation around the hierarchy).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXBuildPhaseOne(OBJ *Object, P3D *ParentLoc, MAT *ParentMat);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object of hierarchy to orient
\par }{\i\f5\fs24 ParentLoc}{\f5\fs24 \tab Location of the parent object
\par }{\i\f5\fs24 ParentMat}{\f5\fs24 \tab Parent object matrix}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The primary phase rotates the local coordinates into the world coordinates (location and direction) of each object in the hierarchy around its parent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOrientHierarchy, SPDXBuildPhaseTwo
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873027}SPDXBuildPhaseTwo{\*\bkmkend _Toc389873027}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform secondary phase on hierarchy orientation (orientation around the camera).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXBuildPhaseTwo(OBJ *Object, MAT *CamMat, P3D *CamLoc);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object of hierarchy to orient
\par }{\i\f5\fs24 CamMat}{\f5\fs24 \tab Camera matrix
\par }{\i\f5\fs24 CamLoc}{\f5\fs24 \tab Camera location}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The second phase rotates the world coordinates (location and direction) of each object in the hierarchy around the camera.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOrientHierarchy, SPDXBuildPhaseOne
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873028}SPDXBuildRenderList{\*\bkmkend _Toc389873028}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Builds the render list from a hierarchy
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXBuildRenderList(OBJ *Obj,
\par }\pard \fi-1440\li2160\widctlpar\tx4680 {\f60 \tab \tab OBJ *Cam,
\par \tab \tab VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object of hierarchy
\par }{\i\f5\fs24 Cam}{\f5\fs24 \tab Camera
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to which this list will be rendered}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Builds the render list for sorting, shading and rendering.  (See SPDXRenderHierarchy).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 The }{\i\f5\fs24 VScreen }{\f5\fs24 parameter is used for the Z-Clipping that happens during the building of the virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873029}SPDXByteSortRenderList{\*\bkmkend _Toc389873029}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sorts a render list using BYTE sorting
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXByteSortRenderList(RLS *RList);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab Render list to sort}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873030}SPDXCalcFOV{\*\bkmkend _Toc389873030}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Calculate the FOV from a given focal length.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXCalcFOV(FLT FocalLength);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The FOV (field of vision) is used in calculating the scale factors for a virtual screen from a lense size.  Chances are rare that you should ever call this directly.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par The formula for calculating the FOV is:
\par 
\par FOV = (15.0 / FocalLength) * 160.0;
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab FOV for given focal length
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualLense
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873031}SPDXCleanupGlobals{\*\bkmkend _Toc389873031}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Cleanup the SPDXGlobals structure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupGlobals(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Cleans up the globals structure.  Note that the DOS memory allocated earlier is not cleaned up.  Calling SPDXInitGlobals multiple times can cause insuffici
ent DOS RAM problems.  This function also calls SPDXCleanupMaps and SPDXCleanupMaterials.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCleanupMaps
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873032}SPDXCleanupLights{\*\bkmkend _Toc389873032}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Remove all lights from the global light list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupLights(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The global light list is a list of lights built as lights are added and removed from the hierarchy.  It is used during rendering for speed purposes.  It simply contains a list of pointers to the lights throughout the hierarchy.  SPDXCl
eanupLights removes all lights from the global light list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddLight
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873033}SPDXCleanupMaps{\*\bkmkend _Toc389873033}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Remove all maps from the global map list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupMaps(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The maps are stored in a global map list for the sake of speed during rendering.  Use this function with care to remove all maps from this global list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddMap, SPDXCleanupGlobals
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873034}SPDXCleanupMaterials{\*\bkmkend _Toc389873034}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Remove all materials from the global material list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupMaterials(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The materials are stored in a global material list for the sake of speed during rendering.  Use this function with care to remove all materials from this global list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitMaterials, SPDXAddMaterial, SPDXCleanupGlobals
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873035}SPDXCleanupObject{\*\bkmkend _Toc389873035}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Releases all memory in use by an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupObject(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to remove from memory}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The object and all associated memory is freed.  This includes the point, vertex, polygon and light lists.  The object\rquote s children are also recursively cleaned.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRemoveChild
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873036}SPDXCleanupVirtualScreen{\*\bkmkend _Toc389873036}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Releases all resources used by a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupVirtualScreen(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to cleanup}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitVirtualScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873037}SPDXClearVirtualScreen{\*\bkmkend _Toc389873037}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Clears the virtual screen to a single solid color
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXClearVirtualScreen(CHR Color, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Color}{\f5\fs24 \tab Color to clear the screen with
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to clear}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The virtual screen is completely cleared with the value of }{\i\f5\fs24 Color}{\f5\fs24 .  Note that the entire virtual screen is set to }{\i\f5\fs24 Color}{\f5\fs24 
 not just the clipped region.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXResetVirtualScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873038}SPDXClipRenderList{\*\bkmkend _Toc389873038}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Performs 2D clipping on the render list to the virtual screen\rquote s clipping rectangle.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXClipRenderList(RLS *RList, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx1710\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab The render list for which to perform 2D clipping
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to clip to
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
This function is called from SPDXRenderHierarchy.  It performs all 2D clipping on all polygons in the render list.  Not that this must happen, as the polygon renderers require polygons to be pre-clipped.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy, SPDXSplitPolygonZ
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873039}SPDXClose{\*\bkmkend _Toc389873039}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Closes a buffered I/O file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXClose(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx1710\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Closes a file that was opened for buffered I/O.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from close().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOpen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873040}SPDXCloseServices{\*\bkmkend _Toc389873040}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Closes the Spandex services
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCloseServices(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Services must be closed after de-initialization of Spandex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXUninit
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873041}SPDXCloseSTF{\*\bkmkend _Toc389873041}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Close a file from within a STF file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCloseSTF(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle of the file within the STF file}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Closes a file opened within a STF file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab STF file handle on success or -1 on failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOpenSTF, SPDXSelectSTF
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873042}SPDXConvertMap{\*\bkmkend _Toc389873042}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Converts a raw map to a shaded map for direct screen output that corresponds to the video palette.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXConvertMap(BMAP *Map, INT Intensity);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Map}{\f5\fs24 \tab Map to convert
\par }{\i\f5\fs24 Intensity}{\f5\fs24 \tab Lighted intensity (shade)}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Maps, in their raw format, are not screen-displayable as they need to go through the palette table to be displayed.  Use SPDXConvertMap to convert them for direct screen display.

\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873043}SPDXCopyFromScreen{\*\bkmkend _Toc389873043}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Copies from the screen into a buffer
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCopyFromScreen(CHR *CopyTo);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 CopyTo}{\f5\fs24 \tab Buffer to hold screen data}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The buffer must be large enough to hold a complete copy of the screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCopyToScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873044}SPDXCopyToScreen{\*\bkmkend _Toc389873044}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Copies a buffer to the video screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCopyToScreen(CHR *CopyFrom);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 CopyFrom}{\f5\fs24 \tab Buffer to be copied to the screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The buffer must be large enough to hold a complete copy of the screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCopyFromScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873045}SPDXCorrectVirtualAspect{\*\bkmkend _Toc389873045}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Performs aspect ratio corrections to a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCorrectVirtualAspect(FLT XAspect, FLT YAspect, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 XAspect}{\f5\fs24 \tab X aspect ratio}{\i\f5\fs24 
\par YAspect}{\f5\fs24 \tab Y aspect ratio
\par VScreen\tab Virtual screen to perform corrections on}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Performs aspect ratio correction to the scale factors of a given virtual screen.  Each of the Aspect components is multiplied by it\rquote s corresponding scale factor component.

\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Note that this must be called after the scale factors for a virtual screen have been set up.  If the scale factors are changed, then they must be re-corrected for the aspect ratio.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Also note that calling this function more than once without resetting the scale factors for a virtual screen will yield undesirable results.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualScaleFactors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873046}SPDXCountPixelsInRenderList{\*\bkmkend _Toc389873046}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the count of the rendered pixels.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXCountPixelsInRenderList(RLS *RList);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab Render list to count pixels in}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is useful for tracking performance statistics on Spandex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the count of rendered pixels in the most recently rendered image.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCountPolysInRenderList
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873047}SPDXCountPolysInRenderList{\*\bkmkend _Toc389873047}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the count of the rendered polygons.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXCountPolysInRenderList(RLS *RList);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab Render list to count polygons in}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function is useful for tracking performance statistics on Spandex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the count of rendered polygons the most recently rendered image.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCountPixelsInRenderList
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873048}SPDXCreateImage{\*\bkmkend _Toc389873048}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Create an image structure
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 IMAGE*\tab SPDXCreateImage(INT XRes, INT YRes);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 XRes, YRes}{\f5\fs24 \tab Resolution of the image.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
All images are dealt with in RGB 24-bit color.  Some functions will modify the image such that it is an indexed image, but these cases are rare, and are for temporary storage of an indexed image data set.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 The image is first allocated (}{\i\f5\fs24 XRes }{\f5\fs24 *}{\i\f5\fs24  YRes }{\f5\fs24 * 3) in size, then the values in the structure are given default values.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the address of the newly allocated image structure or NULL on failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXDestroyImage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873049}SPDXCreateObject{\*\bkmkend _Toc389873049}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Instantiates a new object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXCreateObject(OBJ **Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to be created.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Once the object is created, it is given default values (see SPDXMakeObjectDefault.)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMakeObjectDefault
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873050}SPDXCullHierarchy{\*\bkmkend _Toc389873050}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform back-face culling on a hierarchy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCullHierarchy(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object of hierarchy to back-face cull
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Performs back-face culling on a hierarchy starting at }{\i\f5\fs24 Object}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873051}SPDXDestroyImage{\*\bkmkend _Toc389873051}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Releases all resources used by an image structure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDestroyImage(IMAGE **Image);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Image}{\f5\fs24 \tab Address of the image structure pointer}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The image structure\rquote s resources are first released back to the system, and then the image structure itself is freed and set to NULL.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCreateImage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873052}SPDXDMalloc{\*\bkmkend _Toc389873052}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Allocate RAM from low DOS RAM (< 1Mb)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void*\tab SPDXDMalloc(INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Size}{\f5\fs24 \tab Amount of memory to allocate}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
This function uses DPMI to allocate RAM from lower DOS RAM (below the first Mb).  This is useful for transferring information between a protected mode program and a real-mode DOS interrupt routine.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Protected mode address of the allocated RAM or NULL if failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873053}SPDXDrawRenderList{\*\bkmkend _Toc389873053}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Renders a renderlist
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60\fs24 void\tab SPDXDrawRenderList( RLS *RList, OBJ *Cam, rendfunptr *SolidRenderers, rendfunptr *TransRenderers, VSCR *VScreen );
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab Render list to render
\par }{\i\f5\fs24 Cam}{\f5\fs24 \tab Camera to render from
\par }{\i\f5\fs24 SolidRenderers }{\f5\fs24 List of non-transparent rendering routines}{\i\f5\fs24 
\par TransRenderers }{\f5\fs24 List of transparent rendering routines}{\i\f5\fs24 
\par VScreen}{\f5\fs24 \tab Virtual screen to render to}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Renders the scene contained in }{\i\f5\fs24 RList}{\f5\fs24  to the }{\i\f5\fs24 VScreen}{\f5\fs24  from the viewpoint of }{\i\f5\fs24 Cam}{\f5\fs24 
.  The render list should be pre-sorted before rendering (see SPDXByteSortRenderList).  Note that the current virtual screen (see SPDXSetCurrentVScreen) must be the same as }{\i\f5\fs24 VScreen}{\f5\fs24 .
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
The two list of render functions are used to choose which routines are used to render transparent and non-transparent polygons.  The indexing used for these lists is built from the available shading models and surface types.  By default, the majority of t
hese routines are NULL, and only the supported combinations are placed into their proper indices into the list.  Here is a code sample (taken from SPDXInitRenderer) for filling these arrays:
\par }\pard \widctlpar\tx2160 {\f5\fs24 
\par }\pard \widctlpar\tx2160 {\f60\fs24 // Fill the list with a default
\par SPDXMemSetDWORD( (void *) SolidRenderers, (INT) SPDXSolFTri, 256 );
\par 
\par SolidRenderers[AMBIENT|SOLID]    = SPDXSolFTri;
\par SolidRenderers[AMBIENT|ENVMAP]   = SPDXTexFTri;
\par SolidRenderers[AMBIENT|TEXTURED] = SPDXTexFTri;
\par SolidRenderers[LAMBERT|SOLID]    = SPDXSolFTri;
\par SolidRenderers[LAMBERT|ENVMAP]   = SPDXTexFTri;
\par SolidRenderers[LAMBERT|TEXTURED] = SPDXTexFTri;
\par SolidRenderers[GOURAUD|SOLID]    = SPDXSolGTri;
\par SolidRenderers[GOURAUD|ENVMAP]   = SPDXTexGTri;
\par SolidRenderers[GOURAUD|TEXTURED] = SPDXTexGTri;
\par SolidRenderers[PHONG  |SOLID]    = SPDXSolPTri;
\par SolidRenderers[PHONG  |ENVMAP]   = SPDXTexPTri;
\par SolidRenderers[PHONG  |TEXTURED] = SPDXTexPTri;
\par SolidRenderers[BUMP   |SOLID]    = SPDXSolBTri;
\par SolidRenderers[BUMP   |ENVMAP]   = SPDXEnvBTri;
\par SolidRenderers[BUMP   |TEXTURED] = SPDXTexBTri;
\par 
\par // Fill the list with a default
\par SPDXMemSetDWORD( (void *) TransRenderers,
\par \tab (INT)\tab SPDXTransparentSolFTri,
\par \tab 256);
\par 
\par TransRenderers[AMBIENT|SOLID]    = SPDXTransparentSolFTri;
\par TransRenderers[AMBIENT|ENVMAP]   = SPDXTransparentTexFTri;
\par TransRenderers[AMBIENT|TEXTURED] = SPDXTransparentTexFTri;
\par TransRenderers[LAMBERT|SOLID]    = SPDXTransparentSolFTri;
\par TransRenderers[LAMBERT|ENVMAP]   = SPDXTransparentTexFTri;
\par TransRenderers[LAMBERT|TEXTURED] = SPDXTransparentTexFTri;
\par TransRenderers[GOURAUD|SOLID]    = SPDXTransparentSolGTri;
\par TransRenderers[GOURAUD|ENVMAP]   = SPDXTransparentTexGTri;
\par TransRenderers[GOURAUD|TEXTURED] = SPDXTransparentTexGTri;
\par TransRenderers[PHONG  |SOLID]    = SPDXTransparentSolPTri;
\par TransRenderers[PHONG  |ENVMAP]   = SPDXTransparentTexPTri;
\par TransRenderers[PHONG  |TEXTURED] = SPDXTransparentTexPTri;
\par TransRenderers[BUMP   |SOLID]    = SPDXTransparentSolBTri;
\par TransRenderers[BUMP   |ENVMAP]   = SPDXTransparentEnvBTri;
\par TransRenderers[BUMP   |TEXTURED] = SPDXTransparentTexBTri;}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXByteSortRenderList SPDXSetCurrentVScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873054}SPDXDrawScreenLine{\*\bkmkend _Toc389873054}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Draws a line to the screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDrawScreenLine(INT X1, INT Y1, INT X2, INT Y2, CHR Color);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X1, Y1}{\f5\fs24 \tab Starting X, Y of the line
\par }{\i\f5\fs24 X2, Y2}{\f5\fs24 \tab Ending X, Y of the line
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab The color of the line}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873055}SPDXDrawScreenText{\*\bkmkend _Toc389873055}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Draws text directly to the screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDrawScreenText(VFONT *Font, CHR *String, INT X, INT Y);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Font}{\f5\fs24 \tab Registered font structure
\par }{\i\f5\fs24 String}{\f5\fs24 \tab String to draw
\par }{\i\f5\fs24 X, Y}{\f5\fs24 \tab Upper left corner of the font rectangle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Draws }{\i\f5\fs24 String}{\f5\fs24  directly to the screen in the font }{\i\f5\fs24 VFONT}{\f5\fs24  at }{\i\f5\fs24 X}{\f5\fs24 , }{\i\f5\fs24 Y}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRegisterFont
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873056}SPDXDrawVirtualLine{\*\bkmkend _Toc389873056}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Draws a line to a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDrawVirtualLine(INT X1, INT Y1, INT X2, INT Y2, CHR Color, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X1, Y1}{\f5\fs24 \tab Starting X, Y of the line
\par }{\i\f5\fs24 X2, Y2}{\f5\fs24 \tab Ending X, Y of the line
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab The color of the line
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873057}SPDXDrawVirtualText{\*\bkmkend _Toc389873057}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Draws text to a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDrawVirtualText(VFONT *Font, CHR *String, INT X, INT Y, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Font}{\f5\fs24 \tab Registered font structure
\par }{\i\f5\fs24 String}{\f5\fs24 \tab String to draw
\par }{\i\f5\fs24 X, Y}{\f5\fs24 \tab Upper left corner of the font rectangle
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Draws }{\i\f5\fs24 String}{\f5\fs24  to the virtual screen }{\i\f5\fs24 VScreen}{\f5\fs24  in the font }{\i\f5\fs24 VFONT}{\f5\fs24  at }{\i\f5\fs24 X}{\f5\fs24 , }{\i\f5\fs24 Y}{
\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRegisterFont
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873058}SPDXDumpMemLog{\*\bkmkend _Toc389873058}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Dumps a memory log to a file (SPANDEX.MEM)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXDumpMemLog(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The following information is written to the MEM file:
\par }\pard \li2880\widctlpar\tx2880 {\f5\fs24 
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Each currently allocated unit\rquote s address, length
\par {\pntext\pard\plain\f5 2. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Each currently allocated unit\rquote s onwer file and line number (if DEBUG_FUNCS is set).

\par {\pntext\pard\plain\f5 3. \tab}Total memory in use at the moment the snapshot is taken.
\par {\pntext\pard\plain\f5 4. \tab}Total number of elements in use at the time the snapshot is taken.
\par {\pntext\pard\plain\f5 5. \tab}Maximum amount of memory ever used since the last call to SPDXInitMem.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 The values of these counts are also verified by backups to ensure that there are no inconsistencies.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par For a runtime report, use the function SPDXGetMemReport.
\par }\pard \widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitMem, SPDXGetMemReport
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873059}SPDXFadePalettes{\*\bkmkend _Toc389873059}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Smoothly fade from one palette to another over a series of frames.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXFadePalettes(PAL *From, PAL *To, INT Step);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 From}{\f5\fs24 \tab Starting palette
\par }{\i\f5\fs24 To}{\f5\fs24 \tab Ending Palette
\par }{\i\f5\fs24 Step}{\f5\fs24 \tab Number of frames to fade through}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The fade will take place over }{\i\f5\fs24 Step}{\f5\fs24 
 frames, though frame timings will not be consistent across video cards and monitors.  The current palette should be the same palette as }{\i\f5\fs24 From}{\f5\fs24 
 or the palette will jump to those colors before starting palette animation.  Note that on DOS mac
hines, when in video modes other than 320x200, the BIOS is used, since VESA does not allow for setting the palette, and many cards do not support standard palette commands when in SVGA modes.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873060}SPDXFindLightByName{\*\bkmkend _Toc389873060}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate an light by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 LGT*\tab SPDXFindLightByName(CHR *Name, BYT CaseSense);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }{\i\f5\fs24 CaseSense}{\f5\fs24 \tab Case sensitivity flag (TRUE/FALSE)}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Lights are searched from the global light list.  Several lights may share a name but Spandex will only return the first occurrence found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found light, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXFindLightByNameLen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873061}SPDXFindLightByNameLen{\*\bkmkend _Toc389873061}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate an object by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 LGT*\tab SPDXFindLightByNameLen(CHR *Name, INT Len, BYT CaseSense);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }{\i\f5\fs24 Len}{\f5\fs24 \tab Length of name
\par }{\i\f5\fs24 CaseSense}{\f5\fs24 \tab Case sensitivity flag (TRUE/FALSE)}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Lights are searched from the global light list.  Several lights may share a name but Spandex wil
l only return the first occurrence found with the given name.  Several lights may share a name but Spandex will only return the first light found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 The }{\i\f5\fs24 Len}{\f5\fs24  parameter specifies the maximum length of characters to match (this works like }{\b\f5\fs24 strncmp}{\f5\fs24  and }{\b\f5\fs24 strnicmp}{\f5\fs24 ).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found light, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXFindLightByName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873062}SPDXFindMapByName{\*\bkmkend _Toc389873062}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate a map by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BMAP*\tab SPDXFindMapByName(CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Several maps may share a name but Spandex will only return the first map found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found map, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873063}SPDXFindMaterialByName{\*\bkmkend _Toc389873063}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate a material by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 MTRL*\tab SPDXFindMaterialByName(CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Several materials may share a name but Spandex will only return the first occurrence found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found material, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873064}SPDXFindMemOwner{\*\bkmkend _Toc389873064}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate the owner of a block of allocated memory
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXFindMemOwner(void *Address);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Address}{\f5\fs24 \tab Search key
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab 
Pointer to the owner string of a block of memory (containing the source-code filename of the procedure that allocated the memory.  If this block of RAM is invalid (or has not been allocated by SPDXMalloc()) a NULL is returned.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMalloc, SPDXFree
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873065}SPDXFindObjectByName{\*\bkmkend _Toc389873065}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate an object by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 OBJ*\tab SPDXFindObjectByName(CHR *Name, OBJ *Universe, BYT CaseSense);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }{\i\f5\fs24 Universe}{\f5\fs24 \tab Where to begin search
\par }{\i\f5\fs24 CaseSense}{\f5\fs24 \tab Case sensitivity flag (TRUE/FALSE)}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Objects are searched starting at }{\i\f5\fs24 Object}{\f5\fs24 
 and recursively searched through each child down the tree.  Several objects may share a name but Spandex will only return the first object found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found object, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXFindObjectByNameLen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873066}SPDXFindObjectByNameLen{\*\bkmkend _Toc389873066}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Locate an object by name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 OBJ*\tab SPDXFindObjectByNameLen(CHR *Name, OBJ *Universe, INT Len, BYT CaseSense);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Search key
\par }{\i\f5\fs24 Universe}{\f5\fs24 \tab Where to begin search
\par }{\i\f5\fs24 Len}{\f5\fs24 \tab Length of name
\par }{\i\f5\fs24 CaseSense}{\f5\fs24 \tab Case sensitivity flag (TRUE/FALSE)}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Objects are searched starting at }{\i\f5\fs24 Object}{\f5\fs24  and recursively searched through each child down the tree.  The }{\i\f5\fs24 Len}{\f5\fs24 
 parameter specifies the maximum length of characters to match (this works like }{\b\f5\fs24 strncmp}{\f5\fs24  and }{\b\f5\fs24 strnicmp}{\f5\fs24 ). Several objects 
may share a name but Spandex will only return the first object found with the given name.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the found object, or NULL if not found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXFindObjectByName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873067}SPDXFlushBuffer{\*\bkmkend _Toc389873067}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Flush a buffer for a buffered file
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXFlushBuffer(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Flushes the buffer for a file
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab None.
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873068}SPDXGetBackgroundColor{\*\bkmkend _Toc389873068}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the background color
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetBackgroundColor(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the background color set by SPDXSetBackgroundColor.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetBackgroundColor
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873069}SPDXGetc{\*\bkmkend _Toc389873069}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Read a character from a file (buffered)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetc(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Reads in a character from the file specified by }{\i\f5\fs24 Handle}{\f5\fs24  (buffered).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the value from SPDXRead.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRead, SPDXPutc, SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873070}SPDXGetChild{\*\bkmkend _Toc389873070}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the address of a child object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 OBJ*\tab SPDXGetChild(OBJ *Parent, INT Index);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Parent}{\f5\fs24 \tab The requested child\rquote s parent
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab The child\rquote s index into the parent\rquote s child list}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The pointer returned is a pointer to the actual child, not a copy.  So modifying any structure elements in this structure directly affect the child itself.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the child at index }{\i\f5\fs24 Index}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddChild
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873071}SPDXGetChildCount{\*\bkmkend _Toc389873071}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the number of children for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetChildCount(OBJ *Parent);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Parent}{\f5\fs24 \tab Parent object}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the number of children for }{\i\f5\fs24 Parent}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddChild, SPDXRemoveChild
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873072}SPDXGetClosestColor{\*\bkmkend _Toc389873072}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the closest color index into a given palette of an RGB triplet
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetClosestColor(UINT Red, UINT Green, UINT Blue, PAL *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Red}{\f5\fs24 \tab Red component of the RGB triplet}{\i\f5\fs24 
\par Green}{\f5\fs24 \tab Green component of the RGB triplet}{\i\f5\fs24 
\par }{\f5\fs24 Blue\tab Blue component of the RGB triplet}{\i\f5\fs24 
\par }{\f5\fs24 Palette\tab Palette to perform color matching}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the color index of a color in }{\i\f5\fs24 Palette}{\f5\fs24  nearest to the given RGB triplet.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873073}SPDXGetCopyrightMessage{\*\bkmkend _Toc389873073}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Retrieves the Spandex copyright message
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetCopyrightMessage(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The copyright message is formatted in the following way:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \qc\fi-2160\li2160\widctlpar\tx2160 {\b\i\f5\fs24 Spandex vX.XX Copyright 1994, 1995 Paul D. Nettle.  All rights reserved.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par The copyright number is retrieved from SPDXGetVersion.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab The address of a string containing the copyright message.  Note that this string is volatile.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVersion
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873074}SPDXGetDebugState{\*\bkmkend _Toc389873074}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current state of the debug flag set.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetDebugState(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Spandex uses the first four bits of a 32-bit value for internal use.  The remaining bits are for developer use, and may be manipulated freely.  The internal debug flags reserved for Spandex are:
\par }\pard \li2880\widctlpar\tx2880 {\f5\fs24 
\par DEBUG_BASIC\tab \tab 0x1
\par DEBUG_MEM\tab \tab 0x2
\par DEBUG_MEMTRACE\tab 0x4
\par DEBUG_FUNCS\tab \tab 0x8
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_BASIC refers to basic debugging information (for example, memory leaks).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_MEM refers to memory related information (for example, details of each memory leak).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
DEBUG_MEMTRACE will cause the memory allocation routines in Spandex to report on every single allocation and free of memory into the debug file.  This will cause a dramatic slowdown to the application, but is invaluable at times of need.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_FUNCS will cause the filenames and source line numbers to appear in the log file when entries are logged.  It may be advantageous not to have this information.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current state of the 32-bit debug flag set.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetDebugState, SPDXSetDebugStateFromFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873075}SPDXGetDistance2D{\*\bkmkend _Toc389873075}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Calculate the distance between two points.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetDistance2D(P2D *Point1, P2D *Point2);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Point1, 2}{\f5\fs24 \tab Points to calculate distance between.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the distance between }{\i\f5\fs24 Point1}{\f5\fs24  and }{\i\f5\fs24 Point2}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetDistance3D
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873076}SPDXGetDistance3D{\*\bkmkend _Toc389873076}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Calculate the distance between two points in 3-space.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetDistance3D(P3D *Point1, P3D *Point2);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Point1, 2}{\f5\fs24 \tab Points to calculate distance between.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the distance between }{\i\f5\fs24 Point1}{\f5\fs24  and }{\i\f5\fs24 Point2}{\f5\fs24  in 3-space.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetDistance2D
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873077}SPDXGetErrorString{\*\bkmkend _Toc389873077}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the English string of an error code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetErrorString(WRD ErrorCode);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ErrorCode}{\f5\fs24 \tab Error code to translate}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Translates }{\i\f5\fs24 ErrorCode}{\f5\fs24  to an English String.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the string that represents an English description of }{\i\f5\fs24 ErrorCode}{\f5\fs24 
.  Note that modifying this string will permanently modify the string for all subsequent calls for }{\i\f5\fs24 ErrorCode}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab None.
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873078}SPDXGetFatalErrors{\*\bkmkend _Toc389873078}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current flag for fatal errors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetFatalErrors(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current value of the fatal errors flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetFatalErrors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873079}SPDXGetFileType{\*\bkmkend _Toc389873079}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Translate a filename to an image type
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetFileType(CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Name}{\f5\fs24 \tab Filename}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
This function does not actually open the file and interrogate it.  It simply looks at the extension (last 3 characters only) and returns one of the following:  IMAGETYPE_IMG, IMAGETYPE_GIF, IMAGETYPE_G24, IMAGETYPE_TGA, IMAGETYPE_BMP, IMAGETYPE_IPI or IM
AGETYPE_PCX.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab One of the above listed types or IMAGETYPE_UNKNOWN.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873080}SPDXGetGlobalResolution{\*\bkmkend _Toc389873080}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the resolution of the output display device.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetGlobalResolution(INT *ResX, INT *ResY);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Width and height of the display are stored here}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Spandex uses these values to determine the resolution of output display device.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the width and height of the display in }{\i\f5\fs24 ResX, ResY}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetGlobalResolution
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873081}SPDXGetLightCount{\*\bkmkend _Toc389873081}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the light count of a light list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetLightCount(LLS *Light);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab List of lights to count}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the Count variable from }{\i\f5\fs24 Light}{\f5\fs24  structure (type LLS).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873082}SPDXGetLightIntensity{\*\bkmkend _Toc389873082}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the intensity of a light.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetLightIntensity(LGT *Light);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to retrieve intensity from
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The intensity of a light specifies how much light it produces.  Intensity values may range from 0.0 to 1.0.  The value may range higher than 1.0, but make sure you understand the details behind the lighting calculations.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Intensity for }{\i\f5\fs24 Light}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetLightIntensity
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873083}SPDXGetLightLocal{\*\bkmkend _Toc389873083}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the local location of a point light
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 P3D*\tab SPDXGetLightLocal(LGT *Light);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to receive the local location
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The local location represents the location of a light relative to its parent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab The local location of }{\i\f5\fs24 Light}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetLightLocal}{\f60 
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873084}SPDXGetLightName{\*\bkmkend _Toc389873084}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the name of a light
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetLightName(LGT *Light);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to retrieve new name from
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Returns the name of a light.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the name string within the light itself.  Modifying this string will directly affect the light.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetLightName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873085}SPDXGetLoggedErrors{\*\bkmkend _Toc389873085}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current value for the error logging flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetLoggedErrors(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current value for the error logging flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetLoggedErrors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873086}SPDXGetLoggedStrings{\*\bkmkend _Toc389873086}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current value for the string logging flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetLoggedStrings(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current value for the string logging flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetLoggedStrings
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873087}SPDXGetMaterialAmbientLight{\*\bkmkend _Toc389873087}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the amount of ambient light for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetMaterialAmbientLight(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the ambient light from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the amount of ambient light for }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialAmbientLight
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873088}SPDXGetMaterialAmbientReflectCoefficient{\*\bkmkend _Toc389873088}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the Ka value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetMaterialAmbientReflectCoefficient(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the Ka value from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Ka}{\f5\fs24 
 (the ambient light reflect coefficient) is a common rendering variable from the standard rendering equations for Phong and Gouraud.  It specifies how much of the ambient light applied to any face using }{\i\f5\fs24 Material}{\f5\fs24 
 actually affects the face.  The values for }{\i\f5\fs24 Ka}{\f5\fs24  can only range from 0.0 (no ambient light is applied) to 1.0 (all available ambient light is applied).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns }{\i\f5\fs24 Ka}{\f5\fs24  for }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialAmbientReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873089}SPDXGetMaterialBumpMap{\*\bkmkend _Toc389873089}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a pointer to the bump map of a material.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BMAP*\tab SPDXGetMaterialBumpMap(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the bump map from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the bump map of }{\i\f5\fs24 Material}{\f5\fs24 . Modifying this structure will directly affect the materials using it.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialBumpMap
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873090}SPDXGetMaterialColor{\*\bkmkend _Toc389873090}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the base color of the material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 UBYT\tab SPDXGetMaterialColor(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the color from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the color for }{\i\f5\fs24 Material}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialColor
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873091}SPDXGetMaterialDiffuseReflectCoefficient{\*\bkmkend _Toc389873091}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the Ka value for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetMaterialDiffuseReflectCoefficient(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the Ka value from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Kd}{\f5\fs24 
 (the diffuse light reflect coefficient) is a common rendering variable from the standard rendering equations for Phong and Gouraud.  It specifies how much of the diffuse light applied to any face using }{\i\f5\fs24 Material}{\f5\fs24 
 actually affects the face.  The values for }{\i\f5\fs24 Kd}{\f5\fs24  can only range from 0.0 (no diffuse light is applied) to 1.0 (all available diffuse light is applied).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns }{\i\f5\fs24 Ka}{\f5\fs24  for }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialDiffuseReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873092}SPDXGetMaterialName{\*\bkmkend _Toc389873092}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the name of the material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetMaterialColor(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the name from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Modifying this string will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the name for }{\i\f5\fs24 Material}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873093}SPDXGetMaterialShineCoefficient{\*\bkmkend _Toc389873093}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the shine value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetMaterialShineCoefficient(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the shine value from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The shine coefficient is a common rendering variable from the standard rendering equations for Phong and Gouraud.  It essentially specifies the size of the specular reflection.  Larger values produce a much smaller specular reflection.  This effectively 
increases the shininess of a surface.  In theory, a value of infinity would represent an infinitely shiny surface, and hence produce an infinitel
y small reflection of a point light source.  Within Spandex, the value for shine may range from 0.0 to 10,000.0.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the shine value for }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialShineCoefficient
\par }\pard\plain \s19\li2070\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873094}SPDXGetMaterialSpecularReflectCoefficient{\*\bkmkend _Toc389873094}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the Ks value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetMaterialSpecularReflectCoefficient(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the Ks value from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Ks}{\f5\fs24  (the specular reflect coefficient) is a common rendering variabl
e from the standard rendering equations for Phong and Gouraud.  It specifies how much of the specular reflection applied to an object actually affects the surface.  The values for }{\i\f5\fs24 Ks}{\f5\fs24 
 can only range from 0.0 (no specular reflection is applied) to 1.0 (all available specular reflection is applied).  Specular reflections are also commonly referred to as \ldblquote specular highlights.\rdblquote 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns }{\i\f5\fs24 Ks}{\f5\fs24  for }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialSpecularReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873095}SPDXGetMaterialSurface{\*\bkmkend _Toc389873095}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the surface type for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BYT\tab SPDXGetMaterialSurface(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the surface type from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The surface type directly modifies the appearance of an object rendered in 3D.  Here is a brief description of the different surface types:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1530\li4410\widctlpar\tx4500 {\f5\fs24 SOLID\tab Polygons in an object have a constant surface color.
\par }\pard \fi-1530\li4410\widctlpar\tx4500 {\f5\fs24 TEXTURED\tab Polygons in an object have a bitmap (texture) projected onto them during rendering.  This is what allows an object to \lquote look like wood\rquote , for example.
\par }\pard \fi-1530\li4410\widctlpar\tx4500 {\f5\fs24 ENVMAP\tab Polygons in an object have a bitmap (texture) reflected onto them during rendering.  This is what allows an object to look like \lquote chrome\rquote , for example.
\par }\pard \fi-1530\li4410\widctlpar\tx2160\tx4500 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the surface type for }{\i\f5\fs24 Material}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialSurface
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873096}SPDXGetMaterialTexture{\*\bkmkend _Toc389873096}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the texture address of a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BMAP*\tab SPDXGetMaterialTexture(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the texture from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Modifying the structure returned from this routine will directly modify the material.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the pointer to }{\i\f5\fs24 Material\rquote s}{\f5\fs24  texture.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialTexture
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873097}SPDXGetMaterialTransparency{\*\bkmkend _Toc389873097}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Gets the object transparency flag from a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BYT\tab SPDXGetMaterialTransparency(MTRL *Material);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to retrieve the transparency flag from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Transparency mapping allows objects to become semi-opaque (or transparent).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the transparency flag.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMaterialTransparency
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873098}SPDXGetMemReport{\*\bkmkend _Toc389873098}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a memory report structure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetMemReport(MEMREP *MemReport);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 MemReport}{\f5\fs24 \tab Structure that gets filled with memory report information.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Populates the }{\i\f5\fs24 MemReport}{\f5\fs24  structure with the following information:
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Initialization flag
\par {\pntext\pard\plain\f5 2. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Maximum memory ever used since last call to SPDXInitMem
\par {\pntext\pard\plain\f5 3. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Total memory in use
\par {\pntext\pard\plain\f5 4. \tab}Total number of memory elements in use
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 The SPDXDumpMemLog function can be used to get more information regarding memory usage.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitMem, SPDXDumpMemLog
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873099}SPDXGetMode{\*\bkmkend _Toc389873099}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current mode number
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetMode(INT *ModeNumber);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 ModeNumber}{\f5\fs24 \tab Variable to receive the mode number.}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Returns the current mode number.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMode
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873100}SPDXGetNearZ{\*\bkmkend _Toc389873100}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the near-z (hither) clipping plane distance.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetNearZ(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Note that the default near-z clipping distance is 20.0.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the near-z clipping plane distance from the camera.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetNearZ
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873101}SPDXGetObjectCount{\*\bkmkend _Toc389873101}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Retrieves the count from an object list (OBL)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetObjectCount(OBL *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Pointer to the object list}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the count from the object list (OBL).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873102}SPDXGetObjectDevUse{\*\bkmkend _Toc389873102}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the developer variables for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetObjectDevUse(OBJ *Object, INT Index);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the new developer variables from
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Index of the Developer Use variable
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Each object contains an array of DEV_USE_COUNT variables.  These are of type INT, and may be casted to any other 32-bit type (void * for example).  Spandex has no internal use for this data.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the 32-bit developer use variable
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectDevUse, SPDXSetObjectType, SPDXGetObjectType
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873103}SPDXGetObjectDirection{\*\bkmkend _Toc389873103}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the direction vector for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 VEC*\tab SPDXGetObjectDirection(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the direction vector from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Each object contains a vector for maintaining the direction of an object.  This can be used for a number of purposes, one of which is movement along its \ldblquote 
facing direction.\rdblquote 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Pointer to the direction vector within }{\i\f5\fs24 Object}{\f5\fs24 . Modifying this vector will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectDirection
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873104}SPDXGetObjectDrawFlags{\*\bkmkend _Toc389873104}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the drawing (rendering) flags for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BYT\tab SPDXGetObjectDrawFlags(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the draw flags from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The draw flags specify what properties of an object are visible (rendered).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a byte containing the following values:
\par }\pard \fi-720\li3600\widctlpar\tx2880 {\f5\fs24 DRAW_TRIS
\par DRAW_QUADS
\par DRAW_POINTS
\par DRAW_ALL
\par DRAW_NONE
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectDrawFlags
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873105}SPDXGetObjectLense{\*\bkmkend _Toc389873105}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Retrieve the lense size from an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetObjectLense( OBJ *Object );
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the lense from
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The }{\i\f5\fs24 lense}{\f5\fs24 
 of an object is the lense size (in millimeters) used to calculate the FOV (field of vision) for a given camera.  The default Lense size is 48.23529.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Current }{\i\f5\fs24 Lense}{\f5\fs24  for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectLense
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873106}SPDXGetObjectLocal{\*\bkmkend _Toc389873106}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the local location of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 P3D*\tab SPDXGetObjectLocal(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the local location from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The local location represents the location of an object relative to its parent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the Local Location structure within }{\i\f5\fs24 Object}{\f5\fs24 . Modifying this structure will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectLocal, SPDXGetObjectWorld, SPDXSetObjectWorld
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873107}SPDXGetObjectName{\*\bkmkend _Toc389873107}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the name of the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetObjectName(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the name from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Modifying this string will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the name string within the object itself.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc345291926}{\*\bkmkstart _Toc389873108}SPDXGetObjectShadeModel{\*\bkmkend _Toc345291926}{\*\bkmkend _Toc389873108}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the shade model for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BYT\tab SPDXGetObjectShadeModel(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the shading model from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The shading model directly modifies the appearance of an object rendered in 3D.  Here is a brief description of the different shading models:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 AMBIENT - objects are not shaded according to individual lights.  They are shaded according to the ambient light value for the object.
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 LAMBERT - objects are shaded at the polygon level according to individual lights.  Entire polygons maintain a consistent shade across the surface, giving the object a \ldblquote faceted\rdblquote  look.

\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 
GOURAUD - objects are shaded at the vertex level according to individual lights.  This shading model calculates the shade of each vertex, then smoothly shades the polygon from vertex to vertex using linear interpolation.
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 PHONG - objects are shaded at the pixel level according to a global Phong map.  This map is used as an intensity modifier for each pixel on surface of the object as it is rendered.
\par }\pard \fi-720\li3600\widctlpar\tx3600 {\f5\fs24 BUMP - objects are shaded using PHONG shading, with an additive bump map to give the appearance of a rough or bumpy surface.  The bump map determines the look of the surface.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the shade model for }{\i\f5\fs24 Object}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectShadeModel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873109}SPDXGetObjectShowBacks{\*\bkmkend _Toc389873109}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the back-face culling flag for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 BYT\tab SPDXGetObjectShowBacks(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the show backs flag from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Back-face culling prevents geometric faces that make up the shape of an object from being drawn when they are facing away from the camera.  This is done since, with most closed objects, you cannot ever see a face from it\rquote 
s back side (unless transparent).  If an object is left open, faces may be seen from the back-side.  If this is desirable, you will need to enable the \ldblquote show backs\rdblquote  flag for the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the show backs flag for }{\i\f5\fs24 Object.}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectShowBacks
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873110}SPDXGetObjectSteadyOrientation{\*\bkmkend _Toc389873110}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the steady rotation of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 ROT*\tab SPDXGetObjectSteadyOrientation(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the steady rotation from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Each object may have a steady (constant) rotation applied to it.  Each time through the rendering pipeline, the object will get rotated by the specified amount in the steady rotation structure for the object.  For cer
tain applications, it may be desirable to apply a constant rotation to an object or set of objects and not worry about them again.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the steady rotation structure in the object. Modifying this structure will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectSteadyRotation, SPDXRotateObject
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873111}SPDXGetObjectTriCount{\*\bkmkend _Toc389873111}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a count of the polygons in an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetObjectTriCount(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object containing polygon geometry}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the polygon count for }{\i\f5\fs24 Object}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddObjectTri
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873112}SPDXGetObjectType{\*\bkmkend _Toc389873112}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the type of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetObjectType(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the type from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The type variable is stored in the object for the developer only.  Spandex has no internal use for this value.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Type for }{\i\f5\fs24 Object}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectType, SPDXGetObjectDevUse, SPDXSetObjectDevUse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873113}SPDXGetObjectVertexCount{\*\bkmkend _Toc389873113}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a count of the vertices in an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetObjectVertexCount(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object containing vertices to count}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the vertex count for }{\i\f5\fs24 Object}{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddObjectVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873114}SPDXGetObjectWorld{\*\bkmkend _Toc389873114}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the world location of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 P3D*\tab SPDXGetObjectWorld(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the world location from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The world location represents the location of an object relative to the camera in world space.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the World Location structure within }{\i\f5\fs24 Object}{\f5\fs24 . Modifying this structure will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectWorld, SPDXGetObjectLocal, SPDXSetObjectLocal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873115}SPDXGetPalette{\*\bkmkend _Toc389873115}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the palette for the display device
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetPalette(INT Start, INT Count, PAL *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Start}{\f5\fs24 \tab Starting palette entry to modify
\par }{\i\f5\fs24 Count}{\f5\fs24 \tab Number of palette entries to modify
\par }{\i\f5\fs24 Palette}{\f5\fs24 \tab Palette buffer}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The display device\rquote s palette is retrieved, and the contents are placed into }{\i\f5\fs24 Palette}{\f5\fs24 .  The palette is retrieved starting at the }{\i\f5\fs24 Start}{
\f5\fs24  palette entry for }{\i\f5\fs24 Count}{\f5\fs24  colors using the BIOS.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetPalette
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873116}SPDXGetPointCount{\*\bkmkend _Toc389873116}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the count of the number of points in a point list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetPointCount(PLS *PList);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 PList}{\f5\fs24 \tab Point list}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the Count variable from the point list (type PLS)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873117}SPDXGetPointVertex{\*\bkmkend _Toc389873117}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the vertex location of a point
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 VER*\tab SPDXGetPointVertex(OBJ *Object, INT Index);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains points to be modified
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Index of the point
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns a pointer to the point located at index }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24 . Modifying this vertex will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetPointVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873118}SPDXGetRenderList{\*\bkmkend _Toc389873118}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a pointer to the global render list
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 RLS*\tab SPDXGetRenderList();
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Th
ere is only one render list per session of Spandex (only one session allowed per DOS session).  Spandex allows the developers to add functionality to the rendering pipeline, and also allows developers to directly modify the render list by adding to or rem
oving from it.  This extends the flexibility of Spandex tremendously.  Be cautious when modifying the render list.  Polygons in the render list must be fully clipped (to the viewing frustrum and to the screen) before they may be drawn.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Global render list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873119}SPDXGetScreenPixel{\*\bkmkend _Toc389873119}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the color of a pixel at given x, y.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 UINT\tab SPDXGetScreenPixel(UINT X, UINT Y);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X, Y}{\f5\fs24 \tab Location on screen of pixel}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the color of the pixel at }{\i\f5\fs24 X}{\f5\fs24 , }{\i\f5\fs24 Y}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetScreenPixel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873120}SPDXGetSVGAInfo{\*\bkmkend _Toc389873120}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns Super VGA information from the VESA VBE
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetSVGAInfo(SVGA *SVGAInfoStruct, INT ModeNumber);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 SVGAInfoStruct}{\f5\fs24 \tab Contains the SVGA information
\par }{\i\f5\fs24 ModeNumber}{\f5\fs24 \tab SVGA mode}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab For complete VESA VBE information, please contact VESA.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVESAInfo
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873121}SPDXGetTriDistance{\*\bkmkend _Toc389873121}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Calculate the distance between a point in 3-space and the center of a triangle.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetTriDistance(TRI *Triangle, P3D *FromWhere);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Triangle}{\f5\fs24 \tab Used in distance calculation
\par }{\i\f5\fs24 FromWhere}{\f5\fs24 \tab Used in distance calculation}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Distance is calculated from the center of mass for }{\i\f5\fs24 Triangle}{\f5\fs24  to }{\i\f5\fs24 FromWhere}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Distance from }{\i\f5\fs24 Triangle}{\f5\fs24  to }{\i\f5\fs24 FromWhere}{\f5\fs24  in fixed-point.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873122}SPDXGetTriNormal{\*\bkmkend _Toc389873122}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the normal for a TRI
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetTriNormal(OBJ *Object, INT Index, VEC *Normal);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains triangle geometry
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which triangle to modify
\par }{\i\f5\fs24 Normal}{\f5\fs24 \tab Vector that receives the triangle\rquote s normal
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Updates }{\i\f5\fs24 Normal}{\f5\fs24  with the values from triangle at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24 
.  These values are copied from the triangle.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetTriNormal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873123}SPDXGetTriNormalFromOrientation{\*\bkmkend _Toc389873123}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Calculate a triangle normal (unit vector) based on vertex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetTriNormalFromOrientation(TRI *Triangle, VEC *Vector);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Triangle}{\f5\fs24 \tab Triangle to manipulate
\par }{\i\f5\fs24 Vector}{\f5\fs24 \tab Vector within triangle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2880\li2880\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Using }{\i\f5\fs24 Vector}{\f5\fs24 , a unit normal is calculated for }{\i\f5\fs24 Triangle}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873124}SPDXGetTriVertices{\*\bkmkend _Toc389873124}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the vertices for a TRI
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetTriVertices(OBJ *Object, INT Index, VER *V1, VER *V2, VER *V3);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains triangle geometry
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which triangle to modify
\par }{\i\f5\fs24 V1,V2,V3}{\f5\fs24 \tab Vertices that receive the triangle\rquote s vertices}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Updates }{\i\f5\fs24 V1, }{\f5\fs24 V}{\i\f5\fs24 2}{\f5\fs24  and }{\i\f5\fs24 V3}{\f5\fs24  with the values from triangle at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object
}{\f5\fs24 .  These values are copied from the triangle.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetTriVertices
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873125}SPDXGetVersion{\*\bkmkend _Toc389873125}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current Spandex version.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 FLT\tab SPDXGetVersion(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current Spandex version number in fixed pioint.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetCopyrightMessage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873126}SPDXGetVertex{\*\bkmkend _Toc389873126}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns a vertex from an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 VER*\tab SPDXGetVertex(OBJ *Object, INT Index);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the vertex from
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which vertex to modify
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the address of the vertex at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24 . Modifying this vertex will directly affect the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873127}SPDXGetVESAInfo{\*\bkmkend _Toc389873127}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Retrieves the VESA VBE information structure
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetVESAInfo(VESA *VESAInfoStruct);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VESAInfoStruct}{\f5\fs24   Structure to hold VESA VBE information.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab For complete VESA VBE information, please contact VESA.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetSVGAInfo
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873128}SPDXGetVideoWindow{\*\bkmkend _Toc389873128}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the VESA video window.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetVideoWindow(INT WindowFlag, INT *WindowPos);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 WindowFlag}{\f5\fs24 \tab Window number
\par }{\i\f5\fs24 WindowPos}{\f5\fs24 \tab Window position (in granularity units)}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab For complete VESA VBE information, please contact VESA.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVideoWindow
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873129}SPDXGetVirtualBuffer{\*\bkmkend _Toc389873129}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the buffer address for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXGetVirtualBuffer(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the address of the buffer within a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873130}SPDXGetVirtualCenter{\*\bkmkend _Toc389873130}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the center point of a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetVirtualCenter(INT *CenterX, INT *CenterY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 CenterX, CenterY}{\f5\fs24 \tab Where to store the center point
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the center point of the virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualCenter
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873131}SPDXGetVirtualClipping{\*\bkmkend _Toc389873131}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the clipping values for the virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualClipping(INT *Left, INT *Right, INT *Top, INT *Bottom, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Left}{\f5\fs24 \tab Where to store the left-edge of the clipping rectangle}{\i\f5\fs24 
\par Top}{\f5\fs24 \tab Where to store the top-edge of the clipping rectangle
\par }{\i\f5\fs24 Right}{\f5\fs24 \tab Where to store the right-edge of the clipping rectangle}{\i\f5\fs24 
\par Bottom}{\f5\fs24 \tab Where to store the bottom-edge of the clipping rectangle}{\i\f5\fs24 
\par VScreen}{\f5\fs24 \tab Virtual screen to retrieve the clipping rectangle from}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The clipping rectangle denotes the inner extents of the clipping region (anything outside of this region is clipped).  If the clipping region is set to (0,0) - (10,10) then pixels at (10,10) will be rendered, but not at (11,10) or (10,11).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualClipping
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873132}SPDXGetVirtualfResolution{\*\bkmkend _Toc389873132}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the fixed-point resolution of a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetVirtualfResolution(FLT *ResX, FLT *ResY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Where to store the resolution
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the fixed-point resolution in }{\i\f5\fs24 ResX}{\f5\fs24  and }{\i\f5\fs24 ResY}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualiResolution, SPDXSetVirtualResolution
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873133}SPDXGetVirtualiResolution{\*\bkmkend _Toc389873133}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the integer resolution of a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetVirtualiResolution(INT *ResX, INT *ResY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Where to store the resolution
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the integer resolution in }{\i\f5\fs24 ResX}{\f5\fs24  and }{\i\f5\fs24 ResY}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualfResolution, SPDXSetVirtualResolution
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873134}SPDXGetVirtualMaxPolysToRender{\*\bkmkend _Toc389873134}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Limits the number of polygons rendered for a single scene.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXGetVirtualMaxPolysToRender(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreeen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Polygon counts are the biggest cause of slow rendering.  By reducing the polygon count, you see less but run faster.  This enables Spandex to limit the maximum number of polygons to render to the screen.  All polygons are still run through the entire ren
dering pipeline, but are just not drawn.  The polygons that are skipped are the furthest polygons from the camera.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab The maximum polygon limit for }{\i\f5\fs24 VScreen}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtaualMaxPolysToRender
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873135}SPDXGetVirtualPixel{\*\bkmkend _Toc389873135}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the color of a pixel at given x, y on a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 UINT\tab SPDXGetVirtualPixel(UINT X, UINT Y, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X, Y}{\f5\fs24 \tab Location on screen of pixel
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the color of the pixel at }{\i\f5\fs24 X}{\f5\fs24 , }{\i\f5\fs24 Y}{\f5\fs24  on a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualPixel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873136}SPDXGetVirtualScaleFactors{\*\bkmkend _Toc389873136}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the scale factors for a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetVirtualScaleFactors(FLT *ScaleX, FLT *ScaleY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2880\widctlpar\tx2880 {\i\f5\fs24 ScaleX, ScaleY}{\f5\fs24 \tab Where to store X and Y scale factors for 3D projection
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to affect}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The scale factors are used to modify the viewing angle of a 3-dimensional scene.  If different values are used for the X and Y scale factors, a pixel ratio will be affected.

\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the scale factors for }{\i\f5\fs24 VScreen}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualScreenFactors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873137}SPDXGetVirtualZBuffer{\*\bkmkend _Toc389873137}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the z-buffer address for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 ZBUF*\tab SPDXGetVirtualZBuffer(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the address of the buffer within a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualZBuffer, SPDXClearVirtualZBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873138}SPDXInheritObject{\*\bkmkend _Toc389873138}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Causes }{\i\f5\fs24 Child}{\f5\fs24  to gain properties from }{\i\f5\fs24 Parent}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXInheritObject(OBJ *Parent, OBJ *Child);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Parent}{\f5\fs24 \tab Parent object
\par }{\i\f5\fs24 Child}{\f5\fs24 \tab Child Object to receive new properties}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Child}{\f5\fs24  receives all values from the parent (a copy is made) except lists of Lights, Triangles, Vertices, Points and Children.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMakeObjectDefault
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873139}SPDXInit{\*\bkmkend _Toc389873139}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the Spandex sub-system.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInit(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Note that the services must be opened before Spandex may be initialized (see SPDXOpenServices).  Initializing Spandex consists of many steps.  They are (in the following order):

\par }\pard \li2880\widctlpar\tx2880 {\f5\fs24 
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 
Initialize the zero-memory area for use in detection of NULL pointer bugs (see SPDXUninit).
\par {\pntext\pard\plain\f5 2. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Resets the error file (see SPDXResetErrorFile).
\par {\pntext\pard\plain\f5 3. \tab}Globals are initialized (see SPDXInitGlobals).
\par {\pntext\pard\plain\f5 4. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Memory Manager is initialized (see SPDXInitMem).
\par {\pntext\pard\plain\f5 5. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Tables are initialized (see SPDXInitTables).
\par {\pntext\pard\plain\f5 6. \tab}The screen is initialized (see SPDXInitScreen).
\par {\pntext\pard\plain\f5 7. \tab}The initialization flag is set.
\par {\pntext\pard\plain\f5 8. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 
If the UseIRQ flag is set in the SPDXGlobals structure, then interrupts are initialized (see SPDXInitializeInterrupts).
\par {\pntext\pard\plain\f5 9. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 The renderer is initialized (see SPDXInitRenderer).
\par {\pntext\pard\plain\f5 10. \tab}VESA information is loaded (see SPDXGetVESAInfo).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXOpenServices, SPDXUninit, SPDXResetErrorFile, SPDXInitGlobals, SPDXInitMem, SPDXInitTables, SPDXInitScreen, SPDXInitializeInterrupts, SPDXInitRenderer, SPDXGetVESAInfo
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873140}SPDXInitByteSortStack{\*\bkmkend _Toc389873140}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the byte-sorting stack
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXInitByteSortStack(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXByteSortRenderList
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873141}SPDXInitGlobals{\*\bkmkend _Toc389873141}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initializes the SPDXGlobals structure
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitGlobals(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The SPDXGlobals structu
re contains all globals for the entire system.  Initialization simply consists of setting the entire structure to zeros, allocating necessary LOW DOS ram and setting the debug flags from the debug flags file (SPANDEX.DBG).  Note that the SPDXInitTables ro
utine must be called to initialize the global tables.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCleanupGLobals, SPDXInitTables
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873142}SPDXInitializeInterrupts{\*\bkmkend _Toc389873142}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the vertical blank interrupt handler.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXInitializeInterrupts(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXResetInterrupts
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873143}SPDXInitMaps{\*\bkmkend _Toc389873143}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the texture maps used for rendering
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitMaps(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Any existing texture maps are removed from memory, and memory is allocated for the palette and transparency tables.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCleanupMaps
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873144}SPDXInitMaterials{\*\bkmkend _Toc389873144}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Remove all materials from the global material list and prepares them for usage.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXCleanupMaterials(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The materials are stored in a global material list for the sake of speed during rendering.  Use this function with care to remove all materials from this global list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCleanupMaterials, SPDXAddMaterial
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873145}SPDXInitMem{\*\bkmkend _Toc389873145}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the memory manager within Spandex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXInitMem(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab If the memory manager has already bee
n initialized, it is first de-initialized, then re-initialized.  The memory manager allocates all needed memory for its internal tracking and other internal initialization is performed.  This function must be called before any of the memory functions may 
be used (i.e. SPDXMalloc, SPDXFree, SPDXDumpMemLog, SPDXGetMemReport).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXUninitMem, SPDXMalloc, SPDXFree, SPDXDumpMemLog, SPDXGetMemReport
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873146}SPDXInitMouse{\*\bkmkend _Toc389873146}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the mouse handler.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitMouse(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The initialization routine first checks for the availability of a mouse driver, and if present, initializes the driver and sets the mouse range to a default of ROT_POINTS and positions the mouse at ROT_POINTS/2.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXUninitMouse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873147}SPDXInitRenderer{\*\bkmkend _Toc389873147}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize the Spandex renderer
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitRenderer(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Used by SPDXInit to initialize the renderer
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXUninitRenderer, SPDXInit
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873148}SPDXInitScreen{\*\bkmkend _Toc389873148}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize screen parameters
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitScreen(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function should only be called at startup initialization (called from within SpandexInit).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873149}SPDXInitTables{\*\bkmkend _Toc389873149}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize global tables
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitTables(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The SPDXGlobals references two tab
les that need to be initialized (other tables require setup from external information such as a MAP file).  These two tables are the sine/cosine table and the default phong table.  The default phong table is set to a single smoothly shaded light-source ce
ntered in the camera\rquote s view.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitGlobals, SPDXReplacePhongMap
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873150}SPDXInitVirtualScreen{\*\bkmkend _Toc389873150}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialize and create a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXInitVirtualScreen(INT ResX, INT ResY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Resolution of the virtual screen
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to initialize}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Use SPDXInitVirtualScreen to allocate a buffer for the virtual screen, setup it\rquote s scanline table and initialize the resolution, clipping and scale factors to defaults.

\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetCurrentVScreen, SPDXCleanupVirtualScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873151}SPDXint86{\*\bkmkend _Toc389873151}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform a real-mode software interrupt (without segment register passing).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXint86(INT intno, union REGS *InputRegs, union REGS *OutputRegs);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 intno}{\f5\fs24 \tab Interrupt number
\par }{\i\f5\fs24 InputRegs}{\f5\fs24 \tab Input registers
\par }{\i\f5\fs24 OutputRegs}{\f5\fs24 \tab Output registers}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
This function uses DPMI to perform a real-mode DOS software interrupt.  This function works the same as the traditional int86 call.  Note that for passing memory between your protected mode program and the DOS interrupt routine, you will need to allocate
 low DOS RAM (see SPDXDMalloc).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXDMalloc, SPDXint86x
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873152}SPDXint86x{\*\bkmkend _Toc389873152}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform a real-mode software interrupt (with segment register passing).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXint86x(INT intno, union REGS *InputRegs, union REGS *OutputRegs, struct SREGS *sregs);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 intno}{\f5\fs24 \tab Interrupt number
\par }{\i\f5\fs24 InputRegs}{\f5\fs24 \tab Input registers
\par }{\i\f5\fs24 OutputRegs}{\f5\fs24 \tab Output registers}{\i\f5\fs24 
\par sregs}{\f5\fs24 \tab Segment registers}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function uses DPMI to perform a real-mode DOS software interrupt.  This function works the same as the traditional int86 call.  Note that for passing memory between 
your protected mode program and the DOS interrupt routine, you will need to allocate low DOS RAM (see SPDXDMalloc).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab DMalloc SPDXint86
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873153}SPDXMakeMatrixFromVector{\*\bkmkend _Toc389873153}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Creates a rotation matrix from a given vector and bank
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMakeMatrixFromVector( VEC *Vector, FLT Bank, MAT *Matrix );
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Vector}{\f5\fs24 \tab Input Vector
\par }{\i\f5\fs24 Bank}{\f5\fs24 \tab Amount of bank angle (roll)
\par }{\i\f5\fs24 Matrix}{\f5\fs24 \tab Where to store the rotation matrix}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Given a vector and a bank angle this routine will produ
ce a rotation matrix that may be applied directly to an object.  This is especially handy when trying to force an object or the camera to face a specific direction.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873154}SPDXMakeObjectDefault{\*\bkmkend _Toc389873154}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets all object values to default
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMakeObjectDefault(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to set to default values}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab First fills the object memory with zeros, then places the following values into the object:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li2520\widctlpar\tx2160{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Drawflags = DRAW_ALL
\par {\pntext\pard\plain\f5 2. \tab}Ka = 1.0
\par {\pntext\pard\plain\f5 3. \tab}Kd = 1.0
\par {\pntext\pard\plain\f5 4. \tab}Ks = 1.0
\par {\pntext\pard\plain\f5 5. \tab}Shine = 1.0
\par {\pntext\pard\plain\f5 6. \tab}Direction = (0,0,1.0)
\par {\pntext\pard\plain\f5 7. \tab}Orients the object for no rotation.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddChild, SPDXInheritObject
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873155}SPDXMemCopyBYTE{\*\bkmkend _Toc389873155}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Copy memory a byte at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemCopyBYTE(void *Dest, void *Src, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Dest}{\f5\fs24 \tab Destination of copy
\par }{\i\f5\fs24 Src}{\f5\fs24 \tab Source of copy
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of bytes to copy}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memcpy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemCopyWORD, SPDXMemCopyDWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873156}SPDXMemCopyDWORD{\*\bkmkend _Toc389873156}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Copy memory a double word at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemCopyDWORD(void *Dest, void *Src, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Dest}{\f5\fs24 \tab Destination of copy
\par }{\i\f5\fs24 Src}{\f5\fs24 \tab Source of copy
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of double words to copy}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memcpy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemCopyBYTE, SPDXMemCopyWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873157}SPDXMemCopyWORD{\*\bkmkend _Toc389873157}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Copy memory a word at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemCopyWORD(void *Dest, void *Src, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Dest}{\f5\fs24 \tab Destination of copy
\par }{\i\f5\fs24 Src}{\f5\fs24 \tab Source of copy
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of words to copy}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memcpy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemCopyBYTE, SPDXMemCopyDWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873158}SPDXMemSetBYTE{\*\bkmkend _Toc389873158}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set a block of memory to a value a byte at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemSetBYTE(void *Addr, BYT Val, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Addr}{\f5\fs24 \tab Block or memory to set
\par }{\i\f5\fs24 Val}{\f5\fs24 \tab What value to set
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of bytes to set}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memset.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemSetWORD, SPDXMemSetDWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873159}SPDXMemSetDWORD{\*\bkmkend _Toc389873159}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set a block of memory to a value a double word at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemSetDWORD(void *Addr, INT Val, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Addr}{\f5\fs24 \tab Block or memory to set
\par }{\i\f5\fs24 Val}{\f5\fs24 \tab What value to set
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of double words to set}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memset.  Note that the value contained in }{\i\f5\fs24 Val}{\f5\fs24  will be propagated across all double words in the }{
\i\f5\fs24 Addr}{\f5\fs24  block or RAM.  This offers an alternative to setting all bytes in a range of memory to the same byte value.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemSetBYTE, SPDXMemSetWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873160}SPDXMemSetWORD{\*\bkmkend _Toc389873160}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set a block of memory to a value a word at a time
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXMemSetWORD(void *Addr, WRD Val, INT Size);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Addr}{\f5\fs24 \tab Block or memory to set
\par }{\i\f5\fs24 Val}{\f5\fs24 \tab What value to set
\par }{\i\f5\fs24 Size}{\f5\fs24 \tab Number of words to set}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This routine has proven to be faster than the standard memset.  Note that the value contained in }{\i\f5\fs24 Val}{\f5\fs24  will be propagated across all words in the }{
\i\f5\fs24 Addr}{\f5\fs24  block or RAM.  This offers an alternative to setting all bytes in a range of memory to the same byte value.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXMemSetBYTE, SPDXMemSetDWORD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873161}SPDXOpen{\*\bkmkend _Toc389873161}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Opens a file for buffered I/O.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXOpen(CHR *FileName, INT Flags1, INT Flags2);
\par }\pard \fi-1440\li2160\widctlpar\tx1710\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab Name of the file to open
\par }{\i\f5\fs24 Flags1}{\f5\fs24 \tab Flags to be passed through to the standard open() call.
\par }{\i\f5\fs24 Flags2}{\f5\fs24 \tab Flags to be passed through to the standard open() call.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Opens a file for buffered I/O. }{\i\f5\fs24 Flags1}{\f5\fs24  is passed directly to your compiler\rquote s open function as is }{\i\f5\fs24 Flags2}{\f5\fs24 
.  Please consult your compiler\rquote s documentation for proper usage.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Return value is passed from open().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873162}SPDXOpenServices{\*\bkmkend _Toc389873162}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Opens the Spandex services
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXOpenServices(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Services must be opened before initialization can be performed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInit
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873163}SPDXOpenSTF{\*\bkmkend _Toc389873163}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Open a file from within a STF file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXOpenSTF(CHR *FileName, STFP *StuffPack);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab Filename of the file within the STF file}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab All files opened within the STF file are opened with the properites O_BINARY and O_RDONLY.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab STF file handle on success or -1 on failure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCloseSTF, SPDXSelectSTF
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873164}SPDXOrientHierarchy{\*\bkmkend _Toc389873164}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform complete orientation of the hierarchy
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXOrientHierarchy(OBJ *Object, OBJ *Camera);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object for which to orient
\par }{\i\f5\fs24 Camera}{\f5\fs24 \tab Camera used during the second phase of orientation}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Uses SPDXBuildPhaseOne and SPDXBuildPhaseTwo to perform complete hierarchy orientation.  After phase two, the world coordinates (location and direction) in each object in the hierarchy will be transformed properly, according to the relativity of each obj
ect\rquote s parent.  Refer to SPDXBuildPhaseOne and SPDXBuildPhaseTwo for details on their usage.  Note that }{\i\f5\fs24 Camera}{\f5\fs24  must be someplace within the hierarchy for proper camera orientation.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXBuildPhaseOne, SPDXBuildPhaseTwo
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873165}SPDXPopPalette{\*\bkmkend _Toc389873165}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Pop a palette off of the stack, and set it.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXPopPalette(PAL *Palette, INT Times);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Palette}{\f5\fs24 \tab Where to store the popped palette.
\par }{\i\f5\fs24 Times}{\f5\fs24 \tab Number of palettes to pop off of the stack.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The palette stack is \lquote popped\rquote  }{\i\f5\fs24 Times}{\f5\fs24  number of times, and the palette is set to the popped palette.  This palette is also stored into }{
\i\f5\fs24 Palette}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXPushPalette
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873166}SPDXProjectHierarchy{\*\bkmkend _Toc389873166}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Project an object hierarchy onto a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXProjectHierarchy(OBJ *Object, OBJ *Cam, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object in hierarchy to project
\par }{\i\f5\fs24 Cam}{\f5\fs24 \tab Camera used in projection
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to project to}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Hierarchy starting at }{\i\f5\fs24 Object}{\f5\fs24  is projected through }{\i\f5\fs24 Cam}{\f5\fs24  onto the }{\i\f5\fs24 VScreen}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCalcObjectProjection
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873167}SPDXPushPalette{\*\bkmkend _Toc389873167}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Push a palette onto the palette stack, setting a new palette.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXPushPalette(PAL *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Palette}{\f5\fs24 \tab New palette to set}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The palette stack works similar to a processor stack.  When a palette is pushed onto the palette stack, the current palette is pushed onto the stack, and the palette is set to }{
\i\f5\fs24 Palette}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXPopPalette
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873168}SPDXPutc{\*\bkmkend _Toc389873168}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Writes a character to a file (buffered)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXPutc(INT Handle, INT Byte);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par }{\i\f5\fs24 Byte}{\f5\fs24 \tab Byte to write to file}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Writes a byte to the file specified by }{\i\f5\fs24 Handle}{\f5\fs24  (buffered).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXWrite, SPDXGetc, SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873169}SPDXQuantizeImage{\*\bkmkend _Toc389873169}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reduce the colors required for an image.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXQuantizeImage(IMAGE *image, UINT number_colors, UINT tree_depth, UBYT *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 image}{\f5\fs24 \tab Image to reduce
\par }{\i\f5\fs24 number_colors}{\f5\fs24 \tab Number of colors to reduce to
\par }{\i\f5\fs24 tree_depth}{\f5\fs24 \tab Depth of the octree
\par }{\i\f5\fs24 Palette}{\f5\fs24 \tab Reduced palette}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 image}{\f5\fs24  needs to be a 24-bit image.  Upon exiting this routine, }{\i\f5\fs24 image}{\f5\fs24  will be a 8-bit indexed image occupying only the first 1/3}{
\f5\fs24\super rd}{\f5\fs24  of the buffer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXQuantizeImages
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873170}SPDXQuantizeImages{\*\bkmkend _Toc389873170}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reduce the colors required for a set of images.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXQuantizeImages(IMAGE **images, UINT AddImages, UINT TotalImages, UINT number_colors, UINT tree_depth, UBYT *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 images}{\f5\fs24 \tab Array of images to reduce
\par }{\i\f5\fs24 AddImages}{\f5\fs24 \tab Should be equal to }{\i\f5\fs24 TotalImages
\par TotalImages}{\f5\fs24 \tab Number of images to reduce
\par }{\i\f5\fs24 number_colors}{\f5\fs24 \tab Number of colors to reduce to
\par }{\i\f5\fs24 tree_depth}{\f5\fs24 \tab Depth of the octree
\par }{\i\f5\fs24 Palette}{\f5\fs24 \tab Reduced palette}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 images}{\f5\fs24  needs to be an array of }{\i\f5\fs24 TotalImages}{\f5\fs24  24-bit images.  Upon exiting this routine, }{\i\f5\fs24 images}{\f5\fs24 
 will be a 8-bit indexed images occupying only the first 1/3}{\f5\fs24\super rd}{\f5\fs24  of the buffers they occupy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXQuantizeImage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873171}SPDXRead{\*\bkmkend _Toc389873171}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reads data from a file
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXRead(INT Handle, void *Buffer, INT Length);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par }{\i\f5\fs24 Buffer}{\f5\fs24 \tab Buffer to read into
\par }{\i\f5\fs24 Length}{\f5\fs24 \tab Byte count to read}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab SPDXRead works the same as the standard read function with the exception that it is buffered.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Number of bytes read.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXWrite, SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873172}SPDXReadCompressedUSD{\*\bkmkend _Toc389873172}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads the geometry from a compressed USD file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60\fs24 INT\tab SPDXReadCompressedUSD( OBJ **Universe, INT Handle, PAL *MapPalette, FLT ShineValue )
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Universe}{\f5\fs24 \tab Object hierarchy to load into
\par }{\i\f5\fs24 Handle}{\f5\fs24 \tab File handle}{\i\f5\fs24 
\par MapPalette\tab }{\f5\fs24 The palette loaded in from the map
\par }{\i\f5\fs24 ShineValue}{\f5\fs24 \tab The shine value given to the MAKEMAP program}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The text-based USD format is read in, parsed and a hierarchy is created under }{\i\f5\fs24 Universe}{\f5\fs24 
. This function receives a file handle since in many cases, it is advantageous to load USD files from within STF files.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReadRawUSD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873173}SPDXReadImage{\*\bkmkend _Toc389873173}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads an image file into an image structure.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXReadImage(CHR *FileName, IMAGE **Image);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab Image filename
\par }{\i\f5\fs24 Image}{\f5\fs24 \tab Image structure used to store image}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The image files are loaded according to their file extension (IPI, IMG, GIF, G24, TGA, BMP, PCX).  Note that }{\i\f5\fs24 Image}{\f5\fs24 
 must be created before being able to load.  The most common way of doing this is to create an image of a 2x2 resolution.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXWriteImage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873174}SPDXReadMouse{\*\bkmkend _Toc389873174}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reads the mouse position.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXReadMouse(INT *Col, INT *Row, INT *BLeft, INT *BRight);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 Col, Row}{\f5\fs24 \tab Column and row of the mouse position
\par }{\i\f5\fs24 BLeft, BRight}{\f5\fs24 \tab Button values for left/right buttons}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The button values are non-zero if corresponding mouse button is depressed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873175}SPDXReadRawUSD{\*\bkmkend _Toc389873175}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads the geometry from a non-compressed USD file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60\fs24 INT\tab SPDXReadRawUSD( CHR *FileName, OBJ **Universe, PAL *MapPalette, FLT ShineValue )
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab File to load
\par }{\i\f5\fs24 Universe}{\f5\fs24 \tab Object hierarchy to load into}{\i\f5\fs24 
\par MapPalette\tab }{\f5\fs24 The palette loaded in from the map
\par }{\i\f5\fs24 ShineValue}{\f5\fs24 \tab The shine value given to the MAKEMAP program}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The text-based USD format is read in, parsed and a hierarchy is created under }{\i\f5\fs24 Universe}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReadCompressedUSD
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873176}SPDXReadString{\*\bkmkend _Toc389873176}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reads a string from a buffered I/O file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 CHR*\tab SPDXReadString(INT Handle, CHR *Buffer, INT MaxLength);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par }{\i\f5\fs24 Buffer}{\f5\fs24 \tab Where to store the string
\par }{\i\f5\fs24 MaxLength}{\f5\fs24 \tab Maximum length of the string}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab A null-terminated string is read from the file specified by }{\i\f5\fs24 Handle}{\f5\fs24  and placed into }{\i\f5\fs24 Buffer}{\f5\fs24 .  The number of bytes actuall read in is 
}{\i\f5\fs24 MaxLength}{\f5\fs24 -1 to make room for the null-termination character.  The file reading stops when a count of }{\i\f5\fs24 MaxLength}{\f5\fs24 -1 is reached, the end of the file is reached or the character \lquote \\n\rquote 
 (newline) character is found.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the address of the string or NULL if no data is read in.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873177}SPDXRebuildGlobalLightList{\*\bkmkend _Toc389873177}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Rebuilds the global light list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXRebuildGlobalLightList(OBJ *Universe);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\i\f5\fs24 Universe}{\f5\fs24 \tab Top of the hierarchy to build the global light list from}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The global light list is used with the Spandex renderer for speed.  You may occasionally find the need to manually add lights to an object.  If so, you will need to call this function.  You may also use this function to limit which lights are used during
 the rendering process by calling with only a portion of the hierarchy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab None.
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873178}SPDXRegisterFont{\*\bkmkend _Toc389873178}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Registers a font with Spandex
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 VFONT*\tab SPDXRegisterFont(UBYT *Font);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Font}{\f5\fs24 \tab Font data}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Font data is in the format written out by the Spandex font tool.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the VFONT structure for accessing the font.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXDrawScreenText, SPDXDrawVirtualText
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873179}SPDXReleaseSTF{\*\bkmkend _Toc389873179}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Release a STF file from use
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXReleaseSTF(STFP *StuffPack);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 StuffPack}{\f5\fs24 \tab Stuff package structure}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Releases a stuff file\rquote s resources and closes the STF file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSelectSTF
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873180}SPDXRemoveChild{\*\bkmkend _Toc389873180}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Removes a child from the parent\rquote s list of children.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXRemoveChild(OBJ *Parent, INT WhichChild);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Parent}{\f5\fs24 \tab Object to remove the child from
\par }{\i\f5\fs24 WhichChild}{\f5\fs24 \tab Child\rquote s index into the parent\rquote s child list}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Once the child object is removed, }{\i\f5\fs24 Parent}{\f5\fs24 \rquote s child count is decreased, and the memory for the child is released to the system.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXAddChild
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873181}SPDXRenderHierarchy{\*\bkmkend _Toc389873181}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Render a hierarchy to a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT   \tab SPDXRenderHierarchy(\tab OBJ *Object,
\par \tab \tab \tab \tab \tab OBJ *Cam,
\par \tab \tab \tab \tab \tab BYT ClearScreenFlag,
\par \tab \tab \tab \tab \tab BYT CopyFlag,
\par \tab \tab \tab \tab \tab BYT AntiAliasFlag,
\par \tab \tab \tab \tab \tab BYT SmoothFlag,
\par \tab \tab \tab \tab \tab BYT WaitVBFlag,
\par \tab \tab \tab \tab \tab VSCR *VScreen,
\par \tab \tab \tab \tab \tab VSCR *AAVScreen )
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2880\widctlpar\tx2880 {\i\f5\fs24 Object}{\f5\fs24 \tab Top level object of the hierarchy to render
\par }{\i\f5\fs24 Cam}{\f5\fs24 \tab Camera
\par }{\i\f5\fs24 ClearScreenFlag}{\f5\fs24 \tab Flag to clear virtual screen before rendering begins
\par }\pard \fi-2160\li2880\widctlpar\tx2880 {\i\f5\fs24 CopyFlag}{\f5\fs24 \tab Flag to copy virtual screen to display device after rendering
\par }{\i\f5\fs24 AntiAliasFlag}{\f5\fs24 \tab Flag to perform anti-aliasing before copying to display device (requires }{\i\f5\fs24 AAVScreen}{\f5\fs24 )
\par }{\i\f5\fs24 SmoothFlag}{\f5\fs24 \tab Flag to perform filtered frame smoothing (low-pass filtering) before copying to display device
\par }{\i\f5\fs24 WaitVBFlag}{\f5\fs24 \tab Flag to wait for vertical blank before copying to display device
\par }\pard \fi-2160\li2880\widctlpar\tx2880 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to render to}{\i\f5\fs24 
\par }\pard \fi-2160\li2880\widctlpar\tx2880 {\i\f5\fs24 AAVScreen}{\f5\fs24 \tab Virtual screen to anti-alias into.  This value may be NULL if the }{\i\f5\fs24 AntiAliasFlag}{\f5\fs24  is not set.}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Following the rendering pipeline, the entire hierarchy is rendered to the virtual screen from the camera\rquote s point of view, then optionally anti-aliased (into the }{
\i\f5\fs24 AAVScreen}{\f5\fs24  parameter), low-pass filtered, vertical-blank delayed and copied to the screen.  Note that for proper camera orientation, the camera must be part of the hierarchy under }{\i\f5\fs24 Object}{\f5\fs24 .
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par The rendering pipeline follows:
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li3240\widctlpar\tx2160{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Orient the hierarchy
\par {\pntext\pard\plain\f5 2. \tab}Perform culling on the hierarchy
\par {\pntext\pard\plain\f5 3. \tab}Transform the hierarchy
\par {\pntext\pard\plain\f5 4. \tab}Project the hierarchy
\par {\pntext\pard\plain\f5 5. \tab}Shading
\par {\pntext\pard\plain\f5 6. \tab}Clipping
\par {\pntext\pard\plain\f5 7. \tab}Sorting
\par {\pntext\pard\plain\f5 8. \tab}Rendering
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 A valid replacement for SPDXRenderHierarchy might look like this:
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \widctlpar\tx2430 {\f60 INT   RenderScene(\tab OBJ *Object,
\par }\pard \li2430\widctlpar\tx2430 {\f60 OBJ *Cam,
\par BYT ClearScreenFlag,
\par BYT CopyFlag,
\par BYT AntiAliasFlag,
\par BYT SmoothFlag,
\par BYT WaitVBFlag,
\par VSCR *VScreen,
\par VSCR *AAVScreen )
\par }\pard \widctlpar\tx2160 {\f60 \{
\par    FUNC("SPDXRenderHierarchy");
\par    Assert( Object );
\par    Assert( Cam );
\par    Assert( VScreen );
\par 
\par    // Update the material lighting pre-calcs
\par    SPDXUpdateMaterialsLighting();
\par 
\par    // Set the lense (ScaleX and ScaleY) for this view...
\par    SPDXSetVirtualLense( SPDXGetObjectLense(Cam), VScreen );
\par }\pard \widctlpar\tx3690 {\f60    SPDXCorrectVirtualAspect( SPDXGlobals.AspectX, \tab SPDXGlobals.AspectY,
\par \tab VScreen );
\par }\pard \widctlpar\tx2160 {\f60 
\par    // Clear the screen
\par    if (ClearScreenFlag == TRUE)
\par }\pard \widctlpar\tx3870 {\f60       SPDXClearVirtualScreen( (CHR) SPDXGlobals.BackgroundColor,\tab VScreen );
\par }\pard \widctlpar\tx2160 {\f60 
\par #ifdef U_Z
\par    SPDXResetVirtualZBuffer( VScreen );
\par #endif
\par 
\par    // This is the rendering pipeline
\par    SPDXOrientHierarchy( Object, Cam );
\par    SPDXCullHierarchy( Object );
\par    SPDXTransformHierarchy( Object );
\par    SPDXProjectHierarchy( Object, Cam, VScreen );
\par 
\par    SPDXBuildRenderList( Object, Cam, VScreen );
\par    SPDXShadeRenderList( &RList );
\par    SPDXClipRenderList( &RList, VScreen );
\par 
\par #ifndef U_Z
\par    SPDXByteSortRenderList( &RList );
\par #endif
\par 
\par    SPDXDrawRenderList( &RList,
\par }\pard \widctlpar\tx2970 {\f60 \tab Cam,
\par \tab SolidRenderers,
\par \tab TransRenderers,
\par \tab VScreen );
\par 
\par }\pard \widctlpar\tx2160 {\f60    if (AntiAliasFlag == TRUE)
\par    \{
\par       SPDXVirtualAntiAlias( AAVScreen, VScreen );
\par       VScreen = AAVScreen;
\par    \}
\par 
\par    if (SmoothFlag == TRUE)
\par       SPDXVirtualSmoothFrame( VScreen );
\par 
\par    SPDXCopyToScreen(VScreen->DrawScreen);
\par \}}{\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Note that before a rendering can be performed properly on a virtual screen, the virtual screen must be set by a call to SPDXSetCurrentVScreen.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
If anti-aliasing is to be performed, then you must create two virtual screens.  The first consisting of the actual rendered image at double the height and double the width resolution (this is the nature of multi-sample anti-aliasing).  This is the rendere
d }{\i\f5\fs24 VScreen}{\f5\fs24 .  From there, the }{\i\f5\fs24 VScreen}{\f5\fs24  is anti-aliased into the }{\i\f5\fs24 AAVScreen}{\f5\fs24 .
\par }\pard \widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetCurrentVScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873182}SPDXReplacePhongMap{\*\bkmkend _Toc389873182}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Replaces the global phong map with a bitmap
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXReplacePhongMap(BMAP *Map);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Map}{\f5\fs24 \tab Map to replace phong table with}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Note that the }{\i\f5\fs24 Map}{\f5\fs24  must be of resolution 256x256.  Other resolutions will be allowed, but with unpredictable and unstable results.   Also note that the }{
\i\f5\fs24 Map}{\f5\fs24  is also a map of intensities, not a map of colors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitTables
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873183}SPDXResetClipper{\*\bkmkend _Toc389873183}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Resets the internal memory reservoirs for the clipper
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetRenderList();
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The clipper handles both 
3D and 2D clipping.  This routine must be called each time through the rendering pipeline to release any memory from the pre-allocated polygon and vertex reservoirs.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSplitPolygonZ, SPDXClipRenderList
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873184}SPDXResetErrorFile{\*\bkmkend _Toc389873184}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Reset the log file (SPANDEX.LOG)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXResetErrorFile(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Deletes the log file (SPANDEX.LOG)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873185}SPDXResetInterrupts{\*\bkmkend _Toc389873185}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Restores the vertical blank interrupt handler.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXResetInterrupts(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitializeInterrupts
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873186}SPDXResetVirtualScreen{\*\bkmkend _Toc389873186}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Resets a virtual screen\rquote s buffer and z-buffer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXResetVirtualScreen(CHR Color, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Color}{\f5\fs24 \tab Color to fill virtual screen with
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to reset}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The virtual screen is first cleared (see SPDXClearVirtualScreen) with }{\i\f5\fs24 Color}{\f5\fs24 .  Next its z-buffer is reset (see SPDXResetVirtualZBuffer).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXClearVirtualScreen, SPDXResetVirtualZBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873187}SPDXResetVirtualZBuffer{\*\bkmkend _Toc389873187}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Resets the z-buffer for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXResetVirtualZBuffer(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetVirtualZBuffer, SPDXGetVirtualZBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873188}SPDXRotateObject{\*\bkmkend _Toc389873188}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Rotates an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXRotateObject(OBJ *Object, ROT *Rotation);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to rotate
\par }{\i\f5\fs24 Rotation}{\f5\fs24 \tab New rotational values for }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The rotational range of an object is specified by ROT_POINTS (number of rotational steps for a complete 360 degree rotation).  }{\i\f5\fs24 Rotation}{\f5\fs24 
 should be filled with the number of steps of rotation along the X, Y and Z axes.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873189}SPDXSeek{\*\bkmkend _Toc389873189}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Seek to a file position in a file (buffered)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 LNG\tab SPDXSeek(INT Handle, LNG Offset, INT Origin);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par }{\i\f5\fs24 Offset}{\f5\fs24 \tab Offset into file
\par }{\i\f5\fs24 Origin}{\f5\fs24 \tab Origin of offset}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Seeks to a file position at }{\i\f5\fs24 Offset}{\f5\fs24  from }{\i\f5\fs24 Origin}{\f5\fs24 .  }{\i\f5\fs24 Origin}{\f5\fs24  is passed directly to your compiler\rquote 
s lseek function.  Please consult your compiler\rquote s documentation for possible values for }{\i\f5\fs24 Origin}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Offset of new location of the file pointer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab None.
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873190}SPDXSelectCompressedBumFile{\*\bkmkend _Toc389873190}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads a compressed BUM (bump map) file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSelectCompressedBumFile(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle\tab }{\f5\fs24 Name of the BUM file to load
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab BUM files contain bump maps for use in rendering.  These are loaded into Spandex in one of two ways:  compressed or not compressed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSelectRawBumFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873191}SPDXSelectCompressedMapFile{\*\bkmkend _Toc389873191}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads a compressed MAP file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSelectCompressedMapFile(PAL *MapPalette, INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 MapPalette}{\f5\fs24 \tab Receives the palette from the MAP file}{\i\f5\fs24 
\par Handle\tab }{\f5\fs24 Handle of the MAP file to load
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab MAP files contain palettes, palette tables, transparency maps and the actual texture maps.  These are lo
aded into Spandex in one of two ways:  compressed or not compressed.  The MapFlags value within SPDXGlobals is set appropriately to reflect the MAP_FLAGS_TRANS flag (optional transparency map).  This function receives a file handle since in many cases, it
 is advantageous to load MAP files from within STF files.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSelectRawMapFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873192}SPDXSelectRawBumFile{\*\bkmkend _Toc389873192}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads a non-compressed BUM (bump map) file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSelectRawBumFile(CHR *BumFileName);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 BumFileName}{\f5\fs24  Name of the BUM file to load
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab BUM files contain bump maps for use in rendering.  These are loaded into Spandex in one of two ways:  compressed or not compressed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSelectCompressedBumFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873193}SPDXSelectRawMapFile{\*\bkmkend _Toc389873193}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Loads a non-compressed MAP file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSelectRawMapFile(CHR *MapFileName, PAL *MapPalette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 MapFileName}{\f5\fs24  Name of the MAP file to load
\par }{\i\f5\fs24 MapPalette}{\f5\fs24 \tab Receives the palette from the MAP file}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
MAP files contain palettes, palette tables, transparency maps and the actual texture maps.  These are loaded into Spandex in one of two ways:  compressed or not compressed.  The MapFlags value within SPDXGlobals is set appropriately to reflect the MAP_FL
AGS_TRANS flag (optional transparency map).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSelectCompressedMapFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873194}SPDXSelectSTF{\*\bkmkend _Toc389873194}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Prepare a STF (stuff) file for use.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSelectSTF(CHR *FileName, STFP *StuffPack);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 FileName}{\f5\fs24 \tab Filename of the STF file
\par }{\i\f5\fs24 StuffPack}{\f5\fs24 \tab Stuff package structure}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Opens a STF file and prepares it for use.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab 
LE_NONE on success or appropriate LE code.  STF files are read from the back of the file to the front.  This allows the files to be appended to an EXE for a single-file application.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReleaseSTF
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873195}SPDXSetBackgroundColor{\*\bkmkend _Toc389873195}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the background color
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetBackgroundColor(RGB *Color);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Color}{\f5\fs24 \tab RGB triplicate of the background color
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The color is given in RGB format, however, this function will convert that value immediately to an indexed color value by using SPDXGetClosestColor().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetBackgroundColor
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873196}SPDXSetCurrentVScreen{\*\bkmkend _Toc389873196}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set the current virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetCurrentVScreen(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to set as \ldblquote current\rdblquote }{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Spandex needs to know the current virtual screen so that when it renders, for example, it knows where to render to.  Use this routine to set the current virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitVirtualScreen
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873197}SPDXSetDebugState{\*\bkmkend _Toc389873197}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the current state of the debug flag set.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetDebugState(INT State);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 State}{\f5\fs24 \tab 32-bit value that represents the entire debug flag set}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Spandex uses the first four bits of a 32-bit value for internal use.  The remaining bits are for developer use
, and may be manipulated freely.  The internal debug flags reserved for Spandex are:
\par }\pard \li2880\widctlpar\tx2880 {\f5\fs24 
\par DEBUG_BASIC\tab \tab 0x1
\par DEBUG_MEM\tab \tab 0x2
\par DEBUG_MEMTRACE\tab 0x4
\par DEBUG_FUNCS\tab \tab 0x8
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_BASIC refers to basic debugging information (for example, memory leaks).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_MEM refers to memory related information (for example, details of each memory leak).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_MEMTRACE will cause the memory allocation routines in Spandex to report on every single allocation and free of memory into the debug file.  This will cause a dramatic slowdown to 
the application, but is invaluable at times of need.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 DEBUG_FUNCS will cause the filenames and source line numbers to appear in the log file when entries are logged.  It may be advantageous not to have this information.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetDebugState, SPDXSetDebugStateFromFile
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873198}SPDXSetDebugStateFromFile{\*\bkmkend _Toc389873198}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the 32-bit debug flag set from the debug file (SPANDEX.DBG).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSetDebugStateFromFile(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The 32-bit debug flag set is for develop
er use and internal Spandex usage.  These values can be set automatically when Spandex initializes by placing the flags into a text file containing a string of }{\b\f5\fs24 1}{\f5\fs24 s and }{\b\f5\fs24 0}{\f5\fs24 
s from left to right starting in the first column on the first line in the text file.  The first value in the file represents bit 0, the second represents bit 1 and so on.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetDebugState, SPDXGetDebugState
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873199}SPDXSetFatalErrors{\*\bkmkend _Toc389873199}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Enable or disable the fatal errors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetFatalErrors(INT Flag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Flag}{\f5\fs24 \tab New flag for fatal errors.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Fatal errors will only occur if }{\i\f5\fs24 Flag}{\f5\fs24  is TRUE.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetFatalErrors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873200}SPDXSetGlobalResolution{\*\bkmkend _Toc389873200}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the resolution of the output display device.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetGlobalResolution(INT ResX, INT ResY);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Width and height of the display}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Spandex uses these values to determine the resolution of output display device.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetGlobalResolution
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873201}SPDXSetLightIntensity{\*\bkmkend _Toc389873201}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the intensity of a light.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetLightIntensity(LGT *Light, RGB Color);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to receive new intensity
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab New intensity for }{\i\f5\fs24 Light}{\f5\fs24  is calculated from }{\i\f5\fs24 Color
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The intensity of a light specifies how much light it produces.  Intensity values may range from 0.0 to 1.0.  The value may range higher than 1.0, but make sure you understand the details behind the lighting calculations.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLightIntensity
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873202}SPDXSetLightLocal{\*\bkmkend _Toc389873202}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the local location of a point light
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetLightLocal(LGT *Light, P3D *Location);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to receive the local location
\par }{\i\f5\fs24 Location}{\f5\fs24 \tab New local location for }{\i\f5\fs24 Light
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The local location represents the location of a light relative to its parent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLightLocal}{\f60 
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873203}SPDXSetLightName{\*\bkmkend _Toc389873203}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the name of a light
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetLightName(LGT *Light, CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to receive new name
\par }{\i\f5\fs24 Name}{\f5\fs24 \tab New name for }{\i\f5\fs24 Light
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Copies }{\i\f5\fs24 Name}{\f5\fs24  into }{\i\f5\fs24 Light}{\f5\fs24 .  This name is only useful for the developer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLightName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873204}SPDXSetLoggedErrors{\*\bkmkend _Toc389873204}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Enable or disable the logging of errors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetLoggedErrors(INT Flag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Flag}{\f5\fs24 \tab New flag for error logging.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Errors will only log if }{\i\f5\fs24 Flag}{\f5\fs24  is TRUE.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLoggedErrors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873205}SPDXSetLoggedStrings{\*\bkmkend _Toc389873205}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Enable or disable the logging of strings.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetLoggedStrings(INT Flag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Flag}{\f5\fs24 \tab New flag for string logging.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Strings will only log if }{\i\f5\fs24 Flag}{\f5\fs24  is TRUE.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLoggedStrings
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873206}SPDXSetMaterialAmbientLight{\*\bkmkend _Toc389873206}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the ambient light for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f60\fs24 void\tab SPDXSetMaterialAmbientLight( MTRL *Material, RGB *Ambient );}{\f60 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive the ambient light}{\i\f5\fs24 
\par Ambient}{\f5\fs24 \tab Ambient light to apply to material}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialAmbientLight
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873207}SPDXSetMaterialAmbientReflectCoefficient{\*\bkmkend _Toc389873207}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the Ka value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialAmbientReflectCoefficient(MTRL *Material, FLT Ka);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new Ka value.
\par }{\i\f5\fs24 Ka}{\f5\fs24 \tab Ambient reflect coefficient.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Ka}{\f5\fs24 
 (the ambient light reflect coefficient) is a common rendering variable from the standard rendering equations for Phong and Gouraud.  It specifies how much of the ambient light applied to any face using }{\i\f5\fs24 Material}{\f5\fs24 
 actually affects the face.  The values for }{\i\f5\fs24 Ka}{\f5\fs24  can only range from 0.0 (no ambient light is applied) to 1.0 (all available ambient light is applied).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialAmbientReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873208}SPDXSetMaterialBumpMap{\*\bkmkend _Toc389873208}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the bump map for an material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSetMaterialBumpMap(MTRL *Material, CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material which receives the bump map.
\par }{\i\f5\fs24 Name}{\f5\fs24 \tab Name of the bump map.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function sets the material\rquote s bump map property according to }{\i\f5\fs24 Name}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialBumpMap
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873209}SPDXSetMaterialColor{\*\bkmkend _Toc389873209}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the base color of the material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialColor(MTRL *Material, RGB *Color, FLT Intensity, PAL *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material which receives the color
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab Color to place into the Material
\par }{\i\f5\fs24 Intensity}{\f5\fs24 \tab Intensity of color
\par }{\i\f5\fs24 Palette}{\f5\fs24 \tab Palette to map the color through}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab When a material is set to a color, only its color index is stored.  In order to calculate this, the intensity and palette are both needed.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialColor
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873210}SPDXSetMaterialDiffuseReflectCoefficient{\*\bkmkend _Toc389873210}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the Kd value for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialDiffuseReflectCoefficient(MTRL *Material, FLT Kd);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new Kd value.
\par }{\i\f5\fs24 Kd}{\f5\fs24 \tab Diffuse reflect coefficient.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Kd}{\f5\fs24  (the diffuse light reflect coefficient) is a common rendering variable from the stand
ard rendering equations for Phong and Gouraud.  It specifies how much of the diffuse light applied to any face using }{\i\f5\fs24 Material}{\f5\fs24  actually affects the face.  The values for }{\i\f5\fs24 Kd}{\f5\fs24 
 can only range from 0.0 (no diffuse light is applied) to 1.0 (all available diffuse light is applied).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialDiffuseReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873211}SPDXSetMaterialName{\*\bkmkend _Toc389873211}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the name of a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialColor(MTRL *Material, CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive the name
\par }{\i\f5\fs24 Name}{\f5\fs24 \tab Name to apply to the material}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Copies the string in }{\i\f5\fs24 Name}{\f5\fs24  into }{\i\f5\fs24 Material}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873212}SPDXSetMaterialShineCoefficient{\*\bkmkend _Toc389873212}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the shine value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialShineCoefficient(MTRL *Material, FLT ShineValue);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new shine value.
\par }{\i\f5\fs24 ShineValue}{\f5\fs24 \tab Shine coefficient.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The shine coefficient is a common rendering variable from the standard rendering equations for Phon
g and Gouraud.  It essentially specifies the size of the specular reflection.  Larger values produce a much smaller specular reflection.  This effectively increases the shininess of a surface.  In theory, a value of infinity would represent an infinitely 
shiny surface, and hence produce an infinitely small reflection of a point light source.  Within Spandex, the value for shine may range from 0.0 to 10,000.0.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialShineCoefficient
\par }\pard\plain \s19\li2070\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873213}SPDXSetMaterialSpecularReflectCoefficient{\*\bkmkend _Toc389873213}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the Ks value for a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialSpecularReflectCoefficient(MTRL *Material, FLT Ks);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new Ks value.
\par }{\i\f5\fs24 Ks}{\f5\fs24 \tab Diffuse reflect coefficient.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Ks}{\f5\fs24 
 (the specular reflect coefficient) is a common rendering variable from the standard rendering equations for Phong and Gouraud.  It specifies how much of the specular reflection applied to an object actually affects the surface.  The values for }{
\i\f5\fs24 Ks}{\f5\fs24  can only range from 0.0 (no specular reflection is applied) to 1.0 (all available specular reflection is applied).  Specular reflections are also commonly referred to as \ldblquote specular highlights.\rdblquote 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialSpecularReflectCoefficient
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873214}SPDXSetMaterialSurface{\*\bkmkend _Toc389873214}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Applies a surface type to an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialSurface(MTRL *Material, BYT Surface);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new surface type
\par }{\i\f5\fs24 Surface}{\f5\fs24 \tab Surface type to apply to }{\i\f5\fs24 Material
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The surface type directly modifies the appearance of an object rendered in 3D.  Here is a brief description of the different surface types:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1530\li4410\widctlpar\tx3600 {\f5\fs24 SOLID\tab Polygons in an object have a constant surface color.
\par }\pard \fi-1530\li4410\widctlpar\tx3600 {\f5\fs24 TEXTURED\tab Polygons in an object have a bitmap (texture) projected onto them during rendering.  This is what allows an object to \lquote look like wood\rquote , for example.
\par }\pard \fi-1530\li4410\widctlpar\tx3600 {\f5\fs24 ENVMAP\tab Polygons in an object have a bitmap (texture) reflected onto them during rendering.  This is what allows an object to \lquote look like chrome\rquote , for example.
\par }\pard \fi-1530\li4410\widctlpar\tx2160\tx3600 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialSurface
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873215}SPDXSetMaterialTexture{\*\bkmkend _Toc389873215}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the texture address of a material
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialTexture(MTRL *Material, CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive the texture
\par }{\i\f5\fs24 Name}{\f5\fs24 \tab Name of the texture to assign to the material}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function uses SPDXFindMapByName() to locate the texture.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialTexture
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873216}SPDXSetMaterialTransparency{\*\bkmkend _Toc389873216}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the transparency flag for a material.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMaterialTransparency(MTRL *Material,
\par }\pard \fi-1440\li2160\widctlpar\tx5670 {\f60 \tab \tab BYT Transparency);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Material}{\f5\fs24 \tab Material to receive new transparency flag.
\par }{\i\f5\fs24 Transparency}{\f5\fs24 0 or non-zero value transparency flag.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Transparency mapping allows objects to become semi-opaque (or transparent).  Setting this to any non-zero value will cause an object to become Transparent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMaterialTransparency
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873217}SPDXSetMode{\*\bkmkend _Toc389873217}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set the video mode
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSetMode(INT ModeNumber, INT ClearFlag, INT SquareFlag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 ModeNumber}{\f5\fs24 \tab Video mode to set
\par }{\i\f5\fs24 ClearFlag}{\f5\fs24 \tab Flag to clear the video memory
\par }{\i\f5\fs24 SquareFlag}{\f5\fs24 \tab Square pixel mode flag}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Sets the video mode to }{\i\f5\fs24 ModeNumber}{\f5\fs24 .  If }{\i\f5\fs24 ClearFlag}{\f5\fs24  is equal to TRUE then the video memory is cleared.  If }{\i\f5\fs24 SquareFlag}{
\f5\fs24  is equal to TRUE and the video mode is VESA_MODE_200_256 then square pixel mode is enabled.  Valid video modes are:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-720\li3600\widctlpar\tx3600\tx6030\tx7380 {\f5\fs24 VESA_MODE_200_256\tab 320x200\tab 8-bit*
\par VESA_MODE_400_256\tab 640x400\tab 8-bit*
\par VESA_MODE_480_256\tab 640x480\tab 8-bit*
\par VESA_MODE_600_16\tab 800x600\tab 4-bit
\par VESA_MODE_600_256\tab 640x400\tab 8-bit*
\par VESA_MODE_768_16\tab 1024x768\tab 4-bit
\par VESA_MODE_768_256\tab 1024x768\tab 8-bit*
\par VESA_MODE_1024_16\tab 1280x1024\tab 4-bit
\par VESA_MODE_1024_256\tab 1280x1024\tab 8-bit*
\par VESA_MODE_TEXT01\tab 80x60\tab Text
\par VESA_MODE_TEXT02\tab 132x25\tab Text
\par VESA_MODE_TEXT03\tab 132x43\tab Text
\par VESA_MODE_TEXT04\tab 132x50\tab Text
\par VESA_MODE_TEXT05\tab 132x60\tab Text
\par VESA_MODE_200_32K\tab 320x200\tab 15-bit
\par VESA_MODE_200_64K\tab 320x200\tab 16-bit
\par VESA_MODE_200_16M\tab 320x200\tab 24-bit
\par VESA_MODE_480_32K\tab 640x480\tab 15-bit
\par VESA_MODE_480_64K\tab 640x480\tab 16-bit
\par VESA_MODE_480_16M\tab 640x480\tab 24-bit
\par VESA_MODE_600_32K\tab 800x600\tab 15-bit
\par VESA_MODE_600_64K\tab 800x600\tab 16-bit
\par VESA_MODE_600_16M\tab 800x600\tab 24-bit
\par VESA_MODE_768_32K\tab 1024x768\tab 15-bit
\par VESA_MODE_768_64K\tab 1024x768\tab 16-bit
\par VESA_MODE_768_16M\tab 1024x768\tab 24-bit
\par VESA_MODE_1024_32K\tab 1280x1024\tab 15-bit
\par VESA_MODE_1024_64K\tab 1280x1024\tab 16-bit
\par VESA_MODE_1024_16M\tab 1280x1024\tab 24-bit
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Note that only modes marked with a * are available when using the Spandex renderer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160\tx7380 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetMode, SPDXSetTextMode
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873218}SPDXSetMousePosition{\*\bkmkend _Toc389873218}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Places the mouse at a specified position.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMousePosition(INT X, INT Y);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X, Y}{\f5\fs24 \tab New position for mouse}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReadMouse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873219}SPDXSetMouseRange{\*\bkmkend _Toc389873219}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the range of the mouse.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetMouseRange(INT X1, INT X2, INT Y1, INT Y2);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X1, X2}{\f5\fs24 \tab Start and end X position
\par }{\i\f5\fs24 Y1, Y2}{\f5\fs24 \tab Start and end Y position}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Sets the limiting mouse range for the mouse.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReadMouse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873220}SPDXSetNearZ{\*\bkmkend _Toc389873220}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the near-z (hither) clipping plane distance.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetNearZ(FLT NearZ);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 NearZ}{\f5\fs24 \tab Distance of the near-z clipping plane from the camera
\par }\pard \widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Setting the near-z to a negative value will be clipped to 0.0 which could still result in unstable code.  Note that the default near-z clipping distance is 20.0.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetNearZ
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873221}SPDXSetObjectDevUse{\*\bkmkend _Toc389873221}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the developer variables for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectDevUse(OBJ *Object, INT Index, INT Value);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive the new developer variables
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Index of the Developer Use variable
\par }{\i\f5\fs24 Value}{\f5\fs24 \tab 32-bit INT value for the variable}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Each object contains an array of DEV_USE_COUNT variables.  These are of type INT, and may be casted to any other 32-bit type (void * for example).  Spandex has no internal use for this data.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectDevUse, SPDXSetObjectType, SPDXGetObjectType
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873222}SPDXSetObjectDirection{\*\bkmkend _Toc389873222}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the direction vector for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectDirection(OBJ *Object, VEC *Direction);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new direction vector
\par }{\i\f5\fs24 Direction}{\f5\fs24 \tab New direction vector for }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Each object contains a vector for maintaining the direction of an object.  This can be used for a number of purposes, one of which is movement along its \ldblquote 
facing direction.\rdblquote 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectDirection
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873223}SPDXSetObjectDrawFlags{\*\bkmkend _Toc389873223}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the drawing (rendering) flags for an object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectDrawFlags(OBJ *Object, BYT DrawFlags);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new draw flags
\par }{\i\f5\fs24 DrawFlags}{\f5\fs24 \tab Drawing flags for object}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The draw flags specify what properties of an object are visible (rendered).  Valid values for }{\i\f5\fs24 DrawFlags}{\f5\fs24  are:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-720\li3600\widctlpar\tx2880 {\f5\fs24 DRAW_TRIS
\par DRAW_QUADS
\par DRAW_POINTS
\par DRAW_ALL
\par DRAW_NONE
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectDrawFlags
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873224}SPDXSetObjectLense{\*\bkmkend _Toc389873224}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the lense size for a given object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXGetObjectLense( OBJ *Object, FLT Lense );
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that receives the lense
\par }{\i\f5\fs24 Lense}{\f5\fs24 \tab Lense to apply to the object
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The }{\i\f5\fs24 lense}{\f5\fs24 
 of an object is the lense size (in millimeters) used to calculate the FOV (field of vision) for a given camera.  The default Lense size is 48.23529.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetObjectLense
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873225}SPDXSetObjectLocal{\*\bkmkend _Toc389873225}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the local location of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectLocal(OBJ *Object, P3D *Location);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive the local location
\par }{\i\f5\fs24 Location}{\f5\fs24 \tab New local location for }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The local location represents the location of an object relative to its parent.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectLocal, SPDXGetObjectWorld, SPDXSetObjectWorld}{\f60 
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873226}SPDXSetObjectName{\*\bkmkend _Toc389873226}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the object name
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectName(OBJ *Object, CHR *Name);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object which receives the name
\par }{\i\f5\fs24 Name}{\f5\fs24 \tab Name to assign to object}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Copies the name into the object.  A name can be any string of DEF_NAME_LEN length.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectName
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc345292035}{\*\bkmkstart _Toc389873227}SPDXSetObjectShadeModel{\*\bkmkend _Toc345292035}{\*\bkmkend _Toc389873227}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set the shading model for the object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectShadeModel(OBJ *Object, BYT ShadeModel);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to modify
\par }{\i\f5\fs24 ShadeModel}{\f5\fs24 \tab Shading model to apply to }{\i\f5\fs24 Object
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Available shading models are:  AMBIENT, LAMBERT, GOURAUD, PHONG, BUMP}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The shading model directly modifies the appearance of an object rendered in 3D.  Here is a brief description of the different shading models:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 AMBIENT - objects are not shaded according to individual lights.  They are shaded according to the ambient light value for the object.
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 LAMBERT - objects are shaded at the polygon level according to individual lights.  Entire polygons maintain a consistent shade across the surface, giving the object a \ldblquote faceted\rdblquote  look.

\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 GOURAUD - objects are shaded at the vertex level according to individual lights.  This shading model calculates the shade of each vertex, then smoothly shades the polygon from vertex to v
ertex using linear interpolation.
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 PHONG - objects are shaded at the pixel level according to a global Phong map.  This map is used as an intensity modifier for each pixel on surface of the object as it is rendered.
\par }\pard \fi-810\li3690\widctlpar\tx3600 {\f5\fs24 BUMP - objects are shaded using PHONG shading, with an additive bump map to give the appearance of a rough or bumpy surface.  The bump map determines the look of the surface.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectShadeModel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873228}SPDXSetObjectShowBacks{\*\bkmkend _Toc389873228}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the back-face culling flag for an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectShowBacks(OBJ *Object, BYT ShowBacks);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to modify
\par }{\i\f5\fs24 ShowBacks}{\f5\fs24 \tab The new show backs flag}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Back-face culling prevents geometric faces that make up the shape of an object from being drawn when they are facing away from the camera.  This is done since, with most closed objects, you cannot ever see a face from it\rquote 
s back side (unless transparent).  If an object is left open, faces may be seen from the back-side.  If this is desirable, you will need to enable the \ldblquote show backs\rdblquote  flag for the object.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectShowBacks
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873229}SPDXSetObjectSteadyOrientation{\*\bkmkend _Toc389873229}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the steady rotation of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectSteadyOrientation(OBJ *Object, ROT *Rotation);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to receive new steady rotation.
\par }{\i\f5\fs24 Rotation}{\f5\fs24 \tab Steady rotation structure to apply to object.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Each object may have a steady (constant) rotation applied to it.  Each time through the rendering pipeline, the
 object will get rotated by the specified amount in the steady rotation structure for the object.  For certain applications, it may be desirable to apply a constant rotation to an object or set of objects and not worry about them again.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectSteadyRotation, SPDXRotateObject
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873230}SPDXSetObjectType{\*\bkmkend _Toc389873230}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the type of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectType(OBJ *Object, INT Type);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the type from
\par }{\i\f5\fs24 Type}{\f5\fs24 \tab New type for }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The type variable is stored in the object for the developer only.  Spandex has no internal use for this value.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectType, SPDXGetObjectDevUse, SPDXSetObjectDevUse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873231}SPDXSetObjectWorld{\*\bkmkend _Toc389873231}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Modifies the world location of an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetObjectWorld(OBJ *Object, P3D *Location);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to retrieve the world location from
\par }{\i\f5\fs24 Location}{\f5\fs24 \tab New world location for }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The world location represents the location of an object relative to the camera in world space.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectWorld, SPDXGetObjectLocal, SPDXSetObjectLocal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873232}SPDXSetPalette{\*\bkmkend _Toc389873232}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set the palette for the display device
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetPalette(INT Start, INT Count, PAL *Palette);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Start}{\f5\fs24 \tab Starting palette entry to modify
\par }{\i\f5\fs24 Count}{\f5\fs24 \tab Number of palette entries to modify
\par }{\i\f5\fs24 Palette}{\f5\fs24 \tab Palette buffer}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The display device\rquote s palette is set to the contents of }{\i\f5\fs24 Palette}{\f5\fs24  starting at the }{\i\f5\fs24 Start}{\f5\fs24  palette entry for }{\i\f5\fs24 Count}{
\f5\fs24  colors using the BIOS.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetPalette
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873233}SPDXSetPointVertex{\*\bkmkend _Toc389873233}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the vertex location of a point
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetPointVertex(OBJ *Object, INT Index, VER *Ver);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains points to be modified
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Index of the modified point
\par }{\i\f5\fs24 Ver}{\f5\fs24 \tab Vertex used to update point}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Updates a point by copying the contents of }{\i\f5\fs24 Ver}{\f5\fs24  into the point at index }{\i\f5\fs24 index}{\f5\fs24  in object }{\i\f5\fs24 Object}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetPointVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873234}SPDXSetScreenPixel{\*\bkmkend _Toc389873234}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Plots a pixel on the screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetScreenPixel(UINT X, UINT Y, CHR Color);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X, Y}{\f5\fs24 \tab Location on the screen
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab Color to plot}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetScreenPixel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873235}SPDXSetTextMode{\*\bkmkend _Toc389873235}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the video into text mode
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSetTextMode(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSetMode
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873236}SPDXSetTriNormal{\*\bkmkend _Toc389873236}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the normal for a TRI
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetTriNormal(OBJ *Object, INT Index);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains triangle geometry
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which triangle to modify
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Updates the triangle at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24 
 with new normal.  The normal is calculated based on the old normal, so the normal will still face the correct side of the triangle for culling and shading.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetTriNormal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873237}SPDXSetTriVertices{\*\bkmkend _Toc389873237}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the vertices for a TRI
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetTriVertices(OBJ *Object, INT Index, VER *V1, VER *V2, VER *V3);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that contains triangle geometry
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which triangle to modify
\par }{\i\f5\fs24 V1,V2,V3}{\f5\fs24 \tab Vertices to store into triangle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Updates the triangle at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24  with the vertices }{\i\f5\fs24 V1, V2}{\f5\fs24  and }{\i\f5\fs24 V3}{\f5\fs24 
.  The values are copied into the vertices (the triangle will not use the same pointer as given in }{\i\f5\fs24 V1, V2}{\f5\fs24  or }{\i\f5\fs24 V3}{\f5\fs24 ).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetTriVertices
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873238}SPDXSetVertex{\*\bkmkend _Toc389873238}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets a vertex within an object
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVertex(OBJ *Object, INT Index, VER *Vertex);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object that receives the new vertex
\par }{\i\f5\fs24 Index}{\f5\fs24 \tab Which vertex to modify
\par }{\i\f5\fs24 Vertex}{\f5\fs24 \tab Vertex structure to place into the object
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Copies }{\i\f5\fs24 Vertex}{\f5\fs24  into the vertex at }{\i\f5\fs24 Index}{\f5\fs24  in }{\i\f5\fs24 Object}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVertex
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873239}SPDXSetVideoWindow{\*\bkmkend _Toc389873239}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the VESA video window.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXSetVideoWindow(INT WindowFlag, INT WindowPos);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 WindowFlag}{\f5\fs24 \tab Window number
\par }{\i\f5\fs24 WindowPos}{\f5\fs24 \tab Window position (in granularity units)}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab For complete VESA VBE information, please contact VESA.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVideoWindow
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873240}SPDXSetVirtualBuffer{\*\bkmkend _Toc389873240}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the buffer address for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualBuffer(VSCR *VScreen, CHR *Buffer);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873241}SPDXSetVirtualCenter{\*\bkmkend _Toc389873241}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the center point for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualCenter(INT CenterX, INT CenterY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 CenterX, CenterY}{\f5\fs24 \tab Center point
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The center point is during the projection phase of the renderer.  Moving the counter point will re-locate the center of view.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualCenter
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873242}SPDXSetVirtualClipping{\*\bkmkend _Toc389873242}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the clipping values for the virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualClipping(INT Left, INT Right, INT Top, INT Bottom, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Left}{\f5\fs24 \tab The left-edge of the clipping rectangle}{\i\f5\fs24 
\par Top}{\f5\fs24 \tab The top-edge of the clipping rectangle
\par }{\i\f5\fs24 Right}{\f5\fs24 \tab The right-edge of the clipping rectangle}{\i\f5\fs24 
\par Bottom}{\f5\fs24 \tab The bottom-edge of the clipping rectangle}{\i\f5\fs24 
\par VScreen}{\f5\fs24 \tab Virtual screen to receive the clipping rectangle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The clipping rectangle denotes the inner extents of the clipping region (anything outside of this region is clipped).  If the clipping region is set to (0,0) - (10,10) then pixels at (10,10) will be rendered, but not at (11,10) or (10,11).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualClipping
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873243}SPDXSetVirtualLense{\*\bkmkend _Toc389873243}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the lense size for a given virtual screen and calculates the proper scale factors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualLense(FLT Lense, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
This routine performs a SPDXCalcFOV() on the given lense size (in millimeters) and properly calculates the scale factors for the given lense size.  This routine may be called as many times as desired without cumulative effects to the scale factors 
\endash  unlike SPDXCorrectVirtualAspect() as shown in SPDXRenderHierarchy().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 In normal use, after calling this routine, a call to SPDXCorrectVirtualAspect() should be issued.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXCalcFOV, SPDXCorrectVirtualAspect
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873244}SPDXSetVirtualMaxPolysToRender{\*\bkmkend _Toc389873244}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Limits the number of polygons rendered for a single scene.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualMaxPolysToRender(INT Max, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Max}{\f5\fs24 \tab Maximum polygon count limit for rendering
\par }{\i\f5\fs24 VScreeen}{\f5\fs24 \tab Virtual screen to limit}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Polygon counts are the biggest cause of slow rendering.  By reducing the polygon count, you 
see less but run faster.  This enables Spandex to limit the maximum number of polygons to render to the screen.  All polygons are still run through the entire rendering pipeline, but are just not drawn.  The polygons that are skipped are the furthest poly
gons from the camera.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtaualMaxPolysToRender
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873245}SPDXSetVirtualPixel{\*\bkmkend _Toc389873245}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Plots a pixel on the virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualPixel(UINT X, UINT Y, CHR Color, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 X, Y}{\f5\fs24 \tab Location on the screen
\par }{\i\f5\fs24 Color}{\f5\fs24 \tab Color to plot
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualPixel
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873246}SPDXSetVirtualResolution{\*\bkmkend _Toc389873246}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the resolution for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualResolution(INT ResX, INT ResY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ResX, ResY}{\f5\fs24 \tab Resolution in pixels
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The virtual screens hold two copies of the resolution for ease of use.  One copy is the fixed-point version and the other copy is the integer version. 
 This routine sets them both as well as calculates and sets the center point of the virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualiResolution SPDXGetVirtualfResolution
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873247}SPDXSetVirtualScaleFactors{\*\bkmkend _Toc389873247}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the scale factors for a virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualScaleFactors(FLT ScaleX, FLT ScaleY, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 ScaleX, ScaleY}{\f5\fs24 \tab X and Y scale factors for 3D projection
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to affect}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The scale factors are used to modify the viewing angle of a 3-dimensional scene.  If different values are used for the X and Y scale factors, a pixel ratio will be affected.

\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualScreenFactors
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873248}SPDXSetVirtualZBuffer{\*\bkmkend _Toc389873248}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the z-buffer address for a virtual screen
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXSetVirtualZBuffer(VSCR *VScreen, ZBUF *ZBuffer);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen
\par }{\i\f5\fs24 ZBuffer}{\f5\fs24 \tab Z-buffer address}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetVirtualZBuffer, SPDXClearVirtualZBuffer
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page } {\*\bkmkstart _Toc389873249}SPDXShadeRenderList{\*\bkmkend _Toc389873249}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform lighting and shading on a render list.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXShadeRenderList(RLS *RList);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 RList}{\f5\fs24 \tab Render list to shade}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
During the rendering pipeline, a render list is created with all visible polygons and points in it.  These primitives then need to be shaded according to the lighting model and surface type.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873250}SPDXSplitPolygonZ{\*\bkmkend _Toc389873250}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform 3D clipping of a polygon to the near-z plane.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXShadeRenderList(TRI *Tri, TRI **Split1, TRI **Split2, VER *NewV1, VER *NewV2, VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Tri}{\f5\fs24 \tab Original Triangle to clip
\par }{\i\f5\fs24 Split1}{\f5\fs24 \tab First split triangle
\par }{\i\f5\fs24 Split2}{\f5\fs24 \tab Second split triangle
\par }{\i\f5\fs24 NewV1}{\f5\fs24 \tab First new vertex
\par }{\i\f5\fs24 NewV2}{\f5\fs24 \tab Second new vertex
\par }{\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen by which the polygon is clipped}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Performs clipping to the near Z plane.  Original triangle is left unmodified, but up to two new triangles will be allocated from a static reservoir (specifically for clipping).  The first of these triangles will 
always be a valid triangle.  The second, however, may be returned as null, as it may not be necessary to allocate a second triangle.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Each of the new vertices will be allocated from a separate vertex reservoir.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXBuildRenderList, SPDXClipRenderList, SPDXSetNearZ
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873251}SPDXTell{\*\bkmkend _Toc389873251}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the current file position
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXTell(INT Handle);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the current file position relative the beginning of the file (offset 0).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXSeek
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873252}SPDXTransformHierarchy{\*\bkmkend _Toc389873252}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Rotate and translate all object geometry for a given hierarchy.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXTransformHierarchy(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Top-level object for hierarchy to transform}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Transforms (rotates and translates) all objects in the hierarchy starting at }{\i\f5\fs24 Object}{\f5\fs24 
 using the phase two matrix for the objects.  This places all object into world-space and rotated properly around the camera.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873253}SPDXTranslateObject{\*\bkmkend _Toc389873253}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Moves an object through 3-space according to a direction vector.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXTranslateObject(OBJ *Object, VEC *Vector);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to translate
\par }{\i\f5\fs24 Vector}{\f5\fs24 \tab Direction and velocity to translate }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The object\rquote s local location (relative to parent) is translated (moved) according to }{\i\f5\fs24 Vector}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectLocal, SPDXSetObjectLocal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873254}SPDXTranslateObjectFacing{\*\bkmkend _Toc389873254}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Moves an object through 3-space according to its direction vector and given amplitude.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXTranslateObjectFacing(OBJ *Object, FLT Amplitude);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to translate
\par }{\i\f5\fs24 Amplitude}{\f5\fs24 \tab Amplitude to translate }{\i\f5\fs24 Object
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The object\rquote s }{\b\f5\fs24 world}{\f5\fs24  direction (normalized) is used during translation for proper results.  It is then given an amplitude, and the object\rquote s }{
\b\f5\fs24 local}{\f5\fs24  location is translated.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 This is handy for many cases, including flight simulation.  Each object has its own direction vector, and given an amplitude, the object will travel in the direction that it is facing at all times.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetObjectLocal, SPDXSetObjectLocal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873255}SPDXTranslateLight{\*\bkmkend _Toc389873255}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Moves a light through 3-space according to a direction vector.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXTranslateObject(LGT *Light, VEC *Vector);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Light}{\f5\fs24 \tab Light to translate
\par }{\i\f5\fs24 Vector}{\f5\fs24 \tab Direction and velocity to translate }{\i\f5\fs24 Light
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The light\rquote s local location (relative to parent) is translated (moved) according to }{\i\f5\fs24 Vector}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXGetLightLocal, SPDXSetLightLocal
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873256}SPDXUnifyObjectNormals{\*\bkmkend _Toc389873256}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Given an object, polygon and vertex normals are calculated.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUnifyObjectNormals(OBJ *Object);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Object}{\f5\fs24 \tab Object to unify
\par 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Each object containing polygons must contain polygons with vertex indicies given in counter-clockwise order (as seen from the outside of the object).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 From these polygons, their surface normals can be calculated to the proper orientation, and normalized.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 From these polygon normals, the vertex normals can be calculated by simply averaging all polygon normals that share this vertex.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873257}SPDXUninit{\*\bkmkend _Toc389873257}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initialize the Spandex sub-system.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUninit(OBJ *Universe);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Universe}{\f5\fs24 \tab Top-level of the object Hierarchy}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab De-initializing Spandex consists of a few steps.  They are (in this order):
\par }\pard \li2880\widctlpar\tx2880 {\f5\fs24 
\par {\pntext\pard\plain\f5 1. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 Turn off the initialization flag within the SPDXGlobals structure.
\par {\pntext\pard\plain\f5 2. \tab}Compare the zero-memory with the copy made during SPDXInit.  If they are different, log an error.
\par {\pntext\pard\plain\f5 3. \tab}Cleanup the SPDXGlobals structure (see SPDXCleanupGlobals).
\par {\pntext\pard\plain\f5 4. \tab}De-initialize the renderer (see SPDXUninitRenderer).
\par {\pntext\pard\plain\f5 5. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 If }{\i\f5\fs24 Universe}{\f5\fs24  is not NULL, then cleanup the }{\i\f5\fs24 Universe}{
\f5\fs24  structure (see SPDXCleanupObject).  The }{\i\f5\fs24 Universe}{\f5\fs24  structure itself is also freed (see SPDXFree).
\par {\pntext\pard\plain\f5 6. \tab}}\pard \fi-360\li3240\widctlpar\tx2880{\*\pn \pnlvlbody\pndec\pnb0\pni0\pnf5\pnfs24\pnstart1\pnindent360\pnhang{\pntxta . }}{\f5\fs24 The mouse is de-initialized (see SPDXUninitMouse).
\par {\pntext\pard\plain\f5 7. \tab}The memory handler is de-initialized (see SPDXUninitMem).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Note that it is important that the }{\i\f5\fs24 Universe}{\f5\fs24  structure be a pointer, not an actual structure.  Otherwise the SPDXFree will fail as noted in step 5.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 Also note that services must be closed after the call to SPDXUninit (see SPDXCloseServices).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInit, SPDXCleanupGlobals, SPDXUninitRenderer, SPDXCleanupObject, SPDXFree, SPDXUninitMouse, SPDXUninitMem, SPDXCloseServices
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873258}SPDXUninitByteSortStack{\*\bkmkend _Toc389873258}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initialize the byte sort stack
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUninitByteSortStack(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXByteSortRenderList
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873259}SPDXUninitMem{\*\bkmkend _Toc389873259}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initialize the Spandex memory manager
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUninitMem(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The Spandex memory manager is de-initialized.  If any memory allocated by the memory manager was not released, it gets released automatically and these memory leaks are reported to the log file (SPANDEX.LOG).  The general error is only logged if the DEBU
G_BASIC flag is set (see SPDXSetDebugState), and the details of each memory leak are logged only if the DEBUG_MEM flag is set (see SPDXSetDebugState).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitMem, SPDXSetDebugState
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873260}SPDXUninitMouse{\*\bkmkend _Toc389873260}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initialize the mouse handler.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUninitMouse(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab This function also resets the mouse driver.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitMouse
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873261}SPDXUninitRenderer{\*\bkmkend _Toc389873261}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initialize the Spandex renderer
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUninitRenderer(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Used by SPDXUninit to de-initialize the renderer
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXInitRenderer, SPDXInit
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873262}SPDXUpdateMaterialsLighting{\*\bkmkend _Toc389873262}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Performs batch lighting on all materials for Ka, Ks and Shininess.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXUpdateMaterialsLighting(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab For the sake of speed, each material contains its own pre-calculated set of lighting parameters based on Ka, Ks and shininess.  This routine updates all materials globally.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 This should be performed only when materials have changed.  In the SPDXRenderHierarchy() routine, this happens every frame since the default renderer can\rquote 
t depend on stability of the Ka, Ks and Shininess values for each material.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRenderHierarchy
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873263}SPDXValidateMemory{\*\bkmkend _Toc389873263}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Validates a memory chunk.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXValidateMemory(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Use this function to validate a memory chunk.  First it is checked for a validity of the pointer itself, then it is validate for access overrun.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Number of errors encountered.  If errors are encountered, they are logged in the log file (SPDX.LOG).
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873264}SPDXVectorCrossProduct{\*\bkmkend _Toc389873264}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Performs a standard cross product on two vectors.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXVectorCrossProduct(VEC *Result, VEC *V1, VEC *V2);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab A vector cross product is defined as:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 X\rquote  = (Y}{\f5\fs24\sub 1}{\f5\fs24  * Y}{\f5\fs24\sub 2}{\f5\fs24 ) - (Z}{\f5\fs24\sub 1}{\f5\fs24  * Y}{\f5\fs24\sub 2}{\f5\fs24 )
\par Y\rquote  = (Z}{\f5\fs24\sub 1}{\f5\fs24  * X}{\f5\fs24\sub 2}{\f5\fs24 ) - (X}{\f5\fs24\sub 1}{\f5\fs24  * Z}{\f5\fs24\sub 2}{\f5\fs24 )
\par Z\rquote  = (X}{\f5\fs24\sub 1}{\f5\fs24  * Y}{\f5\fs24\sub 2}{\f5\fs24 ) - (Y}{\f5\fs24\sub 1}{\f5\fs24  * X}{\f5\fs24\sub 2}{\f5\fs24 )
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873265}SPDXVirtualAntiAlias{\*\bkmkend _Toc389873265}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Given two virtual screens, this function performs multi-sample anti-alias reduction.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXVirtualAntiAlias(VSCR *Dest, VSCR *Src);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Multi-sample anti-aliasing is a simple concept to grasp.  The process is to simply render an image that is exactly double the width and double the height (4x original size), then to reduce the size of the image by averaging every 4 pixel blocks into a se
parate buffer.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 This process has many drawbacks.  First, it requires 5 times the image memory (1 original image plus the 4x image).  Secondly, it requires considerably more processing time (4x the processi
ng time of a standard image, plus the time required for this call).
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 However, if you\rquote 
re not concerned with speed, or have enough horsepower to perform these tasks in acceptable time frames, then this function can produce much better results than simply rendering a non-anti-aliased image.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
This function also has the ability to anti-alias to higher degrees of accuracy.  Rendering a 16x image can be anti-aliased to a 4x image, then re-anti-aliased to a 1x image for display.  This process, of course, it much slower.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 An alternative (and less accurate) approach is to perform a SPDXVirtualSmoothFrame().
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 This function requires a transparency table.  Note that the anti-aliasing is affected by the transparency table \endash  all values perform a weighted average of the given value when the table was created.
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXVirtualSmoothFrame
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873266}SPDXVirtualSmoothFrame{\*\bkmkend _Toc389873266}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Perform smoothing filter to virtual screen.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab SPDXVirtualSmoothFrame(VSCR *VScreen);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 VScreen}{\f5\fs24 \tab Virtual screen to perform smoothing on}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The smoothing (low-pass filter) requires a transparency table.  Note that the smoothing is affected by the transparency table \endash 
 all values perform a weighted average of the given value when the table was created.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \li2160\widctlpar\tx2160 {\f5\fs24 An alternative (slower, but more accurate) approach is to perform a SPDXVirtualAntiAlias().
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXVirtualAntiAlias
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873267}SPDXWrite{\*\bkmkend _Toc389873267}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Writes data to a file (buffered)
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXWrite(INT Handle, void *Buffer, INT Length);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Handle}{\f5\fs24 \tab File handle
\par }{\i\f5\fs24 Buffer}{\f5\fs24 \tab Buffer to written from
\par }{\i\f5\fs24 Length}{\f5\fs24 \tab Byte count to read}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab SPDXWRite works the same as the standard write function with the exception that it is buffered.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Number of bytes written.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXRead, SPDXOpen, SPDXClose
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873268}SPDXWriteImage{\*\bkmkend _Toc389873268}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Saves an image to a file.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab SPDXWriteImage(CHR *FileName, IMAGE *Image, INT UpsideDownFlag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 FileName}{\f5\fs24 \tab Image filename
\par }{\i\f5\fs24 Image}{\f5\fs24 \tab Image structure used to store image
\par }{\i\f5\fs24 UpsideDownFlag}{\f5\fs24 \tab Used for TGA files only}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
The image files are written according to their file extension (IPI, IMG, GIF, G24, TGA, BMP, PCX).  For TGA files, the option to write them from the top-down or from the bottom-up is given with }{\i\f5\fs24 UpsideDownFlag}{\f5\fs24 
.  Note that this does not cause the image to be turned upside-down before writing, but simply causes the image to be loaded from the bottom to the top.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab LE_NONE on success or appropriate LE code.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab SPDXReadImage
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873269}MLTIFork{\*\bkmkend _Toc389873269}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Spawn a child process.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab MLTIFork(INT StackSize, INT Priority);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 StackSize}{\f5\fs24 \tab Size of the stack for new child process.
\par }{\i\f5\fs24 Priority}{\f5\fs24 \tab Process priority.}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 StackSize}{\f5\fs24  represents how much stack space to reserve for a process in bytes.  }{\i\f5\fs24 Priority}{\f5\fs24 
 specifies the number of ticks that the process is allowed to stay active before it is switched away.  The larger the number in relation to other tasks, the more time it is allocated.  Note that the MLTISetSpeed allows you to gain a smoother task switchin
g speed.  Though the speed may make the task run for a shorter or longer amount of time, it will still be active the same percentage of time relative to the other tasks.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Process ID for task.  Note that when MLTIFork is called, it returns to two tasks.  It\rquote 
s parent task and the child task.  The only way to track which task is running is by interrogating the process ID for the task.  Make sure not to store these process IDs into static variables, or process IDs can overwrite other process IDs.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTISetSpeed
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873270}MLTIGetProcID{\*\bkmkend _Toc389873270}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the process id for a task.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab MLTIGetProcID(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Each task is assigned a process ID.  This is how each process knows who it is since many processes may be running the same code set.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Process ID for a task.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTIFork
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873271}MLTIInit{\*\bkmkend _Toc389873271}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Initialized the multitasking kernel.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab MLTIInit(INT ReservedStack, WRD Speed);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 ReservedStack}{\f5\fs24 \tab Amount of stack space to reserve
\par }{\i\f5\fs24 Speed}{\f5\fs24 \tab Frequency of task switching}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
There are 2 types of processes in the Spandex multitasker.  The first type is the parent process (the main process).  The second type refers to all of the child processes.  When the parent process initialized the multitasker, it tells the kernel how much
 stack space to reserve with }{\i\f5\fs24 ReservedStack}{\f5\fs24 .  As each child is created with MLTIFork, they select the amount of stack space for themselves, until all stack space is accounted for.  During the initialization, a call to MLTISe
tSpeed is made with the }{\i\f5\fs24 Speed}{\f5\fs24  parameter to select the frequency of the task switching.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTIFork, MLTISetSpeed
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873272}MLTISemaphoreGet{\*\bkmkend _Toc389873272}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Returns the value of a semaphore with owner\rquote s ID.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab MLTISemaphoreGet(INT *PreviousOwner);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 PreviousOwner}{\f5\fs24 \tab Where to put the owner\rquote s ID}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab There are two pieces of information associated to a semaphore.  The first is the value of the semaphore, and second is the owner\rquote s process ID.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the value of the semaphore, and the owner\rquote s process ID is stored in }{\i\f5\fs24 PreviousOwner}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTISemaphoreSet
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873273}MLTISemaphoreSet{\*\bkmkend _Toc389873273}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the value of a semaphore with owner\rquote s ID.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 INT\tab MLTISemaphoreSet(INT Value, INT *PreviousOwner);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2880 {\i\f5\fs24 Value}{\f5\fs24 \tab New value for semaphore}{\i\f5\fs24 
\par PreviousOwner}{\f5\fs24 \tab Where to put the owner\rquote s ID}{\i\f5\fs24 
\par }\pard \li720\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab There are two pieces of information associated to a semaphore.  The first is the value of the semaphore, and second is the owner\rquote s process ID.  When setting a semaphore, y
ou receive the previous value of the semaphore and you also receive the process ID for the previous owner.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab Returns the previous value of the semaphore, and the previous owner\rquote s process ID stored in }{\i\f5\fs24 PreviousOwner}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTISemaphoreSet
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873274}MLTISetPriority{\*\bkmkend _Toc389873274}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Set the priority for a given task.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab MLTISetPriority(INT ProcessID, INT Priority);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ProcessID}{\f5\fs24 \tab Process ID for task
\par }{\i\f5\fs24 Priority}{\f5\fs24 \tab Priority for task}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab }{\i\f5\fs24 Priority}{\f5\fs24  specifies the number of ticks that }{\i\f5\fs24 ProcessID}{\f5\fs24 
 is allowed to stay active before it is switched away.  The larger the number in relation to other tasks, the more time it is allocated.  Note that the MLTISetSpeed allows you to gain a smoother task switching speed.  Though the speed may make the task ru
n for a shorter or longer amount of time, it will still be active the same percentage of time relative to the other tasks.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTIFork
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873275}MLTISetProcessActive{\*\bkmkend _Toc389873275}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the active state of a process.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab MLTISetProcessActive(INT ProcessID, INT ActiveFlag);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 ProcessID}{\f5\fs24 \tab Process ID for task
\par }{\i\f5\fs24 ActiveFlag}{\f5\fs24 \tab Active flag}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab 
Each process may be active or inactive (never receives a time slice).  A process can make itself inactive, but may not make itself active again (being inactive, it never gets a time slice for witch to do so.)  To deactivate any task, simply place the pro
cess ID }{\i\f5\fs24 ProcessID}{\f5\fs24  and a zero into }{\i\f5\fs24 ActiveFlag}{\f5\fs24 .  To reactivate a task, place a non-zero value into }{\i\f5\fs24 ActiveFlag}{\f5\fs24 .
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab N/A
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873276}MLTISetSpeed{\*\bkmkend _Toc389873276}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab Sets the task switching frequency.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab MLTISetSpeed(WRD Speed);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \li720\widctlpar\tx2160 {\i\f5\fs24 Speed}{\f5\fs24 \tab Frequency of task switching}{\i\f5\fs24 
\par }{\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab The task switching is based on the timer interrupt.  The frequency of this interruption dictates how \ldblquote smooth\rdblquote 
 the task switching appears to be, and also dictates the minimum time between task switches.  The lower the number the faster the switching.  The valid range for }{\i\f5\fs24 Speed}{\f5\fs24  is from 0x0000 - 0xffff.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTIFork
\par }\pard\plain \s19\li2160\widctlpar \b\f5\fs32 {\fs24 \page }{\*\bkmkstart _Toc389873277}MLTIUninit{\*\bkmkend _Toc389873277}
\par \pard\plain \widctlpar \f4\fs20 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Description:}{\f5\fs24 \tab De-initializes the multitasking kernel.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\f60 void\tab MLTIUninit(void);
\par }\pard \fi-1440\li2160\widctlpar\tx2160 {\b\f60\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Remarks:}{\f5\fs24 \tab Restores all interrupt vectors and returns the timer interrupt speed to normal.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Return value:}{\f5\fs24 \tab None.
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 Compatibility:\tab }{\f5\fs24 N/A
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\b\f5\fs24 See Also:}{\f5\fs24 \tab MLTIInit
\par }\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\fs24 \sect }\sectd \linex0\endnhere {\header \pard\plain \s15\qc\widctlpar\tqr\tx7920 \f4\fs20 {\b\scaps\f5\fs24 Spandex Real-Time Rendering System \endash  Macros
\par }\pard \s15\qc\widctlpar\brdrt\brdrs\brdrw45\brsp20 \tqr\tx7920 {\f5 
\par }}\pard\plain \s28\qc\widctlpar \b\scaps\f5\fs40 {\*\bkmkstart _Toc389873278}Section XI:  Macros{\*\bkmkend _Toc389873278}
\par \pard\plain \s29\widctlpar \f5 
\par \pard\plain \fi-2160\li2160\widctlpar\tx2160 \f4\fs20 {\f5 \page }{\f5\fs24 Notes:
\par }\pard \fi-2160\li2160\widctlpar\tx2160 {\f5\fs24 
\par {\pntext\pard\plain\f5 1.\tab}}\pard \fi-360\li360\widctlpar\tx2160{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\f5\fs24 Don\rquote t forget to include the limitations of phong and bump mapping
\par {\pntext\pard\plain\f5 2.\tab}Include dox for all supporting tools
\par {\pntext\pard\plain\f5 3.\tab}adding to the render list for customized pipelines (polys must be pre-clipped)
\par {\pntext\pard\plain\f5 4.\tab}}\pard \widctlpar\tx2160{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\f5\fs24 Use RGB for lights, ambient, etc. in the USD file
\par {\pntext\pard\plain\f5 5.\tab}Now supports self-illuminated materials
\par {\pntext\pard\plain\f5 6.\tab}Location has to appear before target in USD.
\par {\pntext\pard\plain\f5 7.\tab}USD files may no longer have normals
\par {\pntext\pard\plain\f5 8.\tab}Changed USD color from 0-255 to 0-1.0
\par {\pntext\pard\plain\f5 9.\tab}FUNC() or just #define __FUNCTION__ as a string
\par {\pntext\pard\plain\f5 10.\tab}Explain wrapping textures will result in U/V values beyond the 0.0-1.0 range.
\par }\pard \widctlpar\tx2160 {\f5\fs24 
\par }}