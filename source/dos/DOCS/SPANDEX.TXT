




























                                   Project Spandex

                        Specifications and API documentation

                                      May, 1997

               Original content is c 1997, Paul D. Nettle.  All rights
                                      reserved.


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


                                  TABLE OF CONTENTS

            Table of Contents .........................................2

            Section I:  Spandex Design ...............................14

             Trial and Improvement ...................................14

            Section II:  The Rendering Pipeline ......................16

             Phase I _ Orientation ...................................16

             Phase II _ Culling ......................................17

             Phase III _ Transformation ..............................17

             Phase IV _ Projection ...................................17

             Phase V _ Building the Render List ......................17

             Phase VI _ Shading ......................................17

             Phase VII _ Clipping ....................................18

             Phase VIII _ Sorting ....................................18

             Phase IX _ Rendering ....................................18

            Section III:  The Spandex Multitasker ....................19

             If You Plan to Port to DOS Using the LXM ................19

             Priorities ..............................................19

             Speed ...................................................20

            Section IV: Tools For More Robust Code ...................21

             Error Tracking and Management ...........................21

             Spandex Debugging Flags .................................22

             Asserts and Verifies ....................................23

             The Spandex Memory Manager ..............................24

            Section V: USD Files .....................................30

             Comments ................................................30

             Labels ..................................................30

             Entity Labels ...........................................30
               UNI _ Universe ........................................30


            c 1996 Paul D. Nettle.  All Rights Reserved.          2


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


               OBJ _ Object ..........................................31
               CAM _ Camera ..........................................31
               LIG _ Light ...........................................31

             Property Labels .........................................31
               Ambient _ Ambient light ...............................31
               Backfaces _ Show backs flag ...........................31
               BUMpmap - .............................................31
               CENter - Center of object used for rotation ...........31
               Color - ...............................................31
               DEVeloper - Developer's values ........................31
               DRAwflags - Drawing Flags .............................32
               INTensity - Intensity for current light source ........32
               KA - Ambient light reflection coefficient .............32
               KD - Diffuse light reflection coefficient .............32
               KS - Specular reflection coefficient ..................32
               LOCation - Location of object .........................32
               NAMe - Name an object .................................32
               OPAcity - .............................................32
               ORIentation - Original rotational values for the object33
               POInt - Point .........................................33
               QUAd - Solid Shaded Quad ..............................33
               SHAdemodel - Shading model ............................33
               SHInevalue - Amount of shine that was applied to the
               palette table .........................................33
               SHOwbacks - Show backs flag ...........................33
               SURface - Specify the surface type of an object .......33
               TRBegin - Translation block begin .....................33
               TREnd - Translation block end .........................34
               TRIangle - Textured Shaded Triangle ...................34
               TYPe - Type of object .................................34
               VERtex - Vertex .......................................34

             The #include Preprocessor Directive .....................34

             General Notes ...........................................35

             Example USD File ........................................36

            Section VI:  Materials ...................................37

            Section VII:  Virtual Screens ............................38

            Section VIII:  The Mouse .................................39

            Section IX:  TTYPEDEFs and DEFINEs .......................40

            Section X:  The Spandex API Reference ....................41

             _SPDXClose ..............................................42

             _SPDXFatalError .........................................43

             _SPDXFree ...............................................44


            c 1996 Paul D. Nettle.  All Rights Reserved.          3


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             _SPDXGetc ...............................................45

             _SPDXMalloc .............................................46

             _SPDXOpen ...............................................47

             _SPDXRead ...............................................48

             _SPDXRealloc ............................................49

             _SPDXSeek ...............................................50

             _SPDXTell ...............................................51

             _SPDXWrite ..............................................52

             SPDXAddChild ............................................53

             SPDXAddLight ............................................54

             SPDXAddMap ..............................................55

             SPDXAddMaterial .........................................56

             SPDXAddObjectPoint ......................................57

             SPDXAddObjectTri ........................................58

             SPDXAddObjectVertex .....................................59

             SPDXAssignTriMaterial ...................................60

             SPDXBuildPhaseOne .......................................61

             SPDXBuildPhaseTwo .......................................62

             SPDXBuildRenderList .....................................63

             SPDXByteSortRenderList ..................................64

             SPDXCalcFOV .............................................65

             SPDXCleanupGlobals ......................................66

             SPDXCleanupLights .......................................67

             SPDXCleanupMaps .........................................68

             SPDXCleanupMaterials ....................................69

             SPDXCleanupObject .......................................70

             SPDXCleanupVirtualScreen ................................71



            c 1996 Paul D. Nettle.  All Rights Reserved.          4


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXClearVirtualScreen ..................................72

             SPDXClipRenderList ......................................73

             SPDXClose ...............................................74

             SPDXCloseServices .......................................75

             SPDXCloseSTF ............................................76

             SPDXConvertMap ..........................................77

             SPDXCopyFromScreen ......................................78

             SPDXCopyToScreen ........................................79

             SPDXCorrectVirtualAspect ................................80

             SPDXCountPixelsInRenderList .............................81

             SPDXCountPolysInRenderList ..............................82

             SPDXCreateImage .........................................83

             SPDXCreateObject ........................................84

             SPDXCullHierarchy .......................................85

             SPDXDestroyImage ........................................86

             SPDXDMalloc .............................................87

             SPDXDrawRenderList ......................................88

             SPDXDrawScreenLine ......................................90

             SPDXDrawScreenText ......................................91

             SPDXDrawVirtualLine .....................................92

             SPDXDrawVirtualText .....................................93

             SPDXDumpMemLog ..........................................94

             SPDXFadePalettes ........................................95

             SPDXFindLightByName .....................................96

             SPDXFindLightByNameLen ..................................97

             SPDXFindMapByName .......................................98

             SPDXFindMaterialByName ..................................99



            c 1996 Paul D. Nettle.  All Rights Reserved.          5


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXFindMemOwner .......................................100

             SPDXFindObjectByName ...................................101

             SPDXFindObjectByNameLen ................................102

             SPDXFlushBuffer ........................................103

             SPDXGetBackgroundColor .................................104

             SPDXGetc ...............................................105

             SPDXGetChild ...........................................106

             SPDXGetChildCount ......................................107

             SPDXGetClosestColor ....................................108

             SPDXGetCopyrightMessage ................................109

             SPDXGetDebugState ......................................110

             SPDXGetDistance2D ......................................111

             SPDXGetDistance3D ......................................112

             SPDXGetErrorString .....................................113

             SPDXGetFatalErrors .....................................114

             SPDXGetFileType ........................................115

             SPDXGetGlobalResolution ................................116

             SPDXGetLightCount ......................................117

             SPDXGetLightIntensity ..................................118

             SPDXGetLightLocal ......................................119

             SPDXGetLightName .......................................120

             SPDXGetLoggedErrors ....................................121

             SPDXGetLoggedStrings ...................................122

             SPDXGetMaterialAmbientLight ............................123

             SPDXGetMaterialAmbientReflectCoefficient ...............124

             SPDXGetMaterialBumpMap .................................125

             SPDXGetMaterialColor ...................................126



            c 1996 Paul D. Nettle.  All Rights Reserved.          6


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXGetMaterialDiffuseReflectCoefficient ...............127

             SPDXGetMaterialName ....................................128

             SPDXGetMaterialShineCoefficient ........................129

             SPDXGetMaterialSpecularReflectCoefficient ..............130

             SPDXGetMaterialSurface .................................131

             SPDXGetMaterialTexture .................................132

             SPDXGetMaterialTransparency ............................133

             SPDXGetMemReport .......................................134

             SPDXGetMode ............................................135

             SPDXGetNearZ ...........................................136

             SPDXGetObjectCount .....................................137

             SPDXGetObjectDevUse ....................................138

             SPDXGetObjectDirection .................................139

             SPDXGetObjectDrawFlags .................................140

             SPDXGetObjectLense .....................................141

             SPDXGetObjectLocal .....................................142

             SPDXGetObjectName ......................................143

             SPDXGetObjectShadeModel ................................144

             SPDXGetObjectShowBacks .................................145

             SPDXGetObjectSteadyOrientation .........................146

             SPDXGetObjectTriCount ..................................147

             SPDXGetObjectType ......................................148

             SPDXGetObjectVertexCount ...............................149

             SPDXGetObjectWorld .....................................150

             SPDXGetPalette .........................................151

             SPDXGetPointCount ......................................152

             SPDXGetPointVertex .....................................153



            c 1996 Paul D. Nettle.  All Rights Reserved.          7


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXGetRenderList ......................................154

             SPDXGetScreenPixel .....................................155

             SPDXGetSVGAInfo ........................................156

             SPDXGetTriDistance .....................................157

             SPDXGetTriNormal .......................................158

             SPDXGetTriNormalFromOrientation ........................159

             SPDXGetTriVertices .....................................160

             SPDXGetVersion .........................................161

             SPDXGetVertex ..........................................162

             SPDXGetVESAInfo ........................................163

             SPDXGetVideoWindow .....................................164

             SPDXGetVirtualBuffer ...................................165

             SPDXGetVirtualCenter ...................................166

             SPDXGetVirtualClipping .................................167

             SPDXGetVirtualfResolution ..............................168

             SPDXGetVirtualiResolution ..............................169

             SPDXGetVirtualMaxPolysToRender .........................170

             SPDXGetVirtualPixel ....................................171

             SPDXGetVirtualScaleFactors .............................172

             SPDXGetVirtualZBuffer ..................................173

             SPDXInheritObject ......................................174

             SPDXInit ...............................................175

             SPDXInitByteSortStack ..................................176

             SPDXInitGlobals ........................................177

             SPDXInitializeInterrupts ...............................178

             SPDXInitMaps ...........................................179

             SPDXInitMaterials ......................................180



            c 1996 Paul D. Nettle.  All Rights Reserved.          8


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXInitMem ............................................181

             SPDXInitMouse ..........................................182

             SPDXInitRenderer .......................................183

             SPDXInitScreen .........................................184

             SPDXInitTables .........................................185

             SPDXInitVirtualScreen ..................................186

             SPDXint86 ..............................................187

             SPDXint86x .............................................188

             SPDXMakeMatrixFromVector ...............................189

             SPDXMakeObjectDefault ..................................190

             SPDXMemCopyBYTE ........................................191

             SPDXMemCopyDWORD .......................................192

             SPDXMemCopyWORD ........................................193

             SPDXMemSetBYTE .........................................194

             SPDXMemSetDWORD ........................................195

             SPDXMemSetWORD .........................................196

             SPDXOpen ...............................................197

             SPDXOpenServices .......................................198

             SPDXOpenSTF ............................................199

             SPDXOrientHierarchy ....................................200

             SPDXPopPalette .........................................201

             SPDXProjectHierarchy ...................................202

             SPDXPushPalette ........................................203

             SPDXPutc ...............................................204

             SPDXQuantizeImage ......................................205

             SPDXQuantizeImages .....................................206

             SPDXRead ...............................................207



            c 1996 Paul D. Nettle.  All Rights Reserved.          9


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXReadCompressedUSD ..................................208

             SPDXReadImage ..........................................209

             SPDXReadMouse ..........................................210

             SPDXReadRawUSD .........................................211

             SPDXReadString .........................................212

             SPDXRebuildGlobalLightList .............................213

             SPDXRegisterFont .......................................214

             SPDXReleaseSTF .........................................215

             SPDXRemoveChild ........................................216

             SPDXRenderHierarchy ....................................217

             SPDXReplacePhongMap ....................................220

             SPDXResetClipper .......................................221

             SPDXResetErrorFile .....................................222

             SPDXResetInterrupts ....................................223

             SPDXResetVirtualScreen .................................224

             SPDXResetVirtualZBuffer ................................225

             SPDXRotateObject .......................................226

             SPDXSeek ...............................................227

             SPDXSelectCompressedBumFile ............................228

             SPDXSelectCompressedMapFile ............................229

             SPDXSelectRawBumFile ...................................230

             SPDXSelectRawMapFile ...................................231

             SPDXSelectSTF ..........................................232

             SPDXSetBackgroundColor .................................233

             SPDXSetCurrentVScreen ..................................234

             SPDXSetDebugState ......................................235

             SPDXSetDebugStateFromFile ..............................236



            c 1996 Paul D. Nettle.  All Rights Reserved.         10


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXSetFatalErrors .....................................237

             SPDXSetGlobalResolution ................................238

             SPDXSetLightIntensity ..................................239

             SPDXSetLightLocal ......................................240

             SPDXSetLightName .......................................241

             SPDXSetLoggedErrors ....................................242

             SPDXSetLoggedStrings ...................................243

             SPDXSetMaterialAmbientLight ............................244

             SPDXSetMaterialAmbientReflectCoefficient ...............245

             SPDXSetMaterialBumpMap .................................246

             SPDXSetMaterialColor ...................................247

             SPDXSetMaterialDiffuseReflectCoefficient ...............248

             SPDXSetMaterialName ....................................249

             SPDXSetMaterialShineCoefficient ........................250

             SPDXSetMaterialSpecularReflectCoefficient ..............251

             SPDXSetMaterialSurface .................................252

             SPDXSetMaterialTexture .................................253

             SPDXSetMaterialTransparency ............................254

             SPDXSetMode ............................................255

             SPDXSetMousePosition ...................................257

             SPDXSetMouseRange ......................................258

             SPDXSetNearZ ...........................................259

             SPDXSetObjectDevUse ....................................260

             SPDXSetObjectDirection .................................261

             SPDXSetObjectDrawFlags .................................262

             SPDXSetObjectLense .....................................263

             SPDXSetObjectLocal .....................................264



            c 1996 Paul D. Nettle.  All Rights Reserved.         11


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXSetObjectName ......................................265

             SPDXSetObjectShadeModel ................................266

             SPDXSetObjectShowBacks .................................267

             SPDXSetObjectSteadyOrientation .........................268

             SPDXSetObjectType ......................................269

             SPDXSetObjectWorld .....................................270

             SPDXSetPalette .........................................271

             SPDXSetPointVertex .....................................272

             SPDXSetScreenPixel .....................................273

             SPDXSetTextMode ........................................274

             SPDXSetTriNormal .......................................275

             SPDXSetTriVertices .....................................276

             SPDXSetVertex ..........................................277

             SPDXSetVideoWindow .....................................278

             SPDXSetVirtualBuffer ...................................279

             SPDXSetVirtualCenter ...................................280

             SPDXSetVirtualClipping .................................281

             SPDXSetVirtualLense ....................................282

             SPDXSetVirtualMaxPolysToRender .........................283

             SPDXSetVirtualPixel ....................................284

             SPDXSetVirtualResolution ...............................285

             SPDXSetVirtualScaleFactors .............................286

             SPDXSetVirtualZBuffer ..................................287

             SPDXShadeRenderList ....................................288

             SPDXSplitPolygonZ ......................................289

             SPDXTell ...............................................290

             SPDXTransformHierarchy .................................291



            c 1996 Paul D. Nettle.  All Rights Reserved.         12


               SPANDEX REAL-TIME RENDERING SYSTEM _ TABLE OF CONTENTS


             SPDXTranslateObject ....................................292

             SPDXTranslateObjectFacing ..............................293

             SPDXTranslateLight .....................................294

             SPDXUnifyObjectNormals .................................295

             SPDXUninit .............................................296

             SPDXUninitByteSortStack ................................297

             SPDXUninitMem ..........................................298

             SPDXUninitMouse ........................................299

             SPDXUninitRenderer .....................................300

             SPDXUpdateMaterialsLighting ............................301

             SPDXValidateMemory .....................................302

             SPDXVectorCrossProduct .................................303

             SPDXVirtualAntiAlias ...................................304

             SPDXVirtualSmoothFrame .................................305

             SPDXWrite ..............................................306

             SPDXWriteImage .........................................307

             MLTIFork ...............................................308

             MLTIGetProcID ..........................................309

             MLTIInit ...............................................310

             MLTISemaphoreGet .......................................311

             MLTISemaphoreSet .......................................312

             MLTISetPriority ........................................313

             MLTISetProcessActive ...................................314

             MLTISetSpeed ...........................................315

             MLTIUninit .............................................316

            Section XI:  Macros .....................................317





            c 1996 Paul D. Nettle.  All Rights Reserved.         13


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX DESIGN


                             SECTION I:  SPANDEX DESIGN

            This section is written in my own words.  I did this because
            I've poured my heart and soul into Spandex and its design,
            and I didn't want to mask that effort.  This section also
            contains a bit of opinion.

                      _The ideal design is an elegant design._

            Few people will argue with that statement (personally, I
            don't know anybody that would argue it, but there are a lot
            of people out there).  For the sake of clarity, Webster
            defines elegant as:

             _marked by concision, incisiveness, and ingenuity; cleverly
             apt and simple [an elegant solution to a complex problem]_

            It is also my personal belief that an elegant design is
            based on simplicity.  Much to my surprise, apparently
            Webster agrees.  I don't mean to say that an elegant design
            is always a simple design.  What I mean is that in most
            cases an elegant design is based on many simple modular
            designs acting as one.

            The best example of this is the complex system of nature.  A
            forest of trees is a complex system.  But looking closer, it
            is mostly a bunch of trees.  If you were to admire a single
            tree, you would see that it is primarily a bunch of branches
            and leaves.  And looking closer still, at a single leaf,
            you'll find that it's actually a very simple and beautiful
            thing.  It is this combination of simple systems working in
            unison that make the complex system.

            This is the basis behind the design of Spandex.

            This is all well and good, and makes a pretty introduction,
            but it doesn't tell you how to accomplish this design or how
            to write the code.  There is one way that I know of to
            accomplish this design, though it is a very impractical.  I
            call it _trial and improvement._


            Trial and Improvement

            Many programmers find that once an application is complete,
            if they could go back and redesign and rewrite it, they
            could have done it better.

            What happens if you do?  Does it improve?  Yes, it most
            certainly and unequivocally does make a tremendous
            difference.  Especially in a real-time environment that
            requires the maximum performance from a machine.




            c 1996 Paul D. Nettle.  All Rights Reserved.         14


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX DESIGN


            A key factor to this maximum performance is the way in which
            the different modules of a design fit together.  As a
            project moves forward in its development, there are always
            those unseen roadblocks.  In most cases, this may be
            something as simple as having to pass too many parameters
            around that a more elegant solution could avoid.  This is
            usually not a problem for most applications, but it can make
            a tremendous difference to a real-time application.

            The problem is practicality.  Fortunately, this methodology
            was practical for the development of Spandex.  As a matter
            of fact, it was so practical, that certain modules of
            Spandex's design were redesigned and rewritten as many as
            eight to ten times!  Many people would ask _and you're proud
            of this?_  Yes, I certainly am!  Since everything can always
            use some level of improvement, I was able to improve (and
            improve, and improve, etc.)

            I found that the ratio of redesigns to improvements
            diminishes quickly with the number of redesigns.  Sure,
            Spandex could use a few more redesigns, but the level of
            improvement would be negligible.

            In the sections to come, I'll explain many of the modules of
            Spandex's design.

                                               Paul D. Nettle
                                               Author of Spandex




























            c 1996 Paul D. Nettle.  All Rights Reserved.         15


             SPANDEX REAL-TIME RENDERING SYSTEM _ THE RENDERING PIPELINE


                         SECTION II:  THE RENDERING PIPELINE

            The rendering pipeline for Spandex has been refined and
            refined for maximum performance.  This section describes the
            key components of the pipeline.

            Before the pipeline can be entered, there is some setup work
            that must be done first.  This work deals with materials,
            lighting, and the camera lense (including the aspect ratio).
            See SPDXRenderHierarchy for more information and an example
            of a replacement rendering pipeline.

            Phase I _ Orientation

            Before we start talking about the orientation, lets spend a
            little time discussing the relativity of the hierarchy.

            In the hierarchy, there needs to be a single top-level
            object, of which all other objects are children.  I'll refer
            to this as the Universe object.  More specifically, this
            will be the Absolute Universe.  I use the term `absolute'
            because it is possible to have multiple universes within a
            hierarchy (each would be children of the `absolute
            universe').

            One example of this might be to have all objects for all
            levels in a game loaded, and as the player advanced from
            level to level, the game would simply switch to a different
            sub-universe, so game-play could continue without delay.
            Note that if you render a hierarchy, you may choose any
            object from within that hierarchy to render, and Spandex
            will only render that object and the hierarchy underneath
            it, all other objects are left totally untouched.

            It is important to note the relationships between objects.
            Each object has a local location (noted as LLoc in the OBJ
            struct).  This LLoc represents the location of the object
            relative to it's parent's LLoc.  Note that the absolute
            universe object is relative to the absolute center of space
            (0,0,0).  In this way, moving the LLoc for the absolute
            universe will move all objects in the universe.  If you
            decide to try this little test, don't expect to see a
            difference in the rendered screen, since the camera is also
            moved.

            Each object has a list of vertices.  These vertices are
            relative to the absolute center of space (0,0,0).  This way,
            when rotated, they are automatically rotated about their
            center.  Later, when the objects are transformed, they end
            up in world-space (see the following sub-section on
            Transformation).

            There are two phases to the orientation phase.  The first
            phase orients all objects around their parents through the


            c 1996 Paul D. Nettle.  All Rights Reserved.         16


             SPANDEX REAL-TIME RENDERING SYSTEM _ THE RENDERING PIPELINE


            hierarchy.  This rotation matrix is stored in the object's
            PhaseOne matrix.  The second phase performs inverse
            rotations of objects around the camera.  This rotation
            matrix is stored in the object's PhaseTwo matrix.  These
            matrices are used later in the Culling and Transform phases
            of the rendering pipeline.


            Phase II _ Culling

            Culling is the process of removing polygons that are facing
            away from the camera, and hence, are not visible.

            Culling is a simple process of comparing a polygon or vertex
            normal to the camera normal, and if they are facing each
            other, then the polygon or vertex is visible.  All other
            vertices and polygons (the non-visible ones) are no longer
            dealt with.


            Phase III _ Transformation

            The transformation phase is the phase that actually does the
            rotation of the polygon vertices.

            When this phase has completed, all the vertex locations have
            been moved from their LLoc (local location) structures into
            their WLoc (world location) structures.


            Phase IV _ Projection

            The projection phase projects all visible vertices onto a 2D
            surface to allow rendering to the virtual screens.

            Vertices that are shared by many polygons are only projected
            once.

            Phase V _ Building the Render List

            The render list is built to allow the following processes to
            access all polygons and vertices at a glance rather than
            having to traverse the hierarchy.  Only visible polygons and
            vertices are added.


            Phase VI _ Shading

            Shading is performed on all polygons (in the case of Lambert
            shading) and vertices (in the case of all smooth-shading
            techniques).

            Vertices that are shared by many polygons are only shaded
            once.


            c 1996 Paul D. Nettle.  All Rights Reserved.         17


             SPANDEX REAL-TIME RENDERING SYSTEM _ THE RENDERING PIPELINE




            Phase VII _ Clipping

            Clipping performs the necessary 2D clipping to the virtual
            screen, based on the virtual screen's clipping rectangle.


            Phase VIII _ Sorting

            Sorting is performed using a BYTE sort technique (similar to
            radix sorts).  The sort is performed on each polygon's
            minimum Z.


            Phase IX _ Rendering

            The process of rendering is where Spandex spends most of
            it's time.  This process simply renders all points followed
            by all polygons in the render list.  Note that the points
            are not sorted, nor are they Z-Buffered.



































            c 1996 Paul D. Nettle.  All Rights Reserved.         18


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE MULTITASKER


                        SECTION III:  THE SPANDEX MULTITASKER

            The Spandex Multitasker (LXM) module is a simple preemptive
            multithreaded multitasking interface.  It was developed for
            the sake of portability.

            Many operating systems allow multitasking, while many others
            do not.  The LXM helps bridge the gap between them by adding
            simple multitasking features to your DOS application.

            The following functions allow access to the LXM kernel:












            If You Plan to Port to DOS Using the LXM

            Be aware of the limitations of the LXM.  It's a simple
            multitasking interface for DOS, and as such, does offer some
            limitations on how you use the multitasking of the operating
            systems you're porting from.

            Since Spandex is not a complete operating system, it can't
            be expected to allow portability from every multitasking
            operating system available.  But it can make porting from a
            multitasking operating system to DOS a little easier.

            The LXM allows you to fork different threads.  This is
            similar to the fork function for UNIX.  However, these
            threads must interact nicely with each other.   This can be
            accomplished using semaphores (information available to all
            threads).

            The LXM does not support multi-tasking of DOS calls.
            However, a simple set of routines can be created by the
            developer for use with the LXM to allow this functionality.

            The LXM also does not save/restore the state of the FPU
            during task switches.  This was a decision made while
            performance tuning the LXM.  Because of this, the LXM can
            task switch remarkably fast.


            Priorities




            c 1996 Paul D. Nettle.  All Rights Reserved.         19


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE MULTITASKER


            The prioritizing is different than most operating systems.
            I chose this specific prioritizing technique simply because
            it is the fastest during execution.  There are two key
            factors in selecting how often a task is given a time slice,
            and how long it holds that time slice.  The algorithm is
            simple:

                 When a task gets a time slice, it is given a count-down
                 timer which is originally set to the priority value for
                 that task.  Each time an interrupt occurs, this counter
                 is decremented until zero, at which time the next task
                 becomes active.

            In this way, the _priority_ simply dictates how long a task
            executes for, not how often it gets executed.


            Speed

            The speed setting simply sets the frequency of the timer
            interrupt (0x08).  The smaller the number, the faster the
            frequency.

            As this value becomes smaller, the execution of the
            different tasks appears smoother.  Changing the setting of
            the speed value will not change the percentage of the CPU
            that each task gets relative to the other tasks.  But it
            will change how much CPU time is spent in the LXM.  The
            smaller the value for speed, the more time the multitasker
            spends multitasking.


























            c 1996 Paul D. Nettle.  All Rights Reserved.         20


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER


                       SECTION IV: TOOLS FOR MORE ROBUST CODE

            Spandex includes some very handy features to aid the
            developer in creating more robust code.  Most of these
            features allow the developer to find errors before they
            strike.  Please make sure you read this section carefully
            before you start the design of your application.

            Error Tracking and Management

            The error tracking and management features in Spandex were
            designed to:

            .  Ease the development and debugging process
            .  Track errors throughout the development process and even
               in the field

            Access to these features is available through the following
            functions:













            All messages and errors get logged to a log file named
            SPANDEX.LOG.  When Spandex is initialized, this log file is
            deleted (also done via a call to           ).

            The log file is opened/created each time an entry is logged,
            then closed when logging is completed.  The reason for this
            is because if the log file were to remain open during
            execution and the application were to crash, the log file
            would be lost.  This does slow the logging down quite a bit,
            so be careful in deciding where to keep your logging when
            you release your application to the public.

            The log file resides in the current running directory.  Note
            that if the current directory is changed during runtime,
            then any logs will be logged to a new file in the new
            current directory.  This also means that if there are log
            files located in places other than the current directory at
            startup, they will not get reset.

            Entries logged to the log file may look like this:




            c 1996 Paul D. Nettle.  All Rights Reserved.         21


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER



















            Note that the first entry is a string log, and the following
            two logs are errors.  The difference is that the string logs
            do not have a      entry.  There is a third type of log
            entry called a Fatal Error that is simply an error, but will
            also cause the application to terminate and echo the logged
            error directly to stdout.

            Also note that the entries in the log file are easily
            configurable with the debugging flags.  For example, the
                entry will not appear if the proper flag is not set
            (see the next sub-section on _Spandex Debugging Flags_).

            In the      field, you'll see the error code in parenthesis,
            and an English string following it.  This string can be had
            for any code by a call to           .

            Errors and string are logged by calls to         and
                    .  And Fatal errors are logged via a call to
                    .  Note that these three calls are macros, not
            functions.  The macros are used to automatically pass the
                 and      compiler macros to the actual logging
            functions.

            Each of the three types of logging entries may be disabled
            by calls to             ,              and           .


            Spandex Debugging Flags

            Spandex supports 32 internal debugging flags.  The first
            four are currently used by the system.  The rest are
            available to the developers.  Though it is suggested to
            consider the next four reserved for future use leaving the
            developer with a total of 24 debugging flags.

            The current uses for the internal debug flags are:



            c 1996 Paul D. Nettle.  All Rights Reserved.         22


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER


                 DEBUG_BASIC         Basic debugging features
                 DEBUG_MEM           Memory logging features
                 DEBUG_MEMTRACE      Memory tracing features
                 DEBUG_FUNCS         Enable logging of source filenames
                                     and line numbers.

            There are quite a few uses of these flags.  For specific
            information, consult the API reference.

            The debugging flags are managed by the following calls:





            The                 is performed internally during Spandex's
            initialization, but may also be called externally.  The last
            two functions are used to set the debug states of the 32
            debug values.  For specific information on these functions,
            consult the API reference.


            Asserts and Verifies

            The Assert and Verify macros are used to track down elusive
            and fatal bugs before they are able to strike.

            The syntax for Asserts and Verifies is as follows:

                 Assert(expression);
                 Verify(expression);

            The rules for Asserts and Verifies are simple.  Asserts and
            Verifies will generate an error when expression is evaluated
            to zero.  The difference between Asserts and Verifies is
            what they do when the software is built for release.

            Spandex is shipped with a release and a debug version of the
            libraries.  In the release version of the libraries, the
            Asserts and their expression will go away.  The expression
            will not be executed or evaluated, and the entire line of
            code disappears from existence.

            For verifies, however, expression is still executed, but the
            Verify around that expression will go away.  Therefore, if
            you wish to test the return code from the 
            function, the code might look like this:



            In the release, the call to           will still be made,
            but the Verify will go away:




            c 1996 Paul D. Nettle.  All Rights Reserved.         23


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER



            If this were an Assert, the release code would not make the
            call to          .

            When an assertion (or verify) occurs, Spandex will issue a
            fatal error.  A typical Assertion may appear on the screen
            as:






            Interrogating the log file, we find:








            Going into the file demo.c, we'll see the following code:



            This tells us that the variable _Filename_ is null.


            The Spandex Memory Manager

            The Spandex Memory Manager (LMM) is one of the most powerful
            tools in creating robust code.

            Many common errors are related to memory (pointers, arrays,
            etc.).  By nature, many of these errors are difficult to
            track down since they are well-known for causing lockups.
            Here is an example situation:


















            c 1996 Paul D. Nettle.  All Rights Reserved.         24


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER





            The previous code segment simply returns the pointer to a
            scanline table.  The problem is that there is a bug in it.
            The bug may have jumped out at you, and it may not have.
            But we all know that errors like these can crop up once in a
            while.  What's worse is that take can easily take more time
            to track down then we would like.

            If you execute this code segment in the middle of your
            program, it may or may not crash.  The worst case is that it
            will not crash.  This means you have a bug, and don't know
            about it _ then two weeks later, you change one piece of
            code to include an extra few bytes to an array, and all of
            the sudden it crashes.  You spend time fixing this problem.
            Even worse, what if you never find out about it until it
            reaches the customer?

            The bug, by the way, is that the allocation of memory for a
            size of _      _ should be _              _

            Spandex fixes this problem by verifying the integrity of
            every single piece of memory ever allocated.  Integrity is
            check in a number of ways.

            Each memory block allocated has a prefix and suffix of four
            bytes (a total of only eight bytes extra for every
            allocation).  These extra eight bytes help the LMM track
            when array over-runs and under-runs occur.  In this case,
            when the application containing the above code would exit
            (and the call to the          is made) the memory manager
            would log an error.

            The LMM checks the actual value of the address being freed.
            This helps track pointer overwrites (when a pointer itself
            is overwritten).

            TIP:  You may not use the standard call to free() for memory
            blocks that are allocated by the LMM.

            The LMM also checks zero-memory.  If a NULL pointer is
            written to, Spandex will log an error when the 
            routine is called.

            Memory leaks will no longer plague your application.
            Spandex verifies the existence of any memory leaks on the
            call to         .  As long as your application uses the
                  ,         and       routines, any application is well-
            guarded from memory leaks.

            Here's an example log with some memory leaks listed:




            c 1996 Paul D. Nettle.  All Rights Reserved.         25


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER



















            So lets look at the two errors .  The first says that there
            is one memory leak.  This means that upon exiting the
            application, there was one block of 64,000 bytes or RAM that
            had been allocated, yet never released back to the system
            (see the following sub-section titled _The Spandex Memory
            manager_ for more details on memory leaks).

            The next few entries in the log list each of the memory
            leaks.  In this case, there is only one.  Our log tells us
            that the memory leak was allocated in vscreen.c at line 32.
            This is an internal file within the Spandex source code.
            However, by the filename, we can tell that the error has
            something to do with virtual screens.  By investigating the
            code, it was found that the virtual screen for the
            application was created, but not destroyed.  By inserting a
            call to               , we find that the new log file looks
            like this:







            Under normal circumstances, this would not be a problem for
            this particular application.  However, if there was a cause
            for allocating a new virtual screen every 10 minutes, and
            the user used the application for 8 hours, there is a good
            chance that the memory leak would cause problems that could
            not be foreseen without this warning, and the application
            would eventually experience insufficient memory.

            TIP:  Don't forget to test all exit points of the
            application for memory leaks.  This is very handy for
            finding those leaks that hide in the darkest corners.




            c 1996 Paul D. Nettle.  All Rights Reserved.         26


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER


            If an allocation (or reallocation) fails, an automatic error
            is logged to the log file.  This helps track down those
            forgotten checks for NULL on returns from        and
                   .

            During the execution of your application, you can get a
            memory report of the allocated memory.  The first report, a
            disk file called SPANDEX.MEM, is stored to the disk by a
            single call to           .  Here is a sample output from a
            call to this routine:














































            c 1996 Paul D. Nettle.  All Rights Reserved.         27


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER


























































            c 1996 Paul D. Nettle.  All Rights Reserved.         28


               SPANDEX REAL-TIME RENDERING SYSTEM _ THE MEMORY MANAGER















            Note that the _Total memory in use right now_ includes the
            extra eight bytes allocated to each block of memory, but the
            actual lengths of each listed element do not include those
            extra bytes.  So if you try to double-check Spandex's
            totals, you'll find that you'll need to account for an extra
            eight bytes for each element allocated.





































            c 1996 Paul D. Nettle.  All Rights Reserved.         29


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


                                SECTION V: USD FILES

            The USD (Universal Scene Description) files are simply text
            files that contain all the information about the Universe
            hierarchy. This section will outline the format of the USD
            files.

            The USD files contain objects within the hierarchy, they
            dictate the relationships between objects in the hierarchy,
            and they also allow the developer to set the default
            properties for each object in the hierarchy.


            Comments

            Comments begin with a ';' or a '/' character and continue
            until the end of a line.  For example:















            Labels

            The USD files are keyed by labels.  Each label only requires
            the first three characters to appear in the USD file, but
            may contain the whole word with no spaces.  There are two
            classes of labels:

            Entity labels describe entities in the hierarchy (such as an
            object, or a light source).  Entities are used to define the
            entities.  Following each entity must be a set of braces {}
            with which to hold the attributes and geometric data.

            Property Labels define properties or attributes for the
            entities within the hierarchy (such as name, location,
            orientation, etc.)

            Entity Labels

               UNI _ Universe
               Each USD file must begin with Universe.  The universe is
               an object just like any other object.  The only exception
               is that its label is _Universe_ and there may be only one


            c 1996 Paul D. Nettle.  All Rights Reserved.         30


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


               of them.  All objects in the Universe will be children of
               the Universe object.

               OBJ _ Object
               Any geometric or reference object is defined as an
               object.

               CAM _ Camera
               This is label is synonymous to OBJ.  It was added for
               easier reading of the USD file.

               LIG _ Light
               Light sources may be the child of any object, but may not
               contain any child lights or child objects.  The only
               available labels for lights are Name, Location,
               Intensity.

            Property Labels

               Ambient _ Ambient light
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object
               Notes:      Each object has it's own ambient light value.
                           This value can be inherited from it's parent
                           object.

               Backfaces _ Show backs flag
               Values:     Any
               Type:       Boolean
               Scope:      Current object and it's children
               Notes:      None

               BUMpmap -
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object (see notes)
               Notes:      None

               CENter - Center of object used for rotation
               Values:     X, Y, Z (coordinate triple)
               Type:       Floating point
               Scope:      Current object
               Notes:      Do not place commas between values.

               Color -
               Values:     Any
               Type:       Boolean
               Scope:      Current object and it's children
               Notes:      None

               DEVeloper - Developer's values
               Values:     Any 10 values
               Type:       Integer


            c 1996 Paul D. Nettle.  All Rights Reserved.         31


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


               Scope:      Current object
               Notes:      All 10 values must follow the label.  Do not
                           place commas between values.

               DRAwflags - Drawing Flags
               Values:     "TRIangles", "QUAds", "POInts", "ALL", or
                           "NONe"
               Type:       Integer
               Scope:      Current object
               Notes:      You may enter the integer value of a combined
                           setting, or enter one of the predefined
                           strings.

               INTensity - Intensity for current light source
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Lights only
               Notes:      None

               KA - Ambient light reflection coefficient
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object
               Notes:      Default is 1.0

               KD - Diffuse light reflection coefficient
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object
               Notes:      Default is 1.0

               KS - Specular reflection coefficient
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object
               Notes:      Default is 1.0

               LOCation - Location of object
               Values:     X, Y, Z (coordinate triple)
               Type:       Floating point
               Scope:      Current object and it's children
               Notes:      Do not place commas between values.

               NAMe - Name an object
               Values:     Single word
               Type:       String
               Scope:      Current object
               Notes:      None

               OPAcity -
               Values:     Any
               Type:       Boolean
               Scope:      Current object and it's children
               Notes:      None


            c 1996 Paul D. Nettle.  All Rights Reserved.         32


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS



               ORIentation - Original rotational values for the object
               Values:     Any
               Type:       Floating point
               Scope:      Current object
               Notes:      ROT_POINTS is defined in the SPXDEFS.H file.
                           Most likely initialized to 360*4.

               POInt - Point
               Values:     Vertex number
               Type:       Integer
               Scope:      Current object
               Notes:      None.

               QUAd - Solid Shaded Quad
               Values:     V1, V2, V3, V4, MapName, Mx1, My1, Mx2, My2,
                           Mx3, My3, Mx4, My4
               Type:       Integer (Vx), String (MapName), Floating
                           point (Mxx)
               Scope:      Current object
               Notes:      Do not place commas between values.

               SHAdemodel - Shading model
               Values:     "Flat", "Gouraud", _Phong_, _Bump_
               Type:       Boolean
               Scope:      Polygonal geometry within the current object
                           and it's children
               Notes:      None

               SHInevalue - Amount of shine that was applied to the
               palette table
               Values:     0.0 - 1.0
               Type:       Floating point
               Scope:      Current object
               Notes:      This value is the same as the value passed
                           into MAKEMAP with the -S parameter.  You only
                           need to set this in the Universe object.  The
                           default is 1.0

               SHOwbacks - Show backs flag
               Values:     Any
               Type:       Boolean
               Scope:      Current object and it's children
               Notes:      None

               SURface - Specify the surface type of an object
               Values:     _SOLid_, _ENVironment_, _TEXtured_
               Type:       Floating point
               Scope:      Current object
               Notes:           ROT_POINTS is defined in the SPXDEFS.H
                           file.  Most likely initialized to 360*4.

               TRBegin - Translation block begin
               Values:     X, Y, Z


            c 1996 Paul D. Nettle.  All Rights Reserved.         33


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


               Type:       Floating point
               Scope:      Within the confines of the TRBegin and TREnd
               Notes:      Do not place commas between values.  TRBegin
                           and TREnd do not have to follow braces.  They
                           may be placed anywhere in the file (or split
                           between files via the #include directive).
                           They may also be used recursively.  Maximum
                           recursive depth is 1000.

               TREnd - Translation block end
               Values:     N/A
               Type:       N/A
               Scope:      Within the confines of the TRBegin and TREnd
               Notes:      Do not place commas between values.  TRBegin
                           and TREnd do not have to follow braces.  They
                           may be placed anywhere in the file (or split
                           between files via the #include directive).
                           They may also be used recursively.  Maximum
                           recursive depth is 1000.

               TRIangle - Textured Shaded Triangle
               Values:     V1, V2, V3, MapName, Mx1, My1, Mx2, My2, Mx3,
                           My3
               Type:       Integer (Vx), String (MapName), Floating
                           point (Mxx)
               Scope:      Current object
               Notes:      Do not place commas between values.

               TYPe - Type of object
               Values:     Any
               Type:       Integer
               Scope:      Current object
               Notes:      This is for developer's use.

               VERtex - Vertex
               Values:     X, Y, Z, DX, DY, DZ
               Type:       Floating point
               Scope:      Current object
               Notes:      Do not place commas between values.


            The #include Preprocessor Directive

            This directive allows inclusion of other USD files.  This
            way, you can have one object per file, and have just one
            universal USD file that is given to Spandex for reading in.

            This directive must be the only thing on a line --
            everything after it will be ignored.

            It can appear anywhere in the text as long as it's contents
            fit in with the current syntax.




            c 1996 Paul D. Nettle.  All Rights Reserved.         34


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


            General Notes

            .  The maximum line length is 512 characters.
            .  Values must NOT be separated by anything other than a
               space (i.e. no commas).
            .  All braces {} must have at least one space or a new line
               on either side of them (i.e. they cannot be touching
               another word, or they will be considered part of that
               word.
            .  You do not have to create a new line for each label.  You
               may actually create an entire USD file on a single line
               if it is within the 512 character limit.
            .  The only values that are case sensitive in the USD files
               are the names.  The names are stored exactly as they
               appear in the USD file.
            .  There are many English equivalents to some Byte oriented
               or Boolean values.  For Boolean values, using a _0_ or
               _1_ is not acceptable.  These English equivalents are as
               follows:

                 On          Available for any Boolean value -- equates
                 to 1
                 Off         Available for any Boolean value -- equates
                 to 0
                 Yes         Available for any Boolean value -- equates
                 to 1
                 No          Available for any Boolean value -- equates
                 to 0
                 True        Available for any Boolean value -- equates
                 to 1
                 False       Available for any Boolean value -- equates
                 to 0

                 None        Available for draw flags
                 Triangles   Available for draw flags
                 Quads       Available for draw flags
                 Points      Available for draw flags
                 All         Available for draw flags

                 Ambient     Available for Shademodel
                 Lambert     Available for Shademodel
                 Pure        Available for Shademodel _ equates to
                 Lambert
                 Flat        Available for Shademodel _ equates to
                 Lambert
                 Gouraud     Available for Shademodel
                 Phong       Available for Shademodel
                 Bump        Available for Shademodel

                 Solid       Available for Surface
                 Textured    Available for Surface
                 Environment Available for Surface
                 Reflect     Available for Surface _ equates to
                 Environment


            c 1996 Paul D. Nettle.  All Rights Reserved.         35


                  SPANDEX REAL  IME                               -T    RENDERING  YSTEM                                               S      _ FILE FORMATS




            Example USD File





















































            c 1996 Paul D. Nettle.  All Rights Reserved.         36


                  SPANDEX REAL-TIME RENDERING SYSTEM _ FILE FORMATS


                               SECTION VI:  MATERIALS























































            c 1996 Paul D. Nettle.  All Rights Reserved.         37


                SPANDEX REAL-TIME RENDERING SYSTEM _ VIRTUAL SCREENS


                            SECTION VII:  VIRTUAL SCREENS























































            c 1996 Paul D. Nettle.  All Rights Reserved.         38


                   SPANDEX REAL-TIME RENDERING SYSTEM _ THE MOUSE


                              SECTION VIII:  THE MOUSE























































            c 1996 Paul D. Nettle.  All Rights Reserved.         39


              SPANDEX REAL-TIME RENDERING SYSTEM _ TYPEDEFS AND DEFINES


                         SECTION IX:  TTYPEDEFS AND DEFINES























































            c 1996 Paul D. Nettle.  All Rights Reserved.         40


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE
















                        SECTION X:  THE SPANDEX API REFERENCE








































            c 1996 Paul D. Nettle.  All Rights Reserved.         41


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXClose

            Description:   Close a file for non-buffered I/O.



                 Handle    File handle to close.

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXClose.

            Return value:  Always returns the result of the close()
                           function.

            Compatibility: N/A

            See Also:      SPDXOpen, SPDXClose






































            c 1996 Paul D. Nettle.  All Rights Reserved.         42


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXFatalError

            Description:   Close a file for non-buffered I/O.



                 File      Filename (from source) used for logging
                 Line      Line number of file
                 ErrorCode Spandex error code
                 Notes     Informational string to be logged with entry

            Remarks:       Note that this function is called from the
                           SPDXFatalError macro to avoid manual passing
                           of File and Line arguments.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXOpen, SPDXClose



































            c 1996 Paul D. Nettle.  All Rights Reserved.         43


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXFree

            Description:   Free a previously allocated region or memory.



                 Address   Address of memory region to free
                 OwnerFile Source file that freed this region or memory
                 OwnerLine Source line number

            Remarks:       Note that this function is called from the
                           SPDXFree macro to avoid manual passing of
                           OwnerFile and OwnerLine arguments.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMalloc, SPDXFree




































            c 1996 Paul D. Nettle.  All Rights Reserved.         44


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXGetc

            Description:   Read a character from a file (non-buffered).



                 Handle    File handle for character input

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXGetc.

            Return value:  Return value is passed from getc().

            Compatibility: N/A

            See Also:      SPDXPutc, SPDXGetc







































            c 1996 Paul D. Nettle.  All Rights Reserved.         45


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXMalloc

            Description:   Allocate a region of memory.



                 Size      Amount of memory to allocate
                 OwnerFile Source file that freed this region or memory
                 OwnerLine Source line number

            Remarks:       Note that this function is called from the
                           SPDXMalloc macro to avoid manual passing of
                           OwnerFile and OwnerLine arguments.

            Return value:  Pointer to newly allocated region of memory
                           or NULL on failure.

            Compatibility: N/A

            See Also:      SPDXMalloc, SPDXRealloc, SPDXFree



































            c 1996 Paul D. Nettle.  All Rights Reserved.         46


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXOpen

            Description:   Opens a file for non-buffered I/O.



                 FileName  Name of the file to open
                 Flags1    Flags to be passed through to the standard
                 open() call.
                 Flags2    Flags to be passed through to the standard
                 open() call.

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXOpen.

            Return value:  Return value is passed from open().

            Compatibility: N/A

            See Also:      SPDXOpen, SPDXClose



































            c 1996 Paul D. Nettle.  All Rights Reserved.         47


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXRead

            Description:   Read a from a file (non-buffered I/O).



                 Handle    File handle to read from
                 Buffer    Buffer to fill as information is read from
                 the file
                 Length    How many bytes to read from file into Buffer.

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXRead.

            Return value:  Return value is passed from read().

            Compatibility: N/A

            See Also:      SPDXRead




































            c 1996 Paul D. Nettle.  All Rights Reserved.         48


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXRealloc

            Description:   Modifies a previously allocated a region of
                           memory.



                 Address   Address of previously allocated memory
                 Size      Amount of memory to allocate
                 OwnerFile Source file that freed this region or memory
                 OwnerLine Source line number

            Remarks:       Note that this function is called from the
                           SPDXMalloc macro to avoid manual passing of
                           OwnerFile and OwnerLine arguments.

            Return value:  Pointer to newly allocated region of memory
                           or NULL on failure.

            Compatibility: N/A

            See Also:      SPDXRealloc, SPDXMalloc, SPDXFree

































            c 1996 Paul D. Nettle.  All Rights Reserved.         49


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXSeek

            Description:   Seek to a position within a file (non-
                           buffered I/O).



                 Handle    File handle to seek within
                 Offset    Offset within file relative to Origin
                 Origin    Origin of seek offset (SEEK_SET, SEEK_CUR,
                 SEEK_END)

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXSeek.

            Return value:  Return value is passed from lseek().

            Compatibility: N/A

            See Also:      SPDXSeek



































            c 1996 Paul D. Nettle.  All Rights Reserved.         50


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXTell

            Description:   Returns the current position of the file
                           pointer (non-buffered I/O).



                 Handle    File handle to retrieve position from

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXTell.

            Return value:  Return value is passed from tell().

            Compatibility: N/A

            See Also:      SPDXTell






































            c 1996 Paul D. Nettle.  All Rights Reserved.         51


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           _SPDXWrite

            Description:   Read a from a file (non-buffered I/O).



                 Handle    File handle to write to from
                 Buffer    Buffer to write to the file
                 Length    How many bytes from Buffer to write to the
                 file.

            Remarks:       This function is to be used for non-buffered
                           I/O.  For buffered I/O, use SPDXWrite.

            Return value:  Return value is passed from write()

            Compatibility: N/A

            See Also:      SPDXWrite




































            c 1996 Paul D. Nettle.  All Rights Reserved.         52


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddChild

            Description:   Add a child to given object.



                 Parent    Parent object of the new child.

            Remarks:       SPDXAddChild increases the size of the child
                           list for an object, instantiates a new object
                           and attaches it to Parent.  The new child
                           also inherits all of the parent's basic
                           properties (see SPDXInheritObject).

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXRemoveChild, SPDXGetChild,
                           SPDXInheritObject



































            c 1996 Paul D. Nettle.  All Rights Reserved.         53


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddLight

            Description:   Adds a point light to an object



                 Object    Object to receive the new light.

            Remarks:       Lights are attached to objects, they are not
                           objects themselves.  A light may be attached
                           to an empty object (containing no geometry)
                           if it is desired to have a free-floating
                           point light source.

            Return value:  Pointer to the newly created point light, or
                           NULL on error.

            Compatibility: N/A

            See Also:      SPDXCleanupLights



































            c 1996 Paul D. Nettle.  All Rights Reserved.         54


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddMap

            Description:   Adds a map to the global map list



                 Name      Map name
                 Data      Bitmap data for the map
                 Xres/Yres Width/Height (respectively) of the map

            Remarks:       The maps are stored in a global map list for
                           the sake of speed during rendering.  Use this
                           function with care to add to this global map
                           list.  The 8-bit color values of the pixels
                           in Data must correspond to the palette table
                           so that shading can be properly performed.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXAssignTriMaterial

































            c 1996 Paul D. Nettle.  All Rights Reserved.         55


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddMaterial

            Description:   Adds a material to the global material list



                 Name      Material name

            Remarks:       The materials are stored in a global material
                           list for the sake of speed during rendering.
                           Use this function to add to this global
                           material list.

                           Note that when a new material is added to the
                           global list, all values are set to zero (or
                           NULL in the case of pointers) with the
                           exception of Ka, Ks, Kd and Shine, which are
                           set to 1.0.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXAssignTriMaterial































            c 1996 Paul D. Nettle.  All Rights Reserved.         56


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddObjectPoint

            Description:   Adds a point to an object



                 Object    Object to receive new point

            Remarks:       This routine only allocates space for one new
                           point.  To modify this point, use the
                           SPDXSetPointVertex routine.

            Return value:  Point's index in Object or -1 on error.

            Compatibility: N/A

            See Also:      SPDXGetPointCount, SPDXSetPointVertex






































            c 1996 Paul D. Nettle.  All Rights Reserved.         57


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddObjectTri

            Description:   Adds a triangle to an object



                 Object    Object to receive new triangle

            Remarks:       This routine only allocates space for one new
                           triangle.  To modify this triangle, use the
                           SPDXSetTri____ routines.

            Return value:  Triangle's index in Object or -1 on error.

            Compatibility: N/A

            See Also:      SPDXGetObjectTriCount, SPDXGetTriVertices,
                           SPDXSetTriVertices, SPDXGetTriNormal,
                           SPDXSetTriNormal




































            c 1996 Paul D. Nettle.  All Rights Reserved.         58


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAddObjectVertex

            Description:   Adds a vertex to an object



                 Object    Object to receive new vertex

            Remarks:       This routine only allocates space for one new
                           vertex.  To modify this vertex, use the
                           SPDXSetVertex____ routines.

            Return value:  Vertiex's index in Object or -1 on error.

            Compatibility: N/A

            See Also:      SPDXGetObjectVertexCount, SPDXGetVertex,
                           SPDXSetVertex





































            c 1996 Paul D. Nettle.  All Rights Reserved.         59


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXAssignTriMaterial

            Description:   Assign a texture-map to a triangular polygon




                 MatName   Name of the material (from USD file)
                 Object    Object that contains the modified polygon
                 Index     Polygon index within Object
                 Map1,2,3  U/V coordinates (must range from 0.0 - 1.0)

            Remarks:       The Triangle at index Index in object Object
                           will receive the material and U/V coordinates
                           for the texture-map.  At the time This
                           function converts the U/V coordinates from
                           their range of [0.0 - 1.0] to the proper
                           range of the texture's resolution.

            Return value:  LE_NONE on success, or appropriate LE code.

            Compatibility: N/A

            See Also:































            c 1996 Paul D. Nettle.  All Rights Reserved.         60


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXBuildPhaseOne

            Description:   Perform primary phase on hierarchy
                           orientation (orientation around the
                           hierarchy).



                 Object    Top-level object of hierarchy to orient
                 ParentLoc Location of the parent object
                 ParentMat Parent object matrix

            Remarks:       The primary phase rotates the local
                           coordinates into the world coordinates
                           (location and direction) of each object in
                           the hierarchy around its parent.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXOrientHierarchy, SPDXBuildPhaseTwo

































            c 1996 Paul D. Nettle.  All Rights Reserved.         61


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXBuildPhaseTwo

            Description:   Perform secondary phase on hierarchy
                           orientation (orientation around the camera).



                 Object    Top-level object of hierarchy to orient
                 CamMat    Camera matrix
                 CamLoc    Camera location

            Remarks:       The second phase rotates the world
                           coordinates (location and direction) of each
                           object in the hierarchy around the camera.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXOrientHierarchy, SPDXBuildPhaseOne



































            c 1996 Paul D. Nettle.  All Rights Reserved.         62


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXBuildRenderList

            Description:   Builds the render list from a hierarchy





                 Object    Top-level object of hierarchy
                 Cam       Camera
                 VScreen   Virtual screen to which this list will be
                 rendered

            Remarks:       Builds the render list for sorting, shading
                           and rendering.  (See SPDXRenderHierarchy).

                           The VScreen parameter is used for the Z-
                           Clipping that happens during the building of
                           the virtual screen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy






























            c 1996 Paul D. Nettle.  All Rights Reserved.         63


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXByteSortRenderList

            Description:   Sorts a render list using BYTE sorting



                 RList     Render list to sort

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy








































            c 1996 Paul D. Nettle.  All Rights Reserved.         64


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCalcFOV

            Description:   Calculate the FOV from a given focal length.



            Remarks:       The FOV (field of vision) is used in
                           calculating the scale factors for a virtual
                           screen from a lense size.  Chances are rare
                           that you should ever call this directly.

                           The formula for calculating the FOV is:

                           FOV = (15.0 / FocalLength) * 160.0;

            Return value:  FOV for given focal length

            Compatibility: N/A

            See Also:      SPDXSetVirtualLense



































            c 1996 Paul D. Nettle.  All Rights Reserved.         65


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupGlobals

            Description:   Cleanup the SPDXGlobals structure.



            Remarks:       Cleans up the globals structure.  Note that
                           the DOS memory allocated earlier is not
                           cleaned up.  Calling SPDXInitGlobals multiple
                           times can cause insufficient DOS RAM
                           problems.  This function also calls
                           SPDXCleanupMaps and SPDXCleanupMaterials.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCleanupMaps





































            c 1996 Paul D. Nettle.  All Rights Reserved.         66


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupLights

            Description:   Remove all lights from the global light list



            Remarks:       The global light list is a list of lights
                           built as lights are added and removed from
                           the hierarchy.  It is used during rendering
                           for speed purposes.  It simply contains a
                           list of pointers to the lights throughout the
                           hierarchy.  SPDXCleanupLights removes all
                           lights from the global light list.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXAddLight




































            c 1996 Paul D. Nettle.  All Rights Reserved.         67


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupMaps

            Description:   Remove all maps from the global map list



            Remarks:       The maps are stored in a global map list for
                           the sake of speed during rendering.  Use this
                           function with care to remove all maps from
                           this global list.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXAddMap, SPDXCleanupGlobals







































            c 1996 Paul D. Nettle.  All Rights Reserved.         68


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupMaterials

            Description:   Remove all materials from the global material
                           list



            Remarks:       The materials are stored in a global material
                           list for the sake of speed during rendering.
                           Use this function with care to remove all
                           materials from this global list.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitMaterials, SPDXAddMaterial,
                           SPDXCleanupGlobals





































            c 1996 Paul D. Nettle.  All Rights Reserved.         69


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupObject

            Description:   Releases all memory in use by an object



                 Object    Object to remove from memory

            Remarks:       The object and all associated memory is
                           freed.  This includes the point, vertex,
                           polygon and light lists.  The object's
                           children are also recursively cleaned.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRemoveChild





































            c 1996 Paul D. Nettle.  All Rights Reserved.         70


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCleanupVirtualScreen

            Description:   Releases all resources used by a virtual
                           screen.



                 VScreen   Virtual screen to cleanup

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitVirtualScreen







































            c 1996 Paul D. Nettle.  All Rights Reserved.         71


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXClearVirtualScreen

            Description:   Clears the virtual screen to a single solid
                           color



                 Color     Color to clear the screen with
                 VScreen   Virtual screen to clear

            Remarks:       The virtual screen is completely cleared with
                           the value of Color.  Note that the entire
                           virtual screen is set to Color not just the
                           clipped region.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXResetVirtualScreen



































            c 1996 Paul D. Nettle.  All Rights Reserved.         72


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXClipRenderList

            Description:   Performs 2D clipping on the render list to
                           the virtual screen's clipping rectangle.



                 RList     The render list for which to perform 2D
                 clipping
                 VScreen   Virtual screen to clip to

            Remarks:       This function is called from
                           SPDXRenderHierarchy.  It performs all 2D
                           clipping on all polygons in the render list.
                           Not that this must happen, as the polygon
                           renderers require polygons to be pre-clipped.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy, SPDXSplitPolygonZ

































            c 1996 Paul D. Nettle.  All Rights Reserved.         73


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXClose

            Description:   Closes a buffered I/O file.



                 Handle    File handle

            Remarks:       Closes a file that was opened for buffered
                           I/O.

            Return value:  Return value is passed from close().

            Compatibility: N/A

            See Also:      SPDXOpen







































            c 1996 Paul D. Nettle.  All Rights Reserved.         74


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCloseServices

            Description:   Closes the Spandex services



            Remarks:       Services must be closed after de-
                           initialization of Spandex.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXUninit









































            c 1996 Paul D. Nettle.  All Rights Reserved.         75


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCloseSTF

            Description:   Close a file from within a STF file.



                 Handle    File handle of the file within the STF file

            Remarks:       Closes a file opened within a STF file.

            Return value:  STF file handle on success or -1 on failure.

            Compatibility: N/A

            See Also:      SPDXOpenSTF, SPDXSelectSTF








































            c 1996 Paul D. Nettle.  All Rights Reserved.         76


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXConvertMap

            Description:   Converts a raw map to a shaded map for direct
                           screen output that corresponds to the video
                           palette.



                 Map       Map to convert
                 Intensity Lighted intensity (shade)

            Remarks:       Maps, in their raw format, are not screen-
                           displayable as they need to go through the
                           palette table to be displayed.  Use
                           SPDXConvertMap to convert them for direct
                           screen display.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A

































            c 1996 Paul D. Nettle.  All Rights Reserved.         77


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXCopyFromScreen

            Description:   Copies from the screen into a buffer



                 CopyTo    Buffer to hold screen data

            Remarks:       The buffer must be large enough to hold a
                           complete copy of the screen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCopyToScreen







































            c 1996 Paul D. Nettle.  All Rights Reserved.         78


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCopyToScreen

            Description:   Copies a buffer to the video screen



                 CopyFrom  Buffer to be copied to the screen

            Remarks:       The buffer must be large enough to hold a
                           complete copy of the screen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCopyFromScreen







































            c 1996 Paul D. Nettle.  All Rights Reserved.         79


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCorrectVirtualAspect

            Description:   Performs aspect ratio corrections to a
                           virtual screen.



                 XAspect   X aspect ratio
                 YAspect   Y aspect ratio
                 VScreen   Virtual screen to perform corrections on

            Remarks:       Performs aspect ratio correction to the scale
                           factors of a given virtual screen.  Each of
                           the Aspect components is multiplied by it's
                           corresponding scale factor component.

                           Note that this must be called after the scale
                           factors for a virtual screen have been set
                           up.  If the scale factors are changed, then
                           they must be re-corrected for the aspect
                           ratio.

                           Also note that calling this function more
                           than once without resetting the scale factors
                           for a virtual screen will yield undesirable
                           results.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetVirtualScaleFactors























            c 1996 Paul D. Nettle.  All Rights Reserved.         80


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCountPixelsInRenderList

            Description:   Returns the count of the rendered pixels.



                 RList     Render list to count pixels in

            Remarks:       This function is useful for tracking
                           performance statistics on Spandex.

            Return value:  Returns the count of rendered pixels in the
                           most recently rendered image.

            Compatibility: N/A

            See Also:      SPDXCountPolysInRenderList






































            c 1996 Paul D. Nettle.  All Rights Reserved.         81


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCountPolysInRenderList

            Description:   Returns the count of the rendered polygons.



                 RList     Render list to count polygons in

            Remarks:       This function is useful for tracking
                           performance statistics on Spandex.

            Return value:  Returns the count of rendered polygons the
                           most recently rendered image.

            Compatibility: N/A

            See Also:      SPDXCountPixelsInRenderList






































            c 1996 Paul D. Nettle.  All Rights Reserved.         82


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCreateImage

            Description:   Create an image structure



                 XRes, YRes     Resolution of the image.

            Remarks:       All images are dealt with in RGB 24-bit
                           color.  Some functions will modify the image
                           such that it is an indexed image, but these
                           cases are rare, and are for temporary storage
                           of an indexed image data set.

                           The image is first allocated (XRes * YRes *
                           3) in size, then the values in the structure
                           are given default values.

            Return value:  Returns the address of the newly allocated
                           image structure or NULL on failure.

            Compatibility: N/A

            See Also:      SPDXDestroyImage































            c 1996 Paul D. Nettle.  All Rights Reserved.         83


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCreateObject

            Description:   Instantiates a new object.



                 Object    Object to be created.

            Remarks:       Once the object is created, it is given
                           default values (see SPDXMakeObjectDefault.)

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXMakeObjectDefault







































            c 1996 Paul D. Nettle.  All Rights Reserved.         84


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXCullHierarchy

            Description:   Perform back-face culling on a hierarchy.



                 Object    Top-level object of hierarchy to back-face
                 cull

            Remarks:       Performs back-face culling on a hierarchy
                           starting at Object.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy






































            c 1996 Paul D. Nettle.  All Rights Reserved.         85


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDestroyImage

            Description:   Releases all resources used by an image
                           structure.



                 Image     Address of the image structure pointer

            Remarks:       The image structure's resources are first
                           released back to the system, and then the
                           image structure itself is freed and set to
                           NULL.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCreateImage




































            c 1996 Paul D. Nettle.  All Rights Reserved.         86


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDMalloc

            Description:   Allocate RAM from low DOS RAM (< 1Mb)



                 Size      Amount of memory to allocate

            Remarks:       This function uses DPMI to allocate RAM from
                           lower DOS RAM (below the first Mb).  This is
                           useful for transferring information between a
                           protected mode program and a real-mode DOS
                           interrupt routine.

            Return value:  Protected mode address of the allocated RAM
                           or NULL if failure.

            Compatibility: N/A

            See Also:      N/A



































            c 1996 Paul D. Nettle.  All Rights Reserved.         87


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDrawRenderList

            Description:   Renders a renderlist




                 RList     Render list to render
                 Cam       Camera to render from
                 SolidRenderers List of non-transparent rendering
                 routines
                 TransRenderers List of transparent rendering routines
                 VScreen   Virtual screen to render to

            Remarks:       Renders the scene contained in RList to the
                           VScreen from the viewpoint of Cam.  The
                           render list should be pre-sorted before
                           rendering (see SPDXByteSortRenderList).  Note
                           that the current virtual screen (see
                           SPDXSetCurrentVScreen) must be the same as
                           VScreen.

                           The two list of render functions are used to
                           choose which routines are used to render
                           transparent and non-transparent polygons.
                           The indexing used for these lists is built
                           from the available shading models and surface
                           types.  By default, the majority of these
                           routines are NULL, and only the supported
                           combinations are placed into their proper
                           indices into the list.  Here is a code sample
                           (taken from SPDXInitRenderer) for filling
                           these arrays:






















            c 1996 Paul D. Nettle.  All Rights Reserved.         88


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE























            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXByteSortRenderList SPDXSetCurrentVScreen





























            c 1996 Paul D. Nettle.  All Rights Reserved.         89


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDrawScreenLine

            Description:   Draws a line to the screen



                 X1, Y1    Starting X, Y of the line
                 X2, Y2    Ending X, Y of the line
                 Color     The color of the line

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A






































            c 1996 Paul D. Nettle.  All Rights Reserved.         90


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDrawScreenText

            Description:   Draws text directly to the screen



                 Font      Registered font structure
                 String    String to draw
                 X, Y      Upper left corner of the font rectangle

            Remarks:       Draws String directly to the screen in the
                           font VFONT at X, Y.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRegisterFont





































            c 1996 Paul D. Nettle.  All Rights Reserved.         91


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDrawVirtualLine

            Description:   Draws a line to a virtual screen



                 X1, Y1    Starting X, Y of the line
                 X2, Y2    Ending X, Y of the line
                 Color     The color of the line
                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.         92


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDrawVirtualText

            Description:   Draws text to a virtual screen



                 Font      Registered font structure
                 String    String to draw
                 X, Y      Upper left corner of the font rectangle
                 VScreen   Virtual screen

            Remarks:       Draws String to the virtual screen VScreen in
                           the font VFONT at X, Y.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRegisterFont




































            c 1996 Paul D. Nettle.  All Rights Reserved.         93


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXDumpMemLog

            Description:   Dumps a memory log to a file (SPANDEX.MEM)



            Remarks:       The following information is written to the
                           MEM file:

                                1.                                     Each currently allocated unit's
                                   address, length
                                2.                                     Each currently allocated unit's onwer
                                   file and line number (if DEBUG_FUNCS
                                   is set).
                                3.                                     Total memory in use at the moment the
                                   snapshot is taken.
                                4.                                     Total number of elements in use at
                                   the time the snapshot is taken.
                                5.                                     Maximum amount of memory ever used
                                   since the last call to SPDXInitMem.

                           The values of these counts are also verified
                           by backups to ensure that there are no
                           inconsistencies.

                           For a runtime report, use the function
                           SPDXGetMemReport.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitMem, SPDXGetMemReport






















            c 1996 Paul D. Nettle.  All Rights Reserved.         94


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFadePalettes

            Description:   Smoothly fade from one palette to another
                           over a series of frames.



                 From      Starting palette
                 To        Ending Palette
                 Step      Number of frames to fade through

            Remarks:       The fade will take place over Step frames,
                           though frame timings will not be consistent
                           across video cards and monitors.  The current
                           palette should be the same palette as From or
                           the palette will jump to those colors before
                           starting palette animation.  Note that on DOS
                           machines, when in video modes other than
                           320x200, the BIOS is used, since VESA does
                           not allow for setting the palette, and many
                           cards do not support standard palette
                           commands when in SVGA modes.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A



























            c 1996 Paul D. Nettle.  All Rights Reserved.         95


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindLightByName

            Description:   Locate an light by name



                 Name      Search key
                 CaseSense Case sensitivity flag (TRUE/FALSE)

            Remarks:       Lights are searched from the global light
                           list.  Several lights may share a name but
                           Spandex will only return the first occurrence
                           found with the given name.

            Return value:  Pointer to the found light, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      SPDXFindLightByNameLen



































            c 1996 Paul D. Nettle.  All Rights Reserved.         96


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindLightByNameLen

            Description:   Locate an object by name



                 Name      Search key
                 Len       Length of name
                 CaseSense Case sensitivity flag (TRUE/FALSE)

            Remarks:       Lights are searched from the global light
                           list.  Several lights may share a name but
                           Spandex will only return the first occurrence
                           found with the given name.  Several lights
                           may share a name but Spandex will only return
                           the first light found with the given name.

                           The Len parameter specifies the maximum
                           length of characters to match (this works
                           like strncmp and strnicmp).

            Return value:  Pointer to the found light, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      SPDXFindLightByName




























            c 1996 Paul D. Nettle.  All Rights Reserved.         97


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindMapByName

            Description:   Locate a map by name



                 Name      Search key

            Remarks:       Several maps may share a name but Spandex
                           will only return the first map found with the
                           given name.

            Return value:  Pointer to the found map, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.         98


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindMaterialByName

            Description:   Locate a material by name



                 Name      Search key

            Remarks:       Several materials may share a name but
                           Spandex will only return the first occurrence
                           found with the given name.

            Return value:  Pointer to the found material, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.         99


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindMemOwner

            Description:   Locate the owner of a block of allocated
                           memory



                 Address   Search key

            Remarks:       None.

            Return value:  Pointer to the owner string of a block of
                           memory (containing the source-code filename
                           of the procedure that allocated the memory.
                           If this block of RAM is invalid (or has not
                           been allocated by SPDXMalloc()) a NULL is
                           returned.

            Compatibility: N/A

            See Also:      SPDXMalloc, SPDXFree


































            c 1996 Paul D. Nettle.  All Rights Reserved.        100


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindObjectByName

            Description:   Locate an object by name



                 Name      Search key
                 Universe  Where to begin search
                 CaseSense Case sensitivity flag (TRUE/FALSE)

            Remarks:       Objects are searched starting at Object and
                           recursively searched through each child down
                           the tree.  Several objects may share a name
                           but Spandex will only return the first object
                           found with the given name.

            Return value:  Pointer to the found object, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      SPDXFindObjectByNameLen

































            c 1996 Paul D. Nettle.  All Rights Reserved.        101


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFindObjectByNameLen

            Description:   Locate an object by name



                 Name      Search key
                 Universe  Where to begin search
                 Len       Length of name
                 CaseSense Case sensitivity flag (TRUE/FALSE)

            Remarks:       Objects are searched starting at Object and
                           recursively searched through each child down
                           the tree.  The Len parameter specifies the
                           maximum length of characters to match (this
                           works like strncmp and strnicmp). Several
                           objects may share a name but Spandex will
                           only return the first object found with the
                           given name.

            Return value:  Pointer to the found object, or NULL if not
                           found.

            Compatibility: N/A

            See Also:      SPDXFindObjectByName





























            c 1996 Paul D. Nettle.  All Rights Reserved.        102


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXFlushBuffer

            Description:   Flush a buffer for a buffered file



                 Handle    File handle

            Remarks:       Flushes the buffer for a file

            Return value:  None.

            Compatibility: N/A

            See Also:      None.








































            c 1996 Paul D. Nettle.  All Rights Reserved.        103


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetBackgroundColor

            Description:   Returns the background color



            Remarks:       None.

            Return value:  Returns the background color set by
                           SPDXSetBackgroundColor.

            Compatibility: N/A

            See Also:      SPDXSetBackgroundColor









































            c 1996 Paul D. Nettle.  All Rights Reserved.        104


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetc

            Description:   Read a character from a file (buffered)



                 Handle    File handle

            Remarks:       Reads in a character from the file specified
                           by Handle (buffered).

            Return value:  Returns the value from SPDXRead.

            Compatibility: N/A

            See Also:      SPDXRead, SPDXPutc, SPDXOpen, SPDXClose







































            c 1996 Paul D. Nettle.  All Rights Reserved.        105


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetChild

            Description:   Returns the address of a child object



                 Parent    The requested child's parent
                 Index     The child's index into the parent's child
                 list

            Remarks:       The pointer returned is a pointer to the
                           actual child, not a copy.  So modifying any
                           structure elements in this structure directly
                           affect the child itself.

            Return value:  Returns a pointer to the child at index
                           Index.

            Compatibility: N/A

            See Also:      SPDXAddChild


































            c 1996 Paul D. Nettle.  All Rights Reserved.        106


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetChildCount

            Description:   Returns the number of children for an object



                 Parent    Parent object

            Remarks:       None.

            Return value:  Returns the number of children for Parent.

            Compatibility: N/A

            See Also:      SPDXAddChild, SPDXRemoveChild








































            c 1996 Paul D. Nettle.  All Rights Reserved.        107


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetClosestColor

            Description:   Returns the closest color index into a given
                           palette of an RGB triplet



                 Red       Red component of the RGB triplet
                 Green     Green component of the RGB triplet
                 Blue      Blue component of the RGB triplet
                 Palette   Palette to perform color matching

            Remarks:       None.

            Return value:  Returns the color index of a color in Palette
                           nearest to the given RGB triplet.

            Compatibility: N/A

            See Also:      N/A



































            c 1996 Paul D. Nettle.  All Rights Reserved.        108


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetCopyrightMessage

            Description:   Retrieves the Spandex copyright message



            Remarks:       The copyright message is formatted in the
                           following way:

               Spandex vX.XX Copyright 1994, 1995 Paul D. Nettle.  All
                                          rights reserved.

                           The copyright number is retrieved from
                           SPDXGetVersion.

            Return value:  The address of a string containing the
                           copyright message.  Note that this string is
                           volatile.

            Compatibility: N/A

            See Also:      SPDXGetVersion

































            c 1996 Paul D. Nettle.  All Rights Reserved.        109


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetDebugState

            Description:   Returns the current state of the debug flag
                           set.



            Remarks:       Spandex uses the first four bits of a 32-bit
                           value for internal use.  The remaining bits
                           are for developer use, and may be manipulated
                           freely.  The internal debug flags reserved
                           for Spandex are:

                                DEBUG_BASIC         0x1
                                DEBUG_MEM      0x2
                                DEBUG_MEMTRACE 0x4
                                DEBUG_FUNCS         0x8

                           DEBUG_BASIC refers to basic debugging
                           information (for example, memory leaks).

                           DEBUG_MEM refers to memory related
                           information (for example, details of each
                           memory leak).

                           DEBUG_MEMTRACE will cause the memory
                           allocation routines in Spandex to report on
                           every single allocation and free of memory
                           into the debug file.  This will cause a
                           dramatic slowdown to the application, but is
                           invaluable at times of need.

                           DEBUG_FUNCS will cause the filenames and
                           source line numbers to appear in the log file
                           when entries are logged.  It may be
                           advantageous not to have this information.

            Return value:  Returns the current state of the 32-bit debug
                           flag set.

            Compatibility: N/A

            See Also:      SPDXSetDebugState, SPDXSetDebugStateFromFile












            c 1996 Paul D. Nettle.  All Rights Reserved.        110


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetDistance2D

            Description:   Calculate the distance between two points.



                 Point1, 2 Points to calculate distance between.

            Remarks:       N/A

            Return value:  Returns the distance between Point1 and
                           Point2.

            Compatibility: N/A

            See Also:      SPDXGetDistance3D







































            c 1996 Paul D. Nettle.  All Rights Reserved.        111


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetDistance3D

            Description:   Calculate the distance between two points in
                           3-space.



                 Point1, 2 Points to calculate distance between.

            Remarks:       N/A

            Return value:  Returns the distance between Point1 and
                           Point2 in 3-space.

            Compatibility: N/A

            See Also:      SPDXGetDistance2D






































            c 1996 Paul D. Nettle.  All Rights Reserved.        112


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetErrorString

            Description:   Returns the English string of an error code.



                 ErrorCode Error code to translate

            Remarks:       Translates ErrorCode to an English String.

            Return value:  Returns a pointer to the string that
                           represents an English description of
                           ErrorCode.  Note that modifying this string
                           will permanently modify the string for all
                           subsequent calls for ErrorCode.

            Compatibility: N/A

            See Also:      None.




































            c 1996 Paul D. Nettle.  All Rights Reserved.        113


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetFatalErrors

            Description:   Returns the current flag for fatal errors.



            Remarks:       N/A

            Return value:  Returns the current value of the fatal errors
                           flag.

            Compatibility: N/A

            See Also:      SPDXSetFatalErrors









































            c 1996 Paul D. Nettle.  All Rights Reserved.        114


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetFileType

            Description:   Translate a filename to an image type



                 Name      Filename

            Remarks:       This function does not actually open the file
                           and interrogate it.  It simply looks at the
                           extension (last 3 characters only) and
                           returns one of the following:  IMAGETYPE_IMG,
                           IMAGETYPE_GIF, IMAGETYPE_G24, IMAGETYPE_TGA,
                           IMAGETYPE_BMP, IMAGETYPE_IPI or
                           IMAGETYPE_PCX.

            Return value:  One of the above listed types or
                           IMAGETYPE_UNKNOWN.

            Compatibility: N/A

            See Also:      N/A

































            c 1996 Paul D. Nettle.  All Rights Reserved.        115


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetGlobalResolution

            Description:   Returns the resolution of the output display
                           device.



                 ResX, ResY     Width and height of the display are
                 stored here

            Remarks:       Spandex uses these values to determine the
                           resolution of output display device.

            Return value:  Returns the width and height of the display
                           in ResX, ResY.

            Compatibility: N/A

            See Also:      SPDXSetGlobalResolution




































            c 1996 Paul D. Nettle.  All Rights Reserved.        116


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLightCount

            Description:   Returns the light count of a light list



                 Light     List of lights to count

            Remarks:       N/A

            Return value:  Returns the Count variable from Light
                           structure (type LLS).

            Compatibility: N/A

            See Also:      N/A







































            c 1996 Paul D. Nettle.  All Rights Reserved.        117


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLightIntensity

            Description:   Returns the intensity of a light.



                 Light     Light to retrieve intensity from

            Remarks:       The intensity of a light specifies how much
                           light it produces.  Intensity values may
                           range from 0.0 to 1.0.  The value may range
                           higher than 1.0, but make sure you understand
                           the details behind the lighting calculations.

            Return value:  Intensity for Light

            Compatibility: N/A

            See Also:      SPDXSetLightIntensity




































            c 1996 Paul D. Nettle.  All Rights Reserved.        118


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLightLocal

            Description:   Returns the local location of a point light



                 Light     Light to receive the local location

            Remarks:       The local location represents the location of
                           a light relative to its parent.

            Return value:  The local location of Light.

            Compatibility: N/A

            See Also:      SPDXSetLightLocal







































            c 1996 Paul D. Nettle.  All Rights Reserved.        119


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLightName

            Description:   Returns the name of a light



                 Light     Light to retrieve new name from

            Remarks:       Returns the name of a light.

            Return value:  Returns a pointer to the name string within
                           the light itself.  Modifying this string will
                           directly affect the light.

            Compatibility: N/A

            See Also:      SPDXSetLightName






































            c 1996 Paul D. Nettle.  All Rights Reserved.        120


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLoggedErrors

            Description:   Returns the current value for the error
                           logging flag.



            Remarks:       N/A

            Return value:  Returns the current value for the error
                           logging flag.

            Compatibility: N/A

            See Also:      SPDXSetLoggedErrors








































            c 1996 Paul D. Nettle.  All Rights Reserved.        121


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetLoggedStrings

            Description:   Returns the current value for the string
                           logging flag.



            Remarks:       N/A

            Return value:  Returns the current value for the string
                           logging flag.

            Compatibility: N/A

            See Also:      SPDXSetLoggedStrings








































            c 1996 Paul D. Nettle.  All Rights Reserved.        122


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialAmbientLight

            Description:   Returns the amount of ambient light for an
                           object.



                 Material  Material to retrieve the ambient light from

            Remarks:       None.

            Return value:  Returns the amount of ambient light for
                           Material.

            Compatibility: N/A

            See Also:      SPDXSetMaterialAmbientLight






































            c 1996 Paul D. Nettle.  All Rights Reserved.        123


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialAmbientReflectCoefficient

            Description:   Returns the Ka value for a material



                 Material  Material to retrieve the Ka value from

            Remarks:       Ka (the ambient light reflect coefficient) is
                           a common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the ambient light
                           applied to any face using Material actually
                           affects the face.  The values for Ka can only
                           range from 0.0 (no ambient light is applied)
                           to 1.0 (all available ambient light is
                           applied).

            Return value:  Returns Ka for Material.

            Compatibility: N/A

            See Also:      SPDXSetMaterialAmbientReflectCoefficient
































            c 1996 Paul D. Nettle.  All Rights Reserved.        124


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialBumpMap

            Description:   Returns a pointer to the bump map of a
                           material.



                 Material  Material to retrieve the bump map from

            Remarks:       None.

            Return value:  Returns a pointer to the bump map of
                           Material. Modifying this structure will
                           directly affect the materials using it.

            Compatibility: N/A

            See Also:      SPDXSetMaterialBumpMap





































            c 1996 Paul D. Nettle.  All Rights Reserved.        125


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialColor

            Description:   Returns the base color of the material



                 Material  Material to retrieve the color from

            Remarks:       None.

            Return value:  Returns the color for Material

            Compatibility: N/A

            See Also:      SPDXSetMaterialColor








































            c 1996 Paul D. Nettle.  All Rights Reserved.        126


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialDiffuseReflectCoefficient

            Description:   Returns the Ka value for an object



                 Material  Material to retrieve the Ka value from

            Remarks:       Kd (the diffuse light reflect coefficient) is
                           a common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the diffuse light
                           applied to any face using Material actually
                           affects the face.  The values for Kd can only
                           range from 0.0 (no diffuse light is applied)
                           to 1.0 (all available diffuse light is
                           applied).

            Return value:  Returns Ka for Material.

            Compatibility: N/A

            See Also:      SPDXSetMaterialDiffuseReflectCoefficient
































            c 1996 Paul D. Nettle.  All Rights Reserved.        127


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialName

            Description:   Returns the name of the material



                 Material  Material to retrieve the name from

            Remarks:       Modifying this string will directly affect
                           the object.

            Return value:  Returns the name for Material

            Compatibility: N/A

            See Also:      SPDXSetMaterialName







































            c 1996 Paul D. Nettle.  All Rights Reserved.        128


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialShineCoefficient

            Description:   Returns the shine value for a material



                 Material  Material to retrieve the shine value from

            Remarks:       The shine coefficient is a common rendering
                           variable from the standard rendering
                           equations for Phong and Gouraud.  It
                           essentially specifies the size of the
                           specular reflection.  Larger values produce a
                           much smaller specular reflection.  This
                           effectively increases the shininess of a
                           surface.  In theory, a value of infinity
                           would represent an infinitely shiny surface,
                           and hence produce an infinitely small
                           reflection of a point light source.  Within
                           Spandex, the value for shine may range from
                           0.0 to 10,000.0.

            Return value:  Returns the shine value for Material.

            Compatibility: N/A

            See Also:      SPDXSetMaterialShineCoefficient




























            c 1996 Paul D. Nettle.  All Rights Reserved.        129


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                          SPDXGetMaterialSpecularReflectCoefficient

            Description:   Returns the Ks value for a material



                 Material  Material to retrieve the Ks value from

            Remarks:       Ks (the specular reflect coefficient) is a
                           common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the specular
                           reflection applied to an object actually
                           affects the surface.  The values for Ks can
                           only range from 0.0 (no specular reflection
                           is applied) to 1.0 (all available specular
                           reflection is applied).  Specular reflections
                           are also commonly referred to as _specular
                           highlights._

            Return value:  Returns Ks for Material.

            Compatibility: N/A

            See Also:      SPDXSetMaterialSpecularReflectCoefficient






























            c 1996 Paul D. Nettle.  All Rights Reserved.        130


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialSurface

            Description:   Returns the surface type for an object



                 Material  Material to retrieve the surface type from

            Remarks:       The surface type directly modifies the
                           appearance of an object rendered in 3D.  Here
                           is a brief description of the different
                           surface types:

                                SOLID      Polygons in an object have a
                                           constant surface color.
                                TEXTURED   Polygons in an object have a
                                           bitmap (texture) projected
                                           onto them during rendering.
                                           This is what allows an object
                                           to `look like wood', for
                                           example.
                                ENVMAP     Polygons in an object have a
                                           bitmap (texture) reflected
                                           onto them during rendering.
                                           This is what allows an object
                                           to look like `chrome', for
                                           example.

            Return value:  Returns the surface type for Material

            Compatibility: N/A

            See Also:      SPDXSetMaterialSurface






















            c 1996 Paul D. Nettle.  All Rights Reserved.        131


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialTexture

            Description:   Returns the texture address of a material



                 Material  Material to retrieve the texture from

            Remarks:       Modifying the structure returned from this
                           routine will directly modify the material.

            Return value:  Returns the pointer to Material's texture.

            Compatibility: N/A

            See Also:      SPDXSetMaterialTexture







































            c 1996 Paul D. Nettle.  All Rights Reserved.        132


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMaterialTransparency

            Description:   Gets the object transparency flag from a
                           material



                 Material  Material to retrieve the transparency flag
                 from

            Remarks:       Transparency mapping allows objects to become
                           semi-opaque (or transparent).

            Return value:  Returns the transparency flag.

            Compatibility: N/A

            See Also:      SPDXSetMaterialTransparency





































            c 1996 Paul D. Nettle.  All Rights Reserved.        133


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMemReport

            Description:   Returns a memory report structure.



                 MemReport Structure that gets filled with memory report
                 information.

            Remarks:       Populates the MemReport structure with the
                           following information:
                                1.                                     Initialization flag
                                2.                                     Maximum memory ever used since last
                                   call to SPDXInitMem
                                3.                                     Total memory in use
                                4.                                     Total number of memory elements in
                                   use

                           The SPDXDumpMemLog function can be used to
                           get more information regarding memory usage.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitMem, SPDXDumpMemLog





























            c 1996 Paul D. Nettle.  All Rights Reserved.        134


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetMode

            Description:   Returns the current mode number



                 ModeNumber     Variable to receive the mode number.

            Remarks:       Returns the current mode number.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSetMode








































            c 1996 Paul D. Nettle.  All Rights Reserved.        135


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetNearZ

            Description:   Returns the near-z (hither) clipping plane
                           distance.



            Remarks:       Note that the default near-z clipping
                           distance is 20.0.

            Return value:  Returns the near-z clipping plane distance
                           from the camera.

            Compatibility: N/A

            See Also:      SPDXSetNearZ







































            c 1996 Paul D. Nettle.  All Rights Reserved.        136


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectCount

            Description:   Retrieves the count from an object list (OBL)



                 Object    Pointer to the object list

            Remarks:       None.

            Return value:  Returns the count from the object list (OBL).

            Compatibility: N/A

            See Also:      N/A








































            c 1996 Paul D. Nettle.  All Rights Reserved.        137


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectDevUse

            Description:   Returns the developer variables for an object



                 Object    Object to retrieve the new developer
                 variables from
                 Index     Index of the Developer Use variable

            Remarks:       Each object contains an array of
                           DEV_USE_COUNT variables.  These are of type
                           INT, and may be casted to any other 32-bit
                           type (void * for example).  Spandex has no
                           internal use for this data.

            Return value:  Returns the 32-bit developer use variable

            Compatibility: N/A

            See Also:      SPDXSetObjectDevUse, SPDXSetObjectType,
                           SPDXGetObjectType

































            c 1996 Paul D. Nettle.  All Rights Reserved.        138


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectDirection

            Description:   Returns the direction vector for an object.



                 Object    Object to retrieve the direction vector from

            Remarks:       Each object contains a vector for maintaining
                           the direction of an object.  This can be used
                           for a number of purposes, one of which is
                           movement along its _facing direction._

            Return value:  Pointer to the direction vector within
                           Object. Modifying this vector will directly
                           affect the object.

            Compatibility: N/A

            See Also:      SPDXSetObjectDirection



































            c 1996 Paul D. Nettle.  All Rights Reserved.        139


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectDrawFlags

            Description:   Returns the drawing (rendering) flags for an
                           object.



                 Object    Object to retrieve the draw flags from

            Remarks:       The draw flags specify what properties of an
                           object are visible (rendered).

            Return value:  Returns a byte containing the following
                           values:
                                DRAW_TRIS
                                DRAW_QUADS
                                DRAW_POINTS
                                DRAW_ALL
                                DRAW_NONE

            Compatibility: N/A

            See Also:      SPDXSetObjectDrawFlags
































            c 1996 Paul D. Nettle.  All Rights Reserved.        140


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectLense

            Description:   Retrieve the lense size from an object



                 Object    Object to retrieve the lense from

            Remarks:       The lense of an object is the lense size (in
                           millimeters) used to calculate the FOV (field
                           of vision) for a given camera.  The default
                           Lense size is 48.23529.

            Return value:  Current Lense for an object.

            Compatibility: N/A

            See Also:      SPDXSetObjectLense





































            c 1996 Paul D. Nettle.  All Rights Reserved.        141


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectLocal

            Description:   Returns the local location of an object



                 Object    Object to retrieve the local location from

            Remarks:       The local location represents the location of
                           an object relative to its parent.

            Return value:  Returns a pointer to the Local Location
                           structure within Object. Modifying this
                           structure will directly affect the object.

            Compatibility: N/A

            See Also:      SPDXSetObjectLocal, SPDXGetObjectWorld,
                           SPDXSetObjectWorld




































            c 1996 Paul D. Nettle.  All Rights Reserved.        142


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectName

            Description:   Returns the name of the object.



                 Object    Object to retrieve the name from

            Remarks:       Modifying this string will directly affect
                           the object.

            Return value:  Returns a pointer to the name string within
                           the object itself.

            Compatibility: N/A

            See Also:      SPDXSetObjectName






































            c 1996 Paul D. Nettle.  All Rights Reserved.        143


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectShadeModel

            Description:   Returns the shade model for an object



                 Object    Object to retrieve the shading model from

            Remarks:       The shading model directly modifies the
                           appearance of an object rendered in 3D.  Here
                           is a brief description of the different
                           shading models:

                                AMBIENT - objects are not shaded
                                      according to individual lights.
                                      They are shaded according to the
                                      ambient light value for the
                                      object.
                                LAMBERT - objects are shaded at the
                                      polygon level according to
                                      individual lights.  Entire
                                      polygons maintain a consistent
                                      shade across the surface, giving
                                      the object a _faceted_ look.
                                GOURAUD - objects are shaded at the
                                      vertex level according to
                                      individual lights.  This shading
                                      model calculates the shade of each
                                      vertex, then smoothly shades the
                                      polygon from vertex to vertex
                                      using linear interpolation.
                                PHONG - objects are shaded at the pixel
                                      level according to a global Phong
                                      map.  This map is used as an
                                      intensity modifier for each pixel
                                      on surface of the object as it is
                                      rendered.
                                BUMP - objects are shaded using PHONG
                                     shading, with an additive bump map
                                     to give the appearance of a rough
                                     or bumpy surface.  The bump map
                                     determines the look of the surface.

            Return value:  Returns the shade model for Object

            Compatibility: N/A

            See Also:      SPDXSetObjectShadeModel







            c 1996 Paul D. Nettle.  All Rights Reserved.        144


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectShowBacks

            Description:   Returns the back-face culling flag for an
                           object



                 Object    Object to retrieve the show backs flag from

            Remarks:       Back-face culling prevents geometric faces
                           that make up the shape of an object from
                           being drawn when they are facing away from
                           the camera.  This is done since, with most
                           closed objects, you cannot ever see a face
                           from it's back side (unless transparent).  If
                           an object is left open, faces may be seen
                           from the back-side.  If this is desirable,
                           you will need to enable the _show backs_ flag
                           for the object.

            Return value:  Returns the show backs flag for Object.

            Compatibility: N/A

            See Also:      SPDXGetObjectShowBacks






























            c 1996 Paul D. Nettle.  All Rights Reserved.        145


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectSteadyOrientation

            Description:   Returns the steady rotation of an object



                 Object    Object to retrieve the steady rotation from

            Remarks:       Each object may have a steady (constant)
                           rotation applied to it.  Each time through
                           the rendering pipeline, the object will get
                           rotated by the specified amount in the steady
                           rotation structure for the object.  For
                           certain applications, it may be desirable to
                           apply a constant rotation to an object or set
                           of objects and not worry about them again.

            Return value:  Returns a pointer to the steady rotation
                           structure in the object. Modifying this
                           structure will directly affect the object.

            Compatibility: N/A

            See Also:      SPDXSetObjectSteadyRotation, SPDXRotateObject































            c 1996 Paul D. Nettle.  All Rights Reserved.        146


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectTriCount

            Description:   Returns a count of the polygons in an object



                 Object    Object containing polygon geometry

            Remarks:       N/A

            Return value:  Returns the polygon count for Object

            Compatibility: N/A

            See Also:      SPDXAddObjectTri








































            c 1996 Paul D. Nettle.  All Rights Reserved.        147


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectType

            Description:   Returns the type of an object



                 Object    Object to retrieve the type from

            Remarks:       The type variable is stored in the object for
                           the developer only.  Spandex has no internal
                           use for this value.

            Return value:  Type for Object.

            Compatibility: N/A

            See Also:      SPDXSetObjectType, SPDXGetObjectDevUse,
                           SPDXSetObjectDevUse





































            c 1996 Paul D. Nettle.  All Rights Reserved.        148


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectVertexCount

            Description:   Returns a count of the vertices in an object



                 Object    Object containing vertices to count

            Remarks:       N/A

            Return value:  Returns the vertex count for Object

            Compatibility: N/A

            See Also:      SPDXAddObjectVertex








































            c 1996 Paul D. Nettle.  All Rights Reserved.        149


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetObjectWorld

            Description:   Returns the world location of an object



                 Object    Object to retrieve the world location from

            Remarks:       The world location represents the location of
                           an object relative to the camera in world
                           space.

            Return value:  Returns a pointer to the World Location
                           structure within Object. Modifying this
                           structure will directly affect the object.

            Compatibility: N/A

            See Also:      SPDXSetObjectWorld, SPDXGetObjectLocal,
                           SPDXSetObjectLocal



































            c 1996 Paul D. Nettle.  All Rights Reserved.        150


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetPalette

            Description:   Returns the palette for the display device



                 Start     Starting palette entry to modify
                 Count     Number of palette entries to modify
                 Palette   Palette buffer

            Remarks:       The display device's palette is retrieved,
                           and the contents are placed into Palette.
                           The palette is retrieved starting at the
                           Start palette entry for Count colors using
                           the BIOS.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetPalette


































            c 1996 Paul D. Nettle.  All Rights Reserved.        151


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetPointCount

            Description:   Returns the count of the number of points in
                           a point list



                 PList     Point list

            Remarks:       N/A

            Return value:  Returns the Count variable from the point
                           list (type PLS)

            Compatibility: N/A

            See Also:      N/A






































            c 1996 Paul D. Nettle.  All Rights Reserved.        152


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetPointVertex

            Description:   Returns the vertex location of a point



                 Object    Object that contains points to be modified
                 Index     Index of the point

            Remarks:       N/A

            Return value:  Returns a pointer to the point located at
                           index Index in Object. Modifying this vertex
                           will directly affect the object.

            Compatibility: N/A

            See Also:      SPDXGetPointVertex





































            c 1996 Paul D. Nettle.  All Rights Reserved.        153


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetRenderList

            Description:   Returns a pointer to the global render list



            Remarks:       There is only one render list per session of
                           Spandex (only one session allowed per DOS
                           session).  Spandex allows the developers to
                           add functionality to the rendering pipeline,
                           and also allows developers to directly modify
                           the render list by adding to or removing from
                           it.  This extends the flexibility of Spandex
                           tremendously.  Be cautious when modifying the
                           render list.  Polygons in the render list
                           must be fully clipped (to the viewing
                           frustrum and to the screen) before they may
                           be drawn.

            Return value:  Global render list.

            Compatibility: N/A

            See Also:      N/A































            c 1996 Paul D. Nettle.  All Rights Reserved.        154


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetScreenPixel

            Description:   Returns the color of a pixel at given x, y.



                 X, Y      Location on screen of pixel

            Remarks:       N/A

            Return value:  Returns the color of the pixel at X, Y.

            Compatibility: N/A

            See Also:      SPDXSetScreenPixel








































            c 1996 Paul D. Nettle.  All Rights Reserved.        155


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetSVGAInfo

            Description:   Returns Super VGA information from the VESA
                           VBE



                 SVGAInfoStruct Contains the SVGA information
                 ModeNumber     SVGA mode

            Remarks:       For complete VESA VBE information, please
                           contact VESA.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXGetVESAInfo





































            c 1996 Paul D. Nettle.  All Rights Reserved.        156


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetTriDistance

            Description:   Calculate the distance between a point in 3-
                           space and the center of a triangle.



                 Triangle  Used in distance calculation
                 FromWhere Used in distance calculation

            Remarks:       Distance is calculated from the center of
                           mass for Triangle to FromWhere.

            Return value:  Distance from Triangle to FromWhere in fixed-
                           point.

            Compatibility: N/A

            See Also:      N/A




































            c 1996 Paul D. Nettle.  All Rights Reserved.        157


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetTriNormal

            Description:   Returns the normal for a TRI



                 Object    Object that contains triangle geometry
                 Index     Which triangle to modify
                 Normal    Vector that receives the triangle's normal

            Remarks:       Updates Normal with the values from triangle
                           at Index in Object.  These values are copied
                           from the triangle.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetTriNormal




































            c 1996 Paul D. Nettle.  All Rights Reserved.        158


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetTriNormalFromOrientation

            Description:   Calculate a triangle normal (unit vector)
                           based on vertex.



                 Triangle  Triangle to manipulate
                 Vector    Vector within triangle

            Remarks:       Using Vector, a unit normal is calculated for
                                Triangle.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.        159


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetTriVertices

            Description:   Returns the vertices for a TRI



                 Object    Object that contains triangle geometry
                 Index     Which triangle to modify
                 V1,V2,V3  Vertices that receive the triangle's vertices

            Remarks:       Updates V1, V2 and V3 with the values from
                           triangle at Index in Object.  These values
                           are copied from the triangle.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetTriVertices




































            c 1996 Paul D. Nettle.  All Rights Reserved.        160


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVersion

            Description:   Returns the current Spandex version.



            Remarks:       None.

            Return value:  Returns the current Spandex version number in
                           fixed pioint.

            Compatibility: N/A

            See Also:      SPDXGetCopyrightMessage









































            c 1996 Paul D. Nettle.  All Rights Reserved.        161


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVertex

            Description:   Returns a vertex from an object



                 Object    Object to retrieve the vertex from
                 Index     Which vertex to modify

            Remarks:       N/A

            Return value:  Returns the address of the vertex at Index in
                           Object. Modifying this vertex will directly
                           affect the object.

            Compatibility: N/A

            See Also:      SPDXSetVertex





































            c 1996 Paul D. Nettle.  All Rights Reserved.        162


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVESAInfo

            Description:   Retrieves the VESA VBE information structure



                 VESAInfoStruct  Structure to hold VESA VBE information.

            Remarks:       For complete VESA VBE information, please
                           contact VESA.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXGetSVGAInfo







































            c 1996 Paul D. Nettle.  All Rights Reserved.        163


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVideoWindow

            Description:   Returns the VESA video window.



                 WindowFlag     Window number
                 WindowPos Window position (in granularity units)

            Remarks:       For complete VESA VBE information, please
                           contact VESA.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSetVideoWindow






































            c 1996 Paul D. Nettle.  All Rights Reserved.        164


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualBuffer

            Description:   Returns the buffer address for a virtual
                           screen



                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  Returns the address of the buffer within a
                           virtual screen.

            Compatibility: N/A

            See Also:      SPDXSetVirtualBuffer






































            c 1996 Paul D. Nettle.  All Rights Reserved.        165


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualCenter

            Description:   Returns the center point of a virtual screen



                 CenterX, CenterY    Where to store the center point
                 VScreen        Virtual screen

            Remarks:       None.

            Return value:  Returns the center point of the virtual
                           screen.

            Compatibility: N/A

            See Also:      SPDXSetVirtualCenter






































            c 1996 Paul D. Nettle.  All Rights Reserved.        166


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualClipping

            Description:   Sets the clipping values for the virtual
                           screen




                 Left      Where to store the left-edge of the clipping
                 rectangle
                 Top       Where to store the top-edge of the clipping
                 rectangle
                 Right     Where to store the right-edge of the clipping
                 rectangle
                 Bottom    Where to store the bottom-edge of the
                 clipping rectangle
                 VScreen   Virtual screen to retrieve the clipping
                 rectangle from

            Remarks:       The clipping rectangle denotes the inner
                           extents of the clipping region (anything
                           outside of this region is clipped).  If the
                           clipping region is set to (0,0) - (10,10)
                           then pixels at (10,10) will be rendered, but
                           not at (11,10) or (10,11).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetVirtualClipping
























            c 1996 Paul D. Nettle.  All Rights Reserved.        167


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualfResolution

            Description:   Returns the fixed-point resolution of a
                           virtual screen



                 ResX, ResY     Where to store the resolution
                 VScreen   Virtual screen

            Remarks:       None.

            Return value:  Returns the fixed-point resolution in ResX
                           and ResY.

            Compatibility: N/A

            See Also:      SPDXGetVirtualiResolution,
                           SPDXSetVirtualResolution




































            c 1996 Paul D. Nettle.  All Rights Reserved.        168


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualiResolution

            Description:   Returns the integer resolution of a virtual
                           screen



                 ResX, ResY     Where to store the resolution
                 VScreen   Virtual screen

            Remarks:       None.

            Return value:  Returns the integer resolution in ResX and
                           ResY.

            Compatibility: N/A

            See Also:      SPDXGetVirtualfResolution,
                           SPDXSetVirtualResolution




































            c 1996 Paul D. Nettle.  All Rights Reserved.        169


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualMaxPolysToRender

            Description:   Limits the number of polygons rendered for a
                           single scene.



                 VScreeen  Virtual screen

            Remarks:       Polygon counts are the biggest cause of slow
                           rendering.  By reducing the polygon count,
                           you see less but run faster.  This enables
                           Spandex to limit the maximum number of
                           polygons to render to the screen.  All
                           polygons are still run through the entire
                           rendering pipeline, but are just not drawn.
                           The polygons that are skipped are the
                           furthest polygons from the camera.

            Return value:  The maximum polygon limit for VScreen.

            Compatibility: N/A

            See Also:      SPDXSetVirtaualMaxPolysToRender































            c 1996 Paul D. Nettle.  All Rights Reserved.        170


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualPixel

            Description:   Returns the color of a pixel at given x, y on
                           a virtual screen.



                 X, Y      Location on screen of pixel
                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  Returns the color of the pixel at X, Y on a
                           virtual screen.

            Compatibility: N/A

            See Also:      SPDXSetVirtualPixel





































            c 1996 Paul D. Nettle.  All Rights Reserved.        171


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualScaleFactors

            Description:   Returns the scale factors for a virtual
                           screen.



                 ScaleX, ScaleY Where to store X and Y scale factors for
                                3D projection
                 VScreen        Virtual screen to affect

            Remarks:       The scale factors are used to modify the
                           viewing angle of a 3-dimensional scene.  If
                           different values are used for the X and Y
                           scale factors, a pixel ratio will be
                           affected.

            Return value:  Returns the scale factors for VScreen.

            Compatibility: N/A

            See Also:      SPDXSetVirtualScreenFactors

































            c 1996 Paul D. Nettle.  All Rights Reserved.        172


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXGetVirtualZBuffer

            Description:   Returns the z-buffer address for a virtual
                           screen



                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  Returns the address of the buffer within a
                           virtual screen.

            Compatibility: N/A

            See Also:      SPDXSetVirtualZBuffer,
                           SPDXClearVirtualZBuffer





































            c 1996 Paul D. Nettle.  All Rights Reserved.        173


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInheritObject

            Description:   Causes Child to gain properties from Parent.



                 Parent    Parent object
                 Child     Child Object to receive new properties

            Remarks:       Child receives all values from the parent (a
                           copy is made) except lists of Lights,
                           Triangles, Vertices, Points and Children.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMakeObjectDefault





































            c 1996 Paul D. Nettle.  All Rights Reserved.        174


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInit

            Description:   Initialize the Spandex sub-system.



            Remarks:       Note that the services must be opened before
                           Spandex may be initialized (see
                           SPDXOpenServices).  Initializing Spandex
                           consists of many steps.  They are (in the
                           following order):

                                1.                                     Initialize the zero-memory area for
                                   use in detection of NULL pointer bugs
                                   (see SPDXUninit).
                                2.                                     Resets the error file (see
                                   SPDXResetErrorFile).
                                3.                                     Globals are initialized (see
                                   SPDXInitGlobals).
                                4.                                     Memory Manager is initialized (see
                                   SPDXInitMem).
                                5.                                     Tables are initialized (see
                                   SPDXInitTables).
                                6.                                     The screen is initialized (see
                                   SPDXInitScreen).
                                7.                                     The initialization flag is set.
                                8.                                     If the UseIRQ flag is set in the
                                   SPDXGlobals structure, then
                                   interrupts are initialized (see
                                   SPDXInitializeInterrupts).
                                9.                                     The renderer is initialized (see
                                   SPDXInitRenderer).
                                10.                                      VESA information is loaded (see
                                   SPDXGetVESAInfo).

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXOpenServices, SPDXUninit,
                           SPDXResetErrorFile, SPDXInitGlobals,
                           SPDXInitMem, SPDXInitTables, SPDXInitScreen,
                           SPDXInitializeInterrupts, SPDXInitRenderer,
                           SPDXGetVESAInfo











            c 1996 Paul D. Nettle.  All Rights Reserved.        175


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitByteSortStack

            Description:   Initialize the byte-sorting stack



            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXByteSortRenderList










































            c 1996 Paul D. Nettle.  All Rights Reserved.        176


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitGlobals

            Description:   Initializes the SPDXGlobals structure



            Remarks:       The SPDXGlobals structure contains all
                           globals for the entire system.
                           Initialization simply consists of setting the
                           entire structure to zeros, allocating
                           necessary LOW DOS ram and setting the debug
                           flags from the debug flags file
                           (SPANDEX.DBG).  Note that the SPDXInitTables
                           routine must be called to initialize the
                           global tables.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCleanupGLobals, SPDXInitTables


































            c 1996 Paul D. Nettle.  All Rights Reserved.        177


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitializeInterrupts

            Description:   Initialize the vertical blank interrupt
                           handler.



            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXResetInterrupts









































            c 1996 Paul D. Nettle.  All Rights Reserved.        178


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitMaps

            Description:   Initialize the texture maps used for
                           rendering



            Remarks:       Any existing texture maps are removed from
                           memory, and memory is allocated for the
                           palette and transparency tables.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXCleanupMaps







































            c 1996 Paul D. Nettle.  All Rights Reserved.        179


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitMaterials

            Description:   Remove all materials from the global material
                           list and prepares them for usage.



            Remarks:       The materials are stored in a global material
                           list for the sake of speed during rendering.
                           Use this function with care to remove all
                           materials from this global list.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXCleanupMaterials, SPDXAddMaterial






































            c 1996 Paul D. Nettle.  All Rights Reserved.        180


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitMem

            Description:   Initialize the memory manager within Spandex.



            Remarks:       If the memory manager has already been
                           initialized, it is first de-initialized, then
                           re-initialized.  The memory manager allocates
                           all needed memory for its internal tracking
                           and other internal initialization is
                           performed.  This function must be called
                           before any of the memory functions may be
                           used (i.e. SPDXMalloc, SPDXFree,
                           SPDXDumpMemLog, SPDXGetMemReport).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXUninitMem, SPDXMalloc, SPDXFree,
                           SPDXDumpMemLog, SPDXGetMemReport

































            c 1996 Paul D. Nettle.  All Rights Reserved.        181


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitMouse

            Description:   Initialize the mouse handler.



            Remarks:       The initialization routine first checks for
                           the availability of a mouse driver, and if
                           present, initializes the driver and sets the
                           mouse range to a default of ROT_POINTS and
                           positions the mouse at ROT_POINTS/2.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXUninitMouse






































            c 1996 Paul D. Nettle.  All Rights Reserved.        182


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitRenderer

            Description:   Initialize the Spandex renderer



            Remarks:       Used by SPDXInit to initialize the renderer

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXUninitRenderer, SPDXInit










































            c 1996 Paul D. Nettle.  All Rights Reserved.        183


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitScreen

            Description:   Initialize screen parameters



            Remarks:       This function should only be called at
                           startup initialization (called from within
                           SpandexInit).

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      N/A








































            c 1996 Paul D. Nettle.  All Rights Reserved.        184


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitTables

            Description:   Initialize global tables



            Remarks:       The SPDXGlobals references two tables that
                           need to be initialized (other tables require
                           setup from external information such as a MAP
                           file).  These two tables are the sine/cosine
                           table and the default phong table.  The
                           default phong table is set to a single
                           smoothly shaded light-source centered in the
                           camera's view.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXInitGlobals, SPDXReplacePhongMap



































            c 1996 Paul D. Nettle.  All Rights Reserved.        185


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXInitVirtualScreen

            Description:   Initialize and create a virtual screen



                 ResX, ResY     Resolution of the virtual screen
                 VScreen   Virtual screen to initialize

            Remarks:       Use SPDXInitVirtualScreen to allocate a
                           buffer for the virtual screen, setup it's
                           scanline table and initialize the resolution,
                           clipping and scale factors to defaults.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSetCurrentVScreen,
                           SPDXCleanupVirtualScreen



































            c 1996 Paul D. Nettle.  All Rights Reserved.        186


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXint86

            Description:   Perform a real-mode software interrupt
                           (without segment register passing).



                 intno     Interrupt number
                 InputRegs Input registers
                 OutputRegs     Output registers

            Remarks:       This function uses DPMI to perform a real-
                           mode DOS software interrupt.  This function
                           works the same as the traditional int86 call.
                           Note that for passing memory between your
                           protected mode program and the DOS interrupt
                           routine, you will need to allocate low DOS
                           RAM (see SPDXDMalloc).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXDMalloc, SPDXint86x































            c 1996 Paul D. Nettle.  All Rights Reserved.        187


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXint86x

            Description:   Perform a real-mode software interrupt (with
                           segment register passing).




                 intno     Interrupt number
                 InputRegs Input registers
                 OutputRegs     Output registers
                 sregs     Segment registers

            Remarks:       This function uses DPMI to perform a real-
                           mode DOS software interrupt.  This function
                           works the same as the traditional int86 call.
                           Note that for passing memory between your
                           protected mode program and the DOS interrupt
                           routine, you will need to allocate low DOS
                           RAM (see SPDXDMalloc).

            Return value:  None.

            Compatibility: N/A

            See Also:      DMalloc SPDXint86





























            c 1996 Paul D. Nettle.  All Rights Reserved.        188


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMakeMatrixFromVector

            Description:   Creates a rotation matrix from a given vector
                           and bank



                 Vector    Input Vector
                 Bank      Amount of bank angle (roll)
                 Matrix    Where to store the rotation matrix

            Remarks:       Given a vector and a bank angle this routine
                           will produce a rotation matrix that may be
                           applied directly to an object.  This is
                           especially handy when trying to force an
                           object or the camera to face a specific
                           direction.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A
































            c 1996 Paul D. Nettle.  All Rights Reserved.        189


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXMakeObjectDefault

            Description:   Sets all object values to default



                 Object    Object to set to default values

            Remarks:       First fills the object memory with zeros,
                           then places the following values into the
                           object:

                           1.                                Drawflags = DRAW_ALL
                           2.                                Ka = 1.0
                           3.                                Kd = 1.0
                           4.                                Ks = 1.0
                           5.                                Shine = 1.0
                           6.                                Direction = (0,0,1.0)
                           7.                                Orients the object for no rotation.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXAddChild, SPDXInheritObject






























            c 1996 Paul D. Nettle.  All Rights Reserved.        190


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemCopyBYTE

            Description:   Copy memory a byte at a time



                 Dest      Destination of copy
                 Src       Source of copy
                 Size      Number of bytes to copy

            Remarks:       This routine has proven to be faster than the
                           standard memcpy.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemCopyWORD, SPDXMemCopyDWORD





































            c 1996 Paul D. Nettle.  All Rights Reserved.        191


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemCopyDWORD

            Description:   Copy memory a double word at a time



                 Dest      Destination of copy
                 Src       Source of copy
                 Size      Number of double words to copy

            Remarks:       This routine has proven to be faster than the
                           standard memcpy.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemCopyBYTE, SPDXMemCopyWORD





































            c 1996 Paul D. Nettle.  All Rights Reserved.        192


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemCopyWORD

            Description:   Copy memory a word at a time



                 Dest      Destination of copy
                 Src       Source of copy
                 Size      Number of words to copy

            Remarks:       This routine has proven to be faster than the
                           standard memcpy.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemCopyBYTE, SPDXMemCopyDWORD





































            c 1996 Paul D. Nettle.  All Rights Reserved.        193


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemSetBYTE

            Description:   Set a block of memory to a value a byte at a
                           time



                 Addr      Block or memory to set
                 Val       What value to set
                 Size      Number of bytes to set

            Remarks:       This routine has proven to be faster than the
                           standard memset.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemSetWORD, SPDXMemSetDWORD




































            c 1996 Paul D. Nettle.  All Rights Reserved.        194


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemSetDWORD

            Description:   Set a block of memory to a value a double
                           word at a time



                 Addr      Block or memory to set
                 Val       What value to set
                 Size      Number of double words to set

            Remarks:       This routine has proven to be faster than the
                           standard memset.  Note that the value
                           contained in Val will be propagated across
                           all double words in the Addr block or RAM.
                           This offers an alternative to setting all
                           bytes in a range of memory to the same byte
                           value.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemSetBYTE, SPDXMemSetWORD































            c 1996 Paul D. Nettle.  All Rights Reserved.        195


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXMemSetWORD

            Description:   Set a block of memory to a value a word at a
                           time



                 Addr      Block or memory to set
                 Val       What value to set
                 Size      Number of words to set

            Remarks:       This routine has proven to be faster than the
                           standard memset.  Note that the value
                           contained in Val will be propagated across
                           all words in the Addr block or RAM.  This
                           offers an alternative to setting all bytes in
                           a range of memory to the same byte value.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXMemSetBYTE, SPDXMemSetDWORD
































            c 1996 Paul D. Nettle.  All Rights Reserved.        196


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXOpen

            Description:   Opens a file for buffered I/O.



                 FileName  Name of the file to open
                 Flags1    Flags to be passed through to the standard
                 open() call.
                 Flags2    Flags to be passed through to the standard
                 open() call.

            Remarks:       Opens a file for buffered I/O. Flags1 is
                           passed directly to your compiler's open
                           function as is Flags2.  Please consult your
                           compiler's documentation for proper usage.

            Return value:  Return value is passed from open().

            Compatibility: N/A

            See Also:      SPDXClose

































            c 1996 Paul D. Nettle.  All Rights Reserved.        197


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXOpenServices

            Description:   Opens the Spandex services



            Remarks:       Services must be opened before initialization
                           can be performed.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInit









































            c 1996 Paul D. Nettle.  All Rights Reserved.        198


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXOpenSTF

            Description:   Open a file from within a STF file.



                 FileName  Filename of the file within the STF file

            Remarks:       All files opened within the STF file are
                           opened with the properites O_BINARY and
                           O_RDONLY.

            Return value:  STF file handle on success or -1 on failure.

            Compatibility: N/A

            See Also:      SPDXCloseSTF, SPDXSelectSTF






































            c 1996 Paul D. Nettle.  All Rights Reserved.        199


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXOrientHierarchy

            Description:   Perform complete orientation of the hierarchy



                 Object    Top-level object for which to orient
                 Camera    Camera used during the second phase of
                 orientation

            Remarks:       Uses SPDXBuildPhaseOne and SPDXBuildPhaseTwo
                           to perform complete hierarchy orientation.
                           After phase two, the world coordinates
                           (location and direction) in each object in
                           the hierarchy will be transformed properly,
                           according to the relativity of each object's
                           parent.  Refer to SPDXBuildPhaseOne and
                           SPDXBuildPhaseTwo for details on their usage.
                           Note that Camera must be someplace within the
                           hierarchy for proper camera orientation.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXBuildPhaseOne, SPDXBuildPhaseTwo





























            c 1996 Paul D. Nettle.  All Rights Reserved.        200


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXPopPalette

            Description:   Pop a palette off of the stack, and set it.



                 Palette   Where to store the popped palette.
                 Times     Number of palettes to pop off of the stack.

            Remarks:       The palette stack is `popped' Times number of
                           times, and the palette is set to the popped
                           palette.  This palette is also stored into
                           Palette.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXPushPalette




































            c 1996 Paul D. Nettle.  All Rights Reserved.        201


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXProjectHierarchy

            Description:   Project an object hierarchy onto a virtual
                           screen



                 Object    Top-level object in hierarchy to project
                 Cam       Camera used in projection
                 VScreen   Virtual screen to project to

            Remarks:       Hierarchy starting at Object is projected
                           through Cam onto the VScreen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXCalcObjectProjection




































            c 1996 Paul D. Nettle.  All Rights Reserved.        202


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXPushPalette

            Description:   Push a palette onto the palette stack,
                           setting a new palette.



                 Palette   New palette to set

            Remarks:       The palette stack works similar to a
                           processor stack.  When a palette is pushed
                           onto the palette stack, the current palette
                           is pushed onto the stack, and the palette is
                           set to Palette.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXPopPalette



































            c 1996 Paul D. Nettle.  All Rights Reserved.        203


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXPutc

            Description:   Writes a character to a file (buffered)



                 Handle    File handle
                 Byte      Byte to write to file

            Remarks:       Writes a byte to the file specified by Handle
                           (buffered).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXWrite, SPDXGetc, SPDXOpen, SPDXClose






































            c 1996 Paul D. Nettle.  All Rights Reserved.        204


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXQuantizeImage

            Description:   Reduce the colors required for an image.




                 image          Image to reduce
                 number_colors  Number of colors to reduce to
                 tree_depth     Depth of the octree
                 Palette        Reduced palette

            Remarks:       image needs to be a 24-bit image.  Upon
                           exiting this routine, image will be a 8-bit
                           indexed image occupying only the first 1/3rd
                           of the buffer.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXQuantizeImages

































            c 1996 Paul D. Nettle.  All Rights Reserved.        205


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXQuantizeImages

            Description:   Reduce the colors required for a set of
                           images.




                 images         Array of images to reduce
                 AddImages      Should be equal to TotalImages
                 TotalImages    Number of images to reduce
                 number_colors  Number of colors to reduce to
                 tree_depth     Depth of the octree
                 Palette        Reduced palette

            Remarks:       images needs to be an array of TotalImages
                           24-bit images.  Upon exiting this routine,
                           images will be a 8-bit indexed images
                           occupying only the first 1/3rd of the buffers
                           they occupy.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXQuantizeImage





























            c 1996 Paul D. Nettle.  All Rights Reserved.        206


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRead

            Description:   Reads data from a file



                 Handle    File handle
                 Buffer    Buffer to read into
                 Length    Byte count to read

            Remarks:       SPDXRead works the same as the standard read
                           function with the exception that it is
                           buffered.

            Return value:  Number of bytes read.

            Compatibility: N/A

            See Also:      SPDXWrite, SPDXOpen, SPDXClose




































            c 1996 Paul D. Nettle.  All Rights Reserved.        207


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReadCompressedUSD

            Description:   Loads the geometry from a compressed USD
                           file.




                 Universe  Object hierarchy to load into
                 Handle    File handle
                 MapPalette     The palette loaded in from the map
                 ShineValue     The shine value given to the MAKEMAP
                 program

            Remarks:       The text-based USD format is read in, parsed
                           and a hierarchy is created under Universe.
                           This function receives a file handle since in
                           many cases, it is advantageous to load USD
                           files from within STF files.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXReadRawUSD






























            c 1996 Paul D. Nettle.  All Rights Reserved.        208


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReadImage

            Description:   Loads an image file into an image structure.



                 FileName  Image filename
                 Image     Image structure used to store image

            Remarks:       The image files are loaded according to their
                           file extension (IPI, IMG, GIF, G24, TGA, BMP,
                           PCX).  Note that Image must be created before
                           being able to load.  The most common way of
                           doing this is to create an image of a 2x2
                           resolution.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXWriteImage


































            c 1996 Paul D. Nettle.  All Rights Reserved.        209


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReadMouse

            Description:   Reads the mouse position.



                 Col, Row       Column and row of the mouse position
                 BLeft, BRight  Button values for left/right buttons

            Remarks:       The button values are non-zero if
                           corresponding mouse button is depressed.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A






































            c 1996 Paul D. Nettle.  All Rights Reserved.        210


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReadRawUSD

            Description:   Loads the geometry from a non-compressed USD
                           file.





                 FileName  File to load
                 Universe  Object hierarchy to load into
                 MapPalette     The palette loaded in from the map
                 ShineValue     The shine value given to the MAKEMAP
                 program

            Remarks:       The text-based USD format is read in, parsed
                           and a hierarchy is created under Universe.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXReadCompressedUSD
































            c 1996 Paul D. Nettle.  All Rights Reserved.        211


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReadString

            Description:   Reads a string from a buffered I/O file.



                 Handle    File handle
                 Buffer    Where to store the string
                 MaxLength Maximum length of the string

            Remarks:       A null-terminated string is read from the
                           file specified by Handle and placed into
                           Buffer.  The number of bytes actuall read in
                           is MaxLength-1 to make room for the null-
                           termination character.  The file reading
                           stops when a count of MaxLength-1 is reached,
                           the end of the file is reached or the
                           character `\n' (newline) character is found.

            Return value:  Returns the address of the string or NULL if
                           no data is read in.

            Compatibility: N/A

            See Also:      N/A






























            c 1996 Paul D. Nettle.  All Rights Reserved.        212


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRebuildGlobalLightList

            Description:   Rebuilds the global light list.



                 Universe  Top of the hierarchy to build the global
                           light list from

            Remarks:       The global light list is used with the
                           Spandex renderer for speed.  You may
                           occasionally find the need to manually add
                           lights to an object.  If so, you will need to
                           call this function.  You may also use this
                           function to limit which lights are used
                           during the rendering process by calling with
                           only a portion of the hierarchy.

            Return value:  None.

            Compatibility: N/A

            See Also:      None.
































            c 1996 Paul D. Nettle.  All Rights Reserved.        213


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRegisterFont

            Description:   Registers a font with Spandex



                 Font      Font data

            Remarks:       Font data is in the format written out by the
                           Spandex font tool.

            Return value:  Returns the VFONT structure for accessing the
                           font.

            Compatibility: N/A

            See Also:      SPDXDrawScreenText, SPDXDrawVirtualText






































            c 1996 Paul D. Nettle.  All Rights Reserved.        214


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReleaseSTF

            Description:   Release a STF file from use



                 StuffPack Stuff package structure

            Remarks:       Releases a stuff file's resources and closes
                           the STF file.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSelectSTF







































            c 1996 Paul D. Nettle.  All Rights Reserved.        215


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRemoveChild

            Description:   Removes a child from the parent's list of
                           children.



                 Parent    Object to remove the child from
                 WhichChild     Child's index into the parent's child
                 list

            Remarks:       Once the child object is removed, Parent's
                           child count is decreased, and the memory for
                           the child is released to the system.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXAddChild



































            c 1996 Paul D. Nettle.  All Rights Reserved.        216


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRenderHierarchy

            Description:   Render a hierarchy to a virtual screen











                 Object         Top level object of the hierarchy to
                                render
                 Cam            Camera
                 ClearScreenFlag     Flag to clear virtual screen before
                                rendering begins
                 CopyFlag       Flag to copy virtual screen to display
                                device after rendering
                 AntiAliasFlag  Flag to perform anti-aliasing before
                                copying to display device (requires
                                AAVScreen)
                 SmoothFlag     Flag to perform filtered frame smoothing
                                (low-pass filtering) before copying to
                                display device
                 WaitVBFlag     Flag to wait for vertical blank before
                                copying to display device
                 VScreen        Virtual screen to render to
                 AAVScreen      Virtual screen to anti-alias into.  This
                                value may be NULL if the AntiAliasFlag
                                is not set.

            Remarks:       Following the rendering pipeline, the entire
                           hierarchy is rendered to the virtual screen
                           from the camera's point of view, then
                           optionally anti-aliased (into the AAVScreen
                           parameter), low-pass filtered, vertical-blank
                           delayed and copied to the screen.  Note that
                           for proper camera orientation, the camera
                           must be part of the hierarchy under Object.

                           The rendering pipeline follows:
                                1.                                     Orient the hierarchy
                                2.                                     Perform culling on the hierarchy
                                3.                                     Transform the hierarchy
                                4.                                     Project the hierarchy
                                5.                                     Shading
                                6.                                     Clipping
                                7.                                     Sorting
                                8.                                     Rendering



            c 1996 Paul D. Nettle.  All Rights Reserved.        217


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           A valid replacement for SPDXRenderHierarchy
                           might look like this:





















































            c 1996 Paul D. Nettle.  All Rights Reserved.        218


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE














                           Note that before a rendering can be performed
                           properly on a virtual screen, the virtual
                           screen must be set by a call to
                           SPDXSetCurrentVScreen.

                           If anti-aliasing is to be performed, then you
                           must create two virtual screens.  The first
                           consisting of the actual rendered image at
                           double the height and double the width
                           resolution (this is the nature of multi-
                           sample anti-aliasing).  This is the rendered
                           VScreen.  From there, the VScreen is anti-
                           aliased into the AAVScreen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetCurrentVScreen
























            c 1996 Paul D. Nettle.  All Rights Reserved.        219


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXReplacePhongMap

            Description:   Replaces the global phong map with a bitmap



                 Map       Map to replace phong table with

            Remarks:       Note that the Map must be of resolution
                           256x256.  Other resolutions will be allowed,
                           but with unpredictable and unstable results.
                           Also note that the Map is also a map of
                           intensities, not a map of colors.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitTables




































            c 1996 Paul D. Nettle.  All Rights Reserved.        220


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXResetClipper

            Description:   Resets the internal memory reservoirs for the
                           clipper



            Remarks:       The clipper handles both 3D and 2D clipping.
                           This routine must be called each time through
                           the rendering pipeline to release any memory
                           from the pre-allocated polygon and vertex
                           reservoirs.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXSplitPolygonZ, SPDXClipRenderList





































            c 1996 Paul D. Nettle.  All Rights Reserved.        221


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXResetErrorFile

            Description:   Reset the log file (SPANDEX.LOG)



            Remarks:       Deletes the log file (SPANDEX.LOG)

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A










































            c 1996 Paul D. Nettle.  All Rights Reserved.        222


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXResetInterrupts

            Description:   Restores the vertical blank interrupt
                           handler.



            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitializeInterrupts









































            c 1996 Paul D. Nettle.  All Rights Reserved.        223


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXResetVirtualScreen

            Description:   Resets a virtual screen's buffer and z-
                           buffer.



                 Color     Color to fill virtual screen with
                 VScreen   Virtual screen to reset

            Remarks:       The virtual screen is first cleared (see
                           SPDXClearVirtualScreen) with Color.  Next its
                           z-buffer is reset (see
                           SPDXResetVirtualZBuffer).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXClearVirtualScreen,
                           SPDXResetVirtualZBuffer


































            c 1996 Paul D. Nettle.  All Rights Reserved.        224


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXResetVirtualZBuffer

            Description:   Resets the z-buffer for a virtual screen



                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetVirtualZBuffer, SPDXGetVirtualZBuffer








































            c 1996 Paul D. Nettle.  All Rights Reserved.        225


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXRotateObject

            Description:   Rotates an object



                 Object    Object to rotate
                 Rotation  New rotational values for Object

            Remarks:       The rotational range of an object is
                           specified by ROT_POINTS (number of rotational
                           steps for a complete 360 degree rotation).
                           Rotation should be filled with the number of
                           steps of rotation along the X, Y and Z axes.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A



































            c 1996 Paul D. Nettle.  All Rights Reserved.        226


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSeek

            Description:   Seek to a file position in a file (buffered)



                 Handle    File handle
                 Offset    Offset into file
                 Origin    Origin of offset

            Remarks:       Seeks to a file position at Offset from
                           Origin.  Origin is passed directly to your
                           compiler's lseek function.  Please consult
                           your compiler's documentation for possible
                           values for Origin.

            Return value:  Offset of new location of the file pointer.

            Compatibility: N/A

            See Also:      None.


































            c 1996 Paul D. Nettle.  All Rights Reserved.        227


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSelectCompressedBumFile

            Description:   Loads a compressed BUM (bump map) file.



                 Handle    Name of the BUM file to load

            Remarks:       BUM files contain bump maps for use in
                           rendering.  These are loaded into Spandex in
                           one of two ways:  compressed or not
                           compressed.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSelectRawBumFile





































            c 1996 Paul D. Nettle.  All Rights Reserved.        228


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSelectCompressedMapFile

            Description:   Loads a compressed MAP file.



                 MapPalette     Receives the palette from the MAP file
                 Handle    Handle of the MAP file to load

            Remarks:       MAP files contain palettes, palette tables,
                           transparency maps and the actual texture
                           maps.  These are loaded into Spandex in one
                           of two ways:  compressed or not compressed.
                           The MapFlags value within SPDXGlobals is set
                           appropriately to reflect the MAP_FLAGS_TRANS
                           flag (optional transparency map).  This
                           function receives a file handle since in many
                           cases, it is advantageous to load MAP files
                           from within STF files.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSelectRawMapFile






























            c 1996 Paul D. Nettle.  All Rights Reserved.        229


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSelectRawBumFile

            Description:   Loads a non-compressed BUM (bump map) file.



                 BumFileName Name of the BUM file to load

            Remarks:       BUM files contain bump maps for use in
                           rendering.  These are loaded into Spandex in
                           one of two ways:  compressed or not
                           compressed.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSelectCompressedBumFile





































            c 1996 Paul D. Nettle.  All Rights Reserved.        230


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSelectRawMapFile

            Description:   Loads a non-compressed MAP file.



                 MapFileName Name of the MAP file to load
                 MapPalette     Receives the palette from the MAP file

            Remarks:       MAP files contain palettes, palette tables,
                           transparency maps and the actual texture
                           maps.  These are loaded into Spandex in one
                           of two ways:  compressed or not compressed.
                           The MapFlags value within SPDXGlobals is set
                           appropriately to reflect the MAP_FLAGS_TRANS
                           flag (optional transparency map).

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSelectCompressedMapFile

































            c 1996 Paul D. Nettle.  All Rights Reserved.        231


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSelectSTF

            Description:   Prepare a STF (stuff) file for use.



                 FileName  Filename of the STF file
                 StuffPack Stuff package structure

            Remarks:       Opens a STF file and prepares it for use.

            Return value:  LE_NONE on success or appropriate LE code.
                           STF files are read from the back of the file
                           to the front.  This allows the files to be
                           appended to an EXE for a single-file
                           application.

            Compatibility: N/A

            See Also:      SPDXReleaseSTF



































            c 1996 Paul D. Nettle.  All Rights Reserved.        232


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetBackgroundColor

            Description:   Sets the background color



                 Color     RGB triplicate of the background color

            Remarks:       The color is given in RGB format, however,
                           this function will convert that value
                           immediately to an indexed color value by
                           using SPDXGetClosestColor().

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetBackgroundColor





































            c 1996 Paul D. Nettle.  All Rights Reserved.        233


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetCurrentVScreen

            Description:   Set the current virtual screen



                 VScreen   Virtual screen to set as _current_

            Remarks:       Spandex needs to know the current virtual
                           screen so that when it renders, for example,
                           it knows where to render to.  Use this
                           routine to set the current virtual screen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitVirtualScreen





































            c 1996 Paul D. Nettle.  All Rights Reserved.        234


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetDebugState

            Description:   Sets the current state of the debug flag set.



                 State     32-bit value that represents the entire debug
                 flag set

            Remarks:       Spandex uses the first four bits of a 32-bit
                           value for internal use.  The remaining bits
                           are for developer use, and may be manipulated
                           freely.  The internal debug flags reserved
                           for Spandex are:

                                DEBUG_BASIC         0x1
                                DEBUG_MEM      0x2
                                DEBUG_MEMTRACE 0x4
                                DEBUG_FUNCS         0x8

                           DEBUG_BASIC refers to basic debugging
                           information (for example, memory leaks).

                           DEBUG_MEM refers to memory related
                           information (for example, details of each
                           memory leak).

                           DEBUG_MEMTRACE will cause the memory
                           allocation routines in Spandex to report on
                           every single allocation and free of memory
                           into the debug file.  This will cause a
                           dramatic slowdown to the application, but is
                           invaluable at times of need.

                           DEBUG_FUNCS will cause the filenames and
                           source line numbers to appear in the log file
                           when entries are logged.  It may be
                           advantageous not to have this information.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetDebugState, SPDXSetDebugStateFromFile











            c 1996 Paul D. Nettle.  All Rights Reserved.        235


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetDebugStateFromFile

            Description:   Sets the 32-bit debug flag set from the debug
                           file (SPANDEX.DBG).



            Remarks:       The 32-bit debug flag set is for developer
                           use and internal Spandex usage.  These values
                           can be set automatically when Spandex
                           initializes by placing the flags into a text
                           file containing a string of 1s and 0s from
                           left to right starting in the first column on
                           the first line in the text file.  The first
                           value in the file represents bit 0, the
                           second represents bit 1 and so on.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSetDebugState, SPDXGetDebugState

































            c 1996 Paul D. Nettle.  All Rights Reserved.        236


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetFatalErrors

            Description:   Enable or disable the fatal errors.



                 Flag      New flag for fatal errors.

            Remarks:       Fatal errors will only occur if Flag is TRUE.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetFatalErrors








































            c 1996 Paul D. Nettle.  All Rights Reserved.        237


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetGlobalResolution

            Description:   Sets the resolution of the output display
                           device.



                 ResX, ResY     Width and height of the display

            Remarks:       Spandex uses these values to determine the
                           resolution of output display device.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetGlobalResolution






































            c 1996 Paul D. Nettle.  All Rights Reserved.        238


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetLightIntensity

            Description:   Modifies the intensity of a light.



                 Light     Light to receive new intensity
                 Color     New intensity for Light is calculated from
                 Color

            Remarks:       The intensity of a light specifies how much
                           light it produces.  Intensity values may
                           range from 0.0 to 1.0.  The value may range
                           higher than 1.0, but make sure you understand
                           the details behind the lighting calculations.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLightIntensity


































            c 1996 Paul D. Nettle.  All Rights Reserved.        239


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetLightLocal

            Description:   Modifies the local location of a point light



                 Light     Light to receive the local location
                 Location  New local location for Light

            Remarks:       The local location represents the location of
                           a light relative to its parent.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLightLocal






































            c 1996 Paul D. Nettle.  All Rights Reserved.        240


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetLightName

            Description:   Sets the name of a light



                 Light     Light to receive new name
                 Name      New name for Light

            Remarks:       Copies Name into Light.  This name is only
                           useful for the developer.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLightName






































            c 1996 Paul D. Nettle.  All Rights Reserved.        241


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetLoggedErrors

            Description:   Enable or disable the logging of errors.



                 Flag      New flag for error logging.

            Remarks:       Errors will only log if Flag is TRUE.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLoggedErrors








































            c 1996 Paul D. Nettle.  All Rights Reserved.        242


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetLoggedStrings

            Description:   Enable or disable the logging of strings.



                 Flag      New flag for string logging.

            Remarks:       Strings will only log if Flag is TRUE.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLoggedStrings








































            c 1996 Paul D. Nettle.  All Rights Reserved.        243


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialAmbientLight

            Description:   Sets the ambient light for a material



                 Material  Material to receive the ambient light
                 Ambient   Ambient light to apply to material

            Remarks:       None.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialAmbientLight







































            c 1996 Paul D. Nettle.  All Rights Reserved.        244


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialAmbientReflectCoefficient

            Description:   Sets the Ka value for a material



                 Material  Material to receive new Ka value.
                 Ka        Ambient reflect coefficient.

            Remarks:       Ka (the ambient light reflect coefficient) is
                           a common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the ambient light
                           applied to any face using Material actually
                           affects the face.  The values for Ka can only
                           range from 0.0 (no ambient light is applied)
                           to 1.0 (all available ambient light is
                           applied).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialAmbientReflectCoefficient































            c 1996 Paul D. Nettle.  All Rights Reserved.        245


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialBumpMap

            Description:   Sets the bump map for an material



                 Material  Material which receives the bump map.
                 Name      Name of the bump map.

            Remarks:       This function sets the material's bump map
                           property according to Name.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXGetMaterialBumpMap






































            c 1996 Paul D. Nettle.  All Rights Reserved.        246


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialColor

            Description:   Sets the base color of the material



                 Material  Material which receives the color
                 Color     Color to place into the Material
                 Intensity Intensity of color
                 Palette   Palette to map the color through

            Remarks:       When a material is set to a color, only its
                           color index is stored.  In order to calculate
                           this, the intensity and palette are both
                           needed.

            Return value:  N/A

            Compatibility: N/A

            See Also:      SPDXGetMaterialColor


































            c 1996 Paul D. Nettle.  All Rights Reserved.        247


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialDiffuseReflectCoefficient

            Description:   Sets the Kd value for an object



                 Material  Material to receive new Kd value.
                 Kd        Diffuse reflect coefficient.

            Remarks:       Kd (the diffuse light reflect coefficient) is
                           a common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the diffuse light
                           applied to any face using Material actually
                           affects the face.  The values for Kd can only
                           range from 0.0 (no diffuse light is applied)
                           to 1.0 (all available diffuse light is
                           applied).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialDiffuseReflectCoefficient































            c 1996 Paul D. Nettle.  All Rights Reserved.        248


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialName

            Description:   Sets the name of a material



                 Material  Material to receive the name
                 Name      Name to apply to the material

            Remarks:       Copies the string in Name into Material.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialName







































            c 1996 Paul D. Nettle.  All Rights Reserved.        249


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXSetMaterialShineCoefficient

            Description:   Sets the shine value for a material



                 Material  Material to receive new shine value.
                 ShineValue     Shine coefficient.

            Remarks:       The shine coefficient is a common rendering
                           variable from the standard rendering
                           equations for Phong and Gouraud.  It
                           essentially specifies the size of the
                           specular reflection.  Larger values produce a
                           much smaller specular reflection.  This
                           effectively increases the shininess of a
                           surface.  In theory, a value of infinity
                           would represent an infinitely shiny surface,
                           and hence produce an infinitely small
                           reflection of a point light source.  Within
                           Spandex, the value for shine may range from
                           0.0 to 10,000.0.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialShineCoefficient



























            c 1996 Paul D. Nettle.  All Rights Reserved.        250


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                          SPDXSetMaterialSpecularReflectCoefficient

            Description:   Sets the Ks value for a material



                 Material  Material to receive new Ks value.
                 Ks        Diffuse reflect coefficient.

            Remarks:       Ks (the specular reflect coefficient) is a
                           common rendering variable from the standard
                           rendering equations for Phong and Gouraud.
                           It specifies how much of the specular
                           reflection applied to an object actually
                           affects the surface.  The values for Ks can
                           only range from 0.0 (no specular reflection
                           is applied) to 1.0 (all available specular
                           reflection is applied).  Specular reflections
                           are also commonly referred to as _specular
                           highlights._

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialSpecularReflectCoefficient





























            c 1996 Paul D. Nettle.  All Rights Reserved.        251


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialSurface

            Description:   Applies a surface type to an object



                 Material  Material to receive new surface type
                 Surface   Surface type to apply to Material

            Remarks:       The surface type directly modifies the
                           appearance of an object rendered in 3D.  Here
                           is a brief description of the different
                           surface types:

                                SOLID      Polygons in an object have a
                                           constant surface color.
                                TEXTURED   Polygons in an object have a
                                           bitmap (texture) projected
                                           onto them during rendering.
                                           This is what allows an object
                                           to `look like wood', for
                                           example.
                                ENVMAP     Polygons in an object have a
                                           bitmap (texture) reflected
                                           onto them during rendering.
                                           This is what allows an object
                                           to `look like chrome', for
                                           example.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialSurface





















            c 1996 Paul D. Nettle.  All Rights Reserved.        252


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialTexture

            Description:   Returns the texture address of a material



                 Material  Material to receive the texture
                 Name      Name of the texture to assign to the material

            Remarks:       This function uses SPDXFindMapByName() to
                           locate the texture.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialTexture






































            c 1996 Paul D. Nettle.  All Rights Reserved.        253


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMaterialTransparency

            Description:   Sets the transparency flag for a material.




                 Material  Material to receive new transparency flag.
                 Transparency0 or non-zero value transparency flag.

            Remarks:       Transparency mapping allows objects to become
                           semi-opaque (or transparent).  Setting this
                           to any non-zero value will cause an object to
                           become Transparent.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetMaterialTransparency



































            c 1996 Paul D. Nettle.  All Rights Reserved.        254


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMode

            Description:   Set the video mode



                 ModeNumber     Video mode to set
                 ClearFlag      Flag to clear the video memory
                 SquareFlag     Square pixel mode flag

            Remarks:       Sets the video mode to ModeNumber.  If
                           ClearFlag is equal to TRUE then the video
                           memory is cleared.  If SquareFlag is equal to
                           TRUE and the video mode is VESA_MODE_200_256
                           then square pixel mode is enabled.  Valid
                           video modes are:

                                VESA_MODE_200_256     320x200  8-bit*
                                VESA_MODE_400_256     640x400  8-bit*
                                VESA_MODE_480_256     640x480  8-bit*
                                VESA_MODE_600_16      800x600  4-bit
                                VESA_MODE_600_256     640x400  8-bit*
                                VESA_MODE_768_16      1024x768 4-bit
                                VESA_MODE_768_256     1024x768 8-bit*
                                VESA_MODE_1024_16     1280x10244-bit
                                VESA_MODE_1024_256    1280x10248-bit*
                                VESA_MODE_TEXT01      80x60    Text
                                VESA_MODE_TEXT02      132x25   Text
                                VESA_MODE_TEXT03      132x43   Text
                                VESA_MODE_TEXT04      132x50   Text
                                VESA_MODE_TEXT05      132x60   Text
                                VESA_MODE_200_32K     320x200  15-bit
                                VESA_MODE_200_64K     320x200  16-bit
                                VESA_MODE_200_16M     320x200  24-bit
                                VESA_MODE_480_32K     640x480  15-bit
                                VESA_MODE_480_64K     640x480  16-bit
                                VESA_MODE_480_16M     640x480  24-bit
                                VESA_MODE_600_32K     800x600  15-bit
                                VESA_MODE_600_64K     800x600  16-bit
                                VESA_MODE_600_16M     800x600  24-bit
                                VESA_MODE_768_32K     1024x768 15-bit
                                VESA_MODE_768_64K     1024x768 16-bit
                                VESA_MODE_768_16M     1024x768 24-bit
                                VESA_MODE_1024_32K    1280x102415-bit
                                VESA_MODE_1024_64K    1280x102416-bit
                                VESA_MODE_1024_16M    1280x102424-bit

                           Note that only modes marked with a * are
                           available when using the Spandex renderer.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A


            c 1996 Paul D. Nettle.  All Rights Reserved.        255


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE



            See Also:      SPDXGetMode, SPDXSetTextMode





















































            c 1996 Paul D. Nettle.  All Rights Reserved.        256


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMousePosition

            Description:   Places the mouse at a specified position.



                 X, Y      New position for mouse

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXReadMouse








































            c 1996 Paul D. Nettle.  All Rights Reserved.        257


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetMouseRange

            Description:   Sets the range of the mouse.



                 X1, X2    Start and end X position
                 Y1, Y2    Start and end Y position

            Remarks:       Sets the limiting mouse range for the mouse.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXReadMouse







































            c 1996 Paul D. Nettle.  All Rights Reserved.        258


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetNearZ

            Description:   Sets the near-z (hither) clipping plane
                           distance.



                 NearZ     Distance of the near-z clipping plane from
                 the camera

            Remarks:       Setting the near-z to a negative value will
                           be clipped to 0.0 which could still result in
                           unstable code.  Note that the default near-z
                           clipping distance is 20.0.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetNearZ



































            c 1996 Paul D. Nettle.  All Rights Reserved.        259


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectDevUse

            Description:   Modifies the developer variables for an
                           object



                 Object    Object to receive the new developer variables
                 Index     Index of the Developer Use variable
                 Value     32-bit INT value for the variable

            Remarks:       Each object contains an array of
                           DEV_USE_COUNT variables.  These are of type
                           INT, and may be casted to any other 32-bit
                           type (void * for example).  Spandex has no
                           internal use for this data.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectDevUse, SPDXSetObjectType,
                           SPDXGetObjectType
































            c 1996 Paul D. Nettle.  All Rights Reserved.        260


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectDirection

            Description:   Modifies the direction vector for an object.



                 Object    Object to receive new direction vector
                 Direction New direction vector for Object

            Remarks:       Each object contains a vector for maintaining
                           the direction of an object.  This can be used
                           for a number of purposes, one of which is
                           movement along its _facing direction._

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectDirection




































            c 1996 Paul D. Nettle.  All Rights Reserved.        261


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectDrawFlags

            Description:   Modifies the drawing (rendering) flags for an
                           object.



                 Object    Object to receive new draw flags
                 DrawFlags Drawing flags for object

            Remarks:       The draw flags specify what properties of an
                           object are visible (rendered).  Valid values
                           for DrawFlags are:

                                DRAW_TRIS
                                DRAW_QUADS
                                DRAW_POINTS
                                DRAW_ALL
                                DRAW_NONE

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectDrawFlags






























            c 1996 Paul D. Nettle.  All Rights Reserved.        262


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectLense

            Description:   Sets the lense size for a given object



                 Object    Object that receives the lense
                 Lense     Lense to apply to the object

            Remarks:       The lense of an object is the lense size (in
                           millimeters) used to calculate the FOV (field
                           of vision) for a given camera.  The default
                           Lense size is 48.23529.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXSetObjectLense




































            c 1996 Paul D. Nettle.  All Rights Reserved.        263


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectLocal

            Description:   Modifies the local location of an object



                 Object    Object to receive the local location
                 Location  New local location for Object

            Remarks:       The local location represents the location of
                           an object relative to its parent.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectLocal, SPDXGetObjectWorld,
                           SPDXSetObjectWorld





































            c 1996 Paul D. Nettle.  All Rights Reserved.        264


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectName

            Description:   Sets the object name



                 Object    Object which receives the name
                 Name      Name to assign to object

            Remarks:       Copies the name into the object.  A name can
                           be any string of DEF_NAME_LEN length.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectName






































            c 1996 Paul D. Nettle.  All Rights Reserved.        265


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectShadeModel

            Description:   Set the shading model for the object



                 Object    Object to modify
                 ShadeModel     Shading model to apply to Object
                           Available shading models are:  AMBIENT,
                           LAMBERT, GOURAUD, PHONG, BUMP

            Remarks:       The shading model directly modifies the
                           appearance of an object rendered in 3D.  Here
                           is a brief description of the different
                           shading models:

                                AMBIENT - objects are not shaded
                                      according to individual lights.
                                      They are shaded according to the
                                      ambient light value for the
                                      object.
                                LAMBERT - objects are shaded at the
                                      polygon level according to
                                      individual lights.  Entire
                                      polygons maintain a consistent
                                      shade across the surface, giving
                                      the object a _faceted_ look.
                                GOURAUD - objects are shaded at the
                                      vertex level according to
                                      individual lights.  This shading
                                      model calculates the shade of each
                                      vertex, then smoothly shades the
                                      polygon from vertex to vertex
                                      using linear interpolation.
                                PHONG - objects are shaded at the pixel
                                      level according to a global Phong
                                      map.  This map is used as an
                                      intensity modifier for each pixel
                                      on surface of the object as it is
                                      rendered.
                                BUMP - objects are shaded using PHONG
                                      shading, with an additive bump map
                                      to give the appearance of a rough
                                      or bumpy surface.  The bump map
                                      determines the look of the
                                      surface.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectShadeModel



            c 1996 Paul D. Nettle.  All Rights Reserved.        266


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectShowBacks

            Description:   Modifies the back-face culling flag for an
                           object



                 Object    Object to modify
                 ShowBacks The new show backs flag

            Remarks:       Back-face culling prevents geometric faces
                           that make up the shape of an object from
                           being drawn when they are facing away from
                           the camera.  This is done since, with most
                           closed objects, you cannot ever see a face
                           from it's back side (unless transparent).  If
                           an object is left open, faces may be seen
                           from the back-side.  If this is desirable,
                           you will need to enable the _show backs_ flag
                           for the object.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectShowBacks





























            c 1996 Paul D. Nettle.  All Rights Reserved.        267


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXSetObjectSteadyOrientation

            Description:   Sets the steady rotation of an object



                 Object    Object to receive new steady rotation.
                 Rotation  Steady rotation structure to apply to object.

            Remarks:       Each object may have a steady (constant)
                           rotation applied to it.  Each time through
                           the rendering pipeline, the object will get
                           rotated by the specified amount in the steady
                           rotation structure for the object.  For
                           certain applications, it may be desirable to
                           apply a constant rotation to an object or set
                           of objects and not worry about them again.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectSteadyRotation, SPDXRotateObject
































            c 1996 Paul D. Nettle.  All Rights Reserved.        268


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXSetObjectType

            Description:   Modifies the type of an object



                 Object    Object to retrieve the type from
                 Type      New type for Object

            Remarks:       The type variable is stored in the object for
                           the developer only.  Spandex has no internal
                           use for this value.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectType, SPDXGetObjectDevUse,
                           SPDXSetObjectDevUse




































            c 1996 Paul D. Nettle.  All Rights Reserved.        269


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetObjectWorld

            Description:   Modifies the world location of an object



                 Object    Object to retrieve the world location from
                 Location  New world location for Object

            Remarks:       The world location represents the location of
                           an object relative to the camera in world
                           space.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectWorld, SPDXGetObjectLocal,
                           SPDXSetObjectLocal




































            c 1996 Paul D. Nettle.  All Rights Reserved.        270


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetPalette

            Description:   Set the palette for the display device



                 Start     Starting palette entry to modify
                 Count     Number of palette entries to modify
                 Palette   Palette buffer

            Remarks:       The display device's palette is set to the
                           contents of Palette starting at the Start
                           palette entry for Count colors using the
                           BIOS.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetPalette



































            c 1996 Paul D. Nettle.  All Rights Reserved.        271


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetPointVertex

            Description:   Sets the vertex location of a point



                 Object    Object that contains points to be modified
                 Index     Index of the modified point
                 Ver       Vertex used to update point

            Remarks:       Updates a point by copying the contents of
                           Ver into the point at index index in object
                           Object.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetPointVertex




































            c 1996 Paul D. Nettle.  All Rights Reserved.        272


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetScreenPixel

            Description:   Plots a pixel on the screen



                 X, Y      Location on the screen
                 Color     Color to plot

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetScreenPixel







































            c 1996 Paul D. Nettle.  All Rights Reserved.        273


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetTextMode

            Description:   Sets the video into text mode



            Remarks:       N/A

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXSetMode










































            c 1996 Paul D. Nettle.  All Rights Reserved.        274


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetTriNormal

            Description:   Sets the normal for a TRI



                 Object    Object that contains triangle geometry
                 Index     Which triangle to modify

            Remarks:       Updates the triangle at Index in Object with
                           new normal.  The normal is calculated based
                           on the old normal, so the normal will still
                           face the correct side of the triangle for
                           culling and shading.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetTriNormal



































            c 1996 Paul D. Nettle.  All Rights Reserved.        275


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetTriVertices

            Description:   Sets the vertices for a TRI



                 Object    Object that contains triangle geometry
                 Index     Which triangle to modify
                 V1,V2,V3  Vertices to store into triangle

            Remarks:       Updates the triangle at Index in Object with
                           the vertices V1, V2 and V3.  The values are
                           copied into the vertices (the triangle will
                           not use the same pointer as given in V1, V2
                           or V3).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetTriVertices


































            c 1996 Paul D. Nettle.  All Rights Reserved.        276


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVertex

            Description:   Sets a vertex within an object



                 Object    Object that receives the new vertex
                 Index     Which vertex to modify
                 Vertex    Vertex structure to place into the object

            Remarks:       Copies Vertex into the vertex at Index in
                           Object.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVertex





































            c 1996 Paul D. Nettle.  All Rights Reserved.        277


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVideoWindow

            Description:   Sets the VESA video window.



                 WindowFlag     Window number
                 WindowPos Window position (in granularity units)

            Remarks:       For complete VESA VBE information, please
                           contact VESA.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXGetVideoWindow






































            c 1996 Paul D. Nettle.  All Rights Reserved.        278


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualBuffer

            Description:   Sets the buffer address for a virtual screen



                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualBuffer








































            c 1996 Paul D. Nettle.  All Rights Reserved.        279


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualCenter

            Description:   Sets the center point for a virtual screen



                 CenterX, CenterY    Center point
                 VScreen        Virtual screen

            Remarks:       The center point is during the projection
                           phase of the renderer.  Moving the counter
                           point will re-locate the center of view.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualCenter





































            c 1996 Paul D. Nettle.  All Rights Reserved.        280


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualClipping

            Description:   Sets the clipping values for the virtual
                           screen



                 Left      The left-edge of the clipping rectangle
                 Top       The top-edge of the clipping rectangle
                 Right     The right-edge of the clipping rectangle
                 Bottom    The bottom-edge of the clipping rectangle
                 VScreen   Virtual screen to receive the clipping
                 rectangle

            Remarks:       The clipping rectangle denotes the inner
                           extents of the clipping region (anything
                           outside of this region is clipped).  If the
                           clipping region is set to (0,0) - (10,10)
                           then pixels at (10,10) will be rendered, but
                           not at (11,10) or (10,11).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualClipping





























            c 1996 Paul D. Nettle.  All Rights Reserved.        281


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualLense

            Description:   Sets the lense size for a given virtual
                           screen and calculates the proper scale
                           factors.



            Remarks:       This routine performs a SPDXCalcFOV() on the
                           given lense size (in millimeters) and
                           properly calculates the scale factors for the
                           given lense size.  This routine may be called
                           as many times as desired without cumulative
                           effects to the scale factors _ unlike
                           SPDXCorrectVirtualAspect() as shown in
                           SPDXRenderHierarchy().

                           In normal use, after calling this routine, a
                           call to SPDXCorrectVirtualAspect() should be
                           issued.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXCalcFOV, SPDXCorrectVirtualAspect





























            c 1996 Paul D. Nettle.  All Rights Reserved.        282


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualMaxPolysToRender

            Description:   Limits the number of polygons rendered for a
                           single scene.



                 Max       Maximum polygon count limit for rendering
                 VScreeen  Virtual screen to limit

            Remarks:       Polygon counts are the biggest cause of slow
                           rendering.  By reducing the polygon count,
                           you see less but run faster.  This enables
                           Spandex to limit the maximum number of
                           polygons to render to the screen.  All
                           polygons are still run through the entire
                           rendering pipeline, but are just not drawn.
                           The polygons that are skipped are the
                           furthest polygons from the camera.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtaualMaxPolysToRender






























            c 1996 Paul D. Nettle.  All Rights Reserved.        283


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualPixel

            Description:   Plots a pixel on the virtual screen



                 X, Y      Location on the screen
                 Color     Color to plot
                 VScreen   Virtual screen

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualPixel






































            c 1996 Paul D. Nettle.  All Rights Reserved.        284


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualResolution

            Description:   Sets the resolution for a virtual screen



                 ResX, ResY     Resolution in pixels
                 VScreen   Virtual screen

            Remarks:       The virtual screens hold two copies of the
                           resolution for ease of use.  One copy is the
                           fixed-point version and the other copy is the
                           integer version.  This routine sets them both
                           as well as calculates and sets the center
                           point of the virtual screen.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualiResolution
                           SPDXGetVirtualfResolution

































            c 1996 Paul D. Nettle.  All Rights Reserved.        285


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualScaleFactors

            Description:   Sets the scale factors for a virtual screen.



                 ScaleX, ScaleY X and Y scale factors for 3D projection
                 VScreen        Virtual screen to affect

            Remarks:       The scale factors are used to modify the
                           viewing angle of a 3-dimensional scene.  If
                           different values are used for the X and Y
                           scale factors, a pixel ratio will be
                           affected.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualScreenFactors



































            c 1996 Paul D. Nettle.  All Rights Reserved.        286


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSetVirtualZBuffer

            Description:   Sets the z-buffer address for a virtual
                           screen



                 VScreen   Virtual screen
                 ZBuffer   Z-buffer address

            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetVirtualZBuffer,
                           SPDXClearVirtualZBuffer





































            c 1996 Paul D. Nettle.  All Rights Reserved.        287


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                            SPDXShadeRenderList

            Description:   Perform lighting and shading on a render
                           list.



                 RList     Render list to shade

            Remarks:       During the rendering pipeline, a render list
                           is created with all visible polygons and
                           points in it.  These primitives then need to
                           be shaded according to the lighting model and
                           surface type.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy



































            c 1996 Paul D. Nettle.  All Rights Reserved.        288


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXSplitPolygonZ

            Description:   Perform 3D clipping of a polygon to the near-
                           z plane.




                 Tri       Original Triangle to clip
                 Split1    First split triangle
                 Split2    Second split triangle
                 NewV1     First new vertex
                 NewV2     Second new vertex
                 VScreen   Virtual screen by which the polygon is
                 clipped

            Remarks:       Performs clipping to the near Z plane.
                           Original triangle is left unmodified, but up
                           to two new triangles will be allocated from a
                           static reservoir (specifically for clipping).
                           The first of these triangles will always be a
                           valid triangle.  The second, however, may be
                           returned as null, as it may not be necessary
                           to allocate a second triangle.

                           Each of the new vertices will be allocated
                           from a separate vertex reservoir.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXBuildRenderList, SPDXClipRenderList,
                           SPDXSetNearZ





















            c 1996 Paul D. Nettle.  All Rights Reserved.        289


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXTell

            Description:   Returns the current file position



                 Handle    File handle

            Remarks:       None.

            Return value:  Returns the current file position relative
                           the beginning of the file (offset 0).

            Compatibility: N/A

            See Also:      SPDXSeek







































            c 1996 Paul D. Nettle.  All Rights Reserved.        290


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXTransformHierarchy

            Description:   Rotate and translate all object geometry for
                           a given hierarchy.



                 Object    Top-level object for hierarchy to transform

            Remarks:       Transforms (rotates and translates) all
                           objects in the hierarchy starting at Object
                           using the phase two matrix for the objects.
                           This places all object into world-space and
                           rotated properly around the camera.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy



































            c 1996 Paul D. Nettle.  All Rights Reserved.        291


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXTranslateObject

            Description:   Moves an object through 3-space according to
                           a direction vector.



                 Object    Object to translate
                 Vector    Direction and velocity to translate Object

            Remarks:       The object's local location (relative to
                           parent) is translated (moved) according to
                           Vector.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectLocal, SPDXSetObjectLocal




































            c 1996 Paul D. Nettle.  All Rights Reserved.        292


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXTranslateObjectFacing

            Description:   Moves an object through 3-space according to
                           its direction vector and given amplitude.



                 Object    Object to translate
                 Amplitude Amplitude to translate Object

            Remarks:       The object's world direction (normalized) is
                           used during translation for proper results.
                           It is then given an amplitude, and the
                           object's local location is translated.

                           This is handy for many cases, including
                           flight simulation.  Each object has its own
                           direction vector, and given an amplitude, the
                           object will travel in the direction that it
                           is facing at all times.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetObjectLocal, SPDXSetObjectLocal





























            c 1996 Paul D. Nettle.  All Rights Reserved.        293


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXTranslateLight

            Description:   Moves a light through 3-space according to a
                           direction vector.



                 Light     Light to translate
                 Vector    Direction and velocity to translate Light

            Remarks:       The light's local location (relative to
                           parent) is translated (moved) according to
                           Vector.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXGetLightLocal, SPDXSetLightLocal




































            c 1996 Paul D. Nettle.  All Rights Reserved.        294


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUnifyObjectNormals

            Description:   Given an object, polygon and vertex normals
                           are calculated.



                 Object    Object to unify

            Remarks:       Each object containing polygons must contain
                           polygons with vertex indicies given in
                           counter-clockwise order (as seen from the
                           outside of the object).

                           From these polygons, their surface normals
                           can be calculated to the proper orientation,
                           and normalized.

                           From these polygon normals, the vertex
                           normals can be calculated by simply averaging
                           all polygon normals that share this vertex.

            Return value:  None

            Compatibility: N/A

            See Also:      N/A




























            c 1996 Paul D. Nettle.  All Rights Reserved.        295


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUninit

            Description:   De-initialize the Spandex sub-system.



                 Universe  Top-level of the object Hierarchy

            Remarks:       De-initializing Spandex consists of a few
                           steps.  They are (in this order):

                                1.                                     Turn off the initialization flag
                                   within the SPDXGlobals structure.
                                2.                                     Compare the zero-memory with the copy
                                   made during SPDXInit.  If they are
                                   different, log an error.
                                3.                                     Cleanup the SPDXGlobals structure
                                   (see SPDXCleanupGlobals).
                                4.                                     De-initialize the renderer (see
                                   SPDXUninitRenderer).
                                5.                                     If Universe is not NULL, then cleanup
                                   the Universe structure (see
                                   SPDXCleanupObject).  The Universe
                                   structure itself is also freed (see
                                   SPDXFree).
                                6.                                     The mouse is de-initialized (see
                                   SPDXUninitMouse).
                                7.                                     The memory handler is de-initialized
                                   (see SPDXUninitMem).

                           Note that it is important that the Universe
                           structure be a pointer, not an actual
                           structure.  Otherwise the SPDXFree will fail
                           as noted in step 5.

                           Also note that services must be closed after
                           the call to SPDXUninit (see
                           SPDXCloseServices).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInit, SPDXCleanupGlobals,
                           SPDXUninitRenderer, SPDXCleanupObject,
                           SPDXFree, SPDXUninitMouse, SPDXUninitMem,
                           SPDXCloseServices








            c 1996 Paul D. Nettle.  All Rights Reserved.        296


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUninitByteSortStack

            Description:   De-initialize the byte sort stack



            Remarks:       N/A

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXByteSortRenderList










































            c 1996 Paul D. Nettle.  All Rights Reserved.        297


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUninitMem

            Description:   De-initialize the Spandex memory manager



            Remarks:       The Spandex memory manager is de-initialized.
                           If any memory allocated by the memory manager
                           was not released, it gets released
                           automatically and these memory leaks are
                           reported to the log file (SPANDEX.LOG).  The
                           general error is only logged if the
                           DEBUG_BASIC flag is set (see
                           SPDXSetDebugState), and the details of each
                           memory leak are logged only if the DEBUG_MEM
                           flag is set (see SPDXSetDebugState).

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitMem, SPDXSetDebugState

































            c 1996 Paul D. Nettle.  All Rights Reserved.        298


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUninitMouse

            Description:   De-initialize the mouse handler.



            Remarks:       This function also resets the mouse driver.

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitMouse










































            c 1996 Paul D. Nettle.  All Rights Reserved.        299


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUninitRenderer

            Description:   De-initialize the Spandex renderer



            Remarks:       Used by SPDXUninit to de-initialize the
                           renderer

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXInitRenderer, SPDXInit









































            c 1996 Paul D. Nettle.  All Rights Reserved.        300


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXUpdateMaterialsLighting

            Description:   Performs batch lighting on all materials for
                           Ka, Ks and Shininess.



            Remarks:       For the sake of speed, each material contains
                           its own pre-calculated set of lighting
                           parameters based on Ka, Ks and shininess.
                           This routine updates all materials globally.

                           This should be performed only when materials
                           have changed.  In the SPDXRenderHierarchy()
                           routine, this happens every frame since the
                           default renderer can't depend on stability of
                           the Ka, Ks and Shininess values for each
                           material.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXRenderHierarchy































            c 1996 Paul D. Nettle.  All Rights Reserved.        301


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXValidateMemory

            Description:   Validates a memory chunk.



            Remarks:       Use this function to validate a memory chunk.
                           First it is checked for a validity of the
                           pointer itself, then it is validate for
                           access overrun.

            Return value:  Number of errors encountered.  If errors are
                           encountered, they are logged in the log file
                           (SPDX.LOG).

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.        302


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXVectorCrossProduct

            Description:   Performs a standard cross product on two
                           vectors.



            Remarks:       A vector cross product is defined as:

                           X' = (Y1 * Y2) - (Z1 * Y2)
                           Y' = (Z1 * X2) - (X1 * Z2)
                           Z' = (X1 * Y2) - (Y1 * X2)

            Return value:  None

            Compatibility: N/A

            See Also:      N/A





































            c 1996 Paul D. Nettle.  All Rights Reserved.        303


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXVirtualAntiAlias

            Description:   Given two virtual screens, this function
                           performs multi-sample anti-alias reduction.



            Remarks:       Multi-sample anti-aliasing is a simple
                           concept to grasp.  The process is to simply
                           render an image that is exactly double the
                           width and double the height (4x original
                           size), then to reduce the size of the image
                           by averaging every 4 pixel blocks into a
                           separate buffer.

                           This process has many drawbacks.  First, it
                           requires 5 times the image memory (1 original
                           image plus the 4x image).  Secondly, it
                           requires considerably more processing time
                           (4x the processing time of a standard image,
                           plus the time required for this call).

                           However, if you're not concerned with speed,
                           or have enough horsepower to perform these
                           tasks in acceptable time frames, then this
                           function can produce much better results than
                           simply rendering a non-anti-aliased image.

                           This function also has the ability to anti-
                           alias to higher degrees of accuracy.
                           Rendering a 16x image can be anti-aliased to
                           a 4x image, then re-anti-aliased to a 1x
                           image for display.  This process, of course,
                           it much slower.

                           An alternative (and less accurate) approach
                           is to perform a SPDXVirtualSmoothFrame().

                           This function requires a transparency table.
                           Note that the anti-aliasing is affected by
                           the transparency table _ all values perform a
                           weighted average of the given value when the
                           table was created.

            Return value:  None

            Compatibility: N/A

            See Also:      SPDXVirtualSmoothFrame






            c 1996 Paul D. Nettle.  All Rights Reserved.        304


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXVirtualSmoothFrame

            Description:   Perform smoothing filter to virtual screen.



                 VScreen   Virtual screen to perform smoothing on

            Remarks:       The smoothing (low-pass filter) requires a
                           transparency table.  Note that the smoothing
                           is affected by the transparency table _ all
                           values perform a weighted average of the
                           given value when the table was created.

                           An alternative (slower, but more accurate)
                           approach is to perform a
                           SPDXVirtualAntiAlias().

            Return value:  None.

            Compatibility: N/A

            See Also:      SPDXVirtualAntiAlias
































            c 1996 Paul D. Nettle.  All Rights Reserved.        305


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXWrite

            Description:   Writes data to a file (buffered)



                 Handle    File handle
                 Buffer    Buffer to written from
                 Length    Byte count to read

            Remarks:       SPDXWRite works the same as the standard
                           write function with the exception that it is
                           buffered.

            Return value:  Number of bytes written.

            Compatibility: N/A

            See Also:      SPDXRead, SPDXOpen, SPDXClose




































            c 1996 Paul D. Nettle.  All Rights Reserved.        306


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           SPDXWriteImage

            Description:   Saves an image to a file.



                 FileName       Image filename
                 Image          Image structure used to store image
                 UpsideDownFlag Used for TGA files only

            Remarks:       The image files are written according to
                           their file extension (IPI, IMG, GIF, G24,
                           TGA, BMP, PCX).  For TGA files, the option to
                           write them from the top-down or from the
                           bottom-up is given with UpsideDownFlag.  Note
                           that this does not cause the image to be
                           turned upside-down before writing, but simply
                           causes the image to be loaded from the bottom
                           to the top.

            Return value:  LE_NONE on success or appropriate LE code.

            Compatibility: N/A

            See Also:      SPDXReadImage






























            c 1996 Paul D. Nettle.  All Rights Reserved.        307


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTIFork

            Description:   Spawn a child process.



                 StackSize Size of the stack for new child process.
                 Priority  Process priority.

            Remarks:       StackSize represents how much stack space to
                           reserve for a process in bytes.  Priority
                           specifies the number of ticks that the
                           process is allowed to stay active before it
                           is switched away.  The larger the number in
                           relation to other tasks, the more time it is
                           allocated.  Note that the MLTISetSpeed allows
                           you to gain a smoother task switching speed.
                           Though the speed may make the task run for a
                           shorter or longer amount of time, it will
                           still be active the same percentage of time
                           relative to the other tasks.

            Return value:  Process ID for task.  Note that when MLTIFork
                           is called, it returns to two tasks.  It's
                           parent task and the child task.  The only way
                           to track which task is running is by
                           interrogating the process ID for the task.
                           Make sure not to store these process IDs into
                           static variables, or process IDs can
                           overwrite other process IDs.

            Compatibility: N/A

            See Also:      MLTISetSpeed





















            c 1996 Paul D. Nettle.  All Rights Reserved.        308


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTIGetProcID

            Description:   Returns the process id for a task.



            Remarks:       Each task is assigned a process ID.  This is
                           how each process knows who it is since many
                           processes may be running the same code set.

            Return value:  Process ID for a task.

            Compatibility: N/A

            See Also:      MLTIFork








































            c 1996 Paul D. Nettle.  All Rights Reserved.        309


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTIInit

            Description:   Initialized the multitasking kernel.



                 ReservedStack  Amount of stack space to reserve
                 Speed          Frequency of task switching

            Remarks:       There are 2 types of processes in the Spandex
                           multitasker.  The first type is the parent
                           process (the main process).  The second type
                           refers to all of the child processes.  When
                           the parent process initialized the
                           multitasker, it tells the kernel how much
                           stack space to reserve with ReservedStack.
                           As each child is created with MLTIFork, they
                           select the amount of stack space for
                           themselves, until all stack space is
                           accounted for.  During the initialization, a
                           call to MLTISetSpeed is made with the Speed
                           parameter to select the frequency of the task
                           switching.

            Return value:  None.

            Compatibility: N/A

            See Also:      MLTIFork, MLTISetSpeed


























            c 1996 Paul D. Nettle.  All Rights Reserved.        310


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTISemaphoreGet

            Description:   Returns the value of a semaphore with owner's
                           ID.



                 PreviousOwner  Where to put the owner's ID

            Remarks:       There are two pieces of information
                           associated to a semaphore.  The first is the
                           value of the semaphore, and second is the
                           owner's process ID.

            Return value:  Returns the value of the semaphore, and the
                           owner's process ID is stored in
                           PreviousOwner.

            Compatibility: N/A

            See Also:      MLTISemaphoreSet


































            c 1996 Paul D. Nettle.  All Rights Reserved.        311


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTISemaphoreSet

            Description:   Sets the value of a semaphore with owner's
                           ID.



                 Value          New value for semaphore
                 PreviousOwner  Where to put the owner's ID

            Remarks:       There are two pieces of information
                           associated to a semaphore.  The first is the
                           value of the semaphore, and second is the
                           owner's process ID.  When setting a
                           semaphore, you receive the previous value of
                           the semaphore and you also receive the
                           process ID for the previous owner.

            Return value:  Returns the previous value of the semaphore,
                           and the previous owner's process ID stored in
                           PreviousOwner.

            Compatibility: N/A

            See Also:      MLTISemaphoreSet






























            c 1996 Paul D. Nettle.  All Rights Reserved.        312


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTISetPriority

            Description:   Set the priority for a given task.



                 ProcessID Process ID for task
                 Priority  Priority for task

            Remarks:       Priority specifies the number of ticks that
                           ProcessID is allowed to stay active before it
                           is switched away.  The larger the number in
                           relation to other tasks, the more time it is
                           allocated.  Note that the MLTISetSpeed allows
                           you to gain a smoother task switching speed.
                           Though the speed may make the task run for a
                           shorter or longer amount of time, it will
                           still be active the same percentage of time
                           relative to the other tasks.

            Return value:  None.

            Compatibility: N/A

            See Also:      MLTIFork






























            c 1996 Paul D. Nettle.  All Rights Reserved.        313


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTISetProcessActive

            Description:   Sets the active state of a process.



                 ProcessID Process ID for task
                 ActiveFlag     Active flag

            Remarks:       Each process may be active or inactive (never
                           receives a time slice).  A process can make
                           itself inactive, but may not make itself
                           active again (being inactive, it never gets a
                           time slice for witch to do so.)  To
                           deactivate any task, simply place the process
                           ID ProcessID and a zero into ActiveFlag.  To
                           reactivate a task, place a non-zero value
                           into ActiveFlag.

            Return value:  None.

            Compatibility: N/A

            See Also:      N/A































            c 1996 Paul D. Nettle.  All Rights Reserved.        314


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTISetSpeed

            Description:   Sets the task switching frequency.



                 Speed     Frequency of task switching

            Remarks:       The task switching is based on the timer
                           interrupt.  The frequency of this
                           interruption dictates how _smooth_ the task
                           switching appears to be, and also dictates
                           the minimum time between task switches.  The
                           lower the number the faster the switching.
                           The valid range for Speed is from 0x0000 -
                           0xffff.

            Return value:  None.

            Compatibility: N/A

            See Also:      MLTIFork

































            c 1996 Paul D. Nettle.  All Rights Reserved.        315


                SPANDEX REAL-TIME RENDERING SYSTEM _ THE SPANDEX API
                                      REFERENCE


                           MLTIUninit

            Description:   De-initializes the multitasking kernel.



            Remarks:       Restores all interrupt vectors and returns
                           the timer interrupt speed to normal.

            Return value:  None.

            Compatibility: N/A

            See Also:      MLTIInit









































            c 1996 Paul D. Nettle.  All Rights Reserved.        316


                     SPANDEX REAL-TIME RENDERING SYSTEM _ MACROS


                                 SECTION XI:  MACROS























































            c 1996 Paul D. Nettle.  All Rights Reserved.        317


                     SPANDEX REAL-TIME RENDERING SYSTEM _ MACROS


            Notes:

            1.                Don't forget to include the limitations of phong and bump
               mapping
            2.                Include dox for all supporting tools
            3.                adding to the render list for customized pipelines (polys
               must be pre-clipped)
            4.                Use RGB for lights, ambient, etc. in the USD file
            5.                Now supports self-illuminated materials
            6.                Location has to appear before target in USD.
            7.                USD files may no longer have normals
            8.                Changed USD color from 0-255 to 0-1.0
            9.                FUNC() or just #define __FUNCTION__ as a string
            10.                Explain wrapping textures will result in U/V values
            beyond the 0.0-1.0 range.









































            c 1996 Paul D. Nettle.  All Rights Reserved.        318